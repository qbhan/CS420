Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    DOUBLEQUOTE
    ELSE_IF
    PERIOD
    POINTER
    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list func_declaration
Rule 3     declaration_list -> declaration_list declaration SEMICOLON
Rule 4     declaration_list -> empty
Rule 5     func_declaration -> type ID LPAREN params RPAREN stmt_block
Rule 6     func_declaration -> type ID error params error stmt_block
Rule 7     func_declaration -> type ID LBRACE params error stmt_block
Rule 8     func_declaration -> type ID LBRACKET params error stmt_block
Rule 9     func_declaration -> type ID LPAREN params error stmt_block
Rule 10    func_declaration -> type ID error params RPAREN stmt_block
Rule 11    func_declaration -> type ID error params RBRACE stmt_block
Rule 12    func_declaration -> type ID error params RBRACKET stmt_block
Rule 13    func_declaration -> type ID LPAREN RPAREN stmt_block
Rule 14    func_declaration -> type ID LPAREN RBRACE stmt_block
Rule 15    func_declaration -> type ID LPAREN RBRACKET stmt_block
Rule 16    func_declaration -> type ID LBRACE RPAREN stmt_block
Rule 17    func_declaration -> type ID LBRACE RBRACKET stmt_block
Rule 18    func_declaration -> type ID LBRACE RBRACE stmt_block
Rule 19    func_declaration -> type ID LBRACKET RPAREN stmt_block
Rule 20    func_declaration -> type ID LBRACKET RBRACE stmt_block
Rule 21    func_declaration -> type ID LBRACKET RBRACKET stmt_block
Rule 22    func_declaration -> type ID LPAREN stmt_block
Rule 23    func_declaration -> type ID LBRACE stmt_block
Rule 24    func_declaration -> type ID LBRACKET stmt_block
Rule 25    func_declaration -> type ID RPAREN stmt_block
Rule 26    func_declaration -> type ID RBRACKET stmt_block
Rule 27    func_declaration -> type ID RBRACE stmt_block
Rule 28    func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block
Rule 29    func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block
Rule 30    func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block
Rule 31    func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block
Rule 32    func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block
Rule 33    func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block
Rule 34    func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block
Rule 35    func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block
Rule 36    func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block
Rule 37    func_declaration -> type TIMES ID params RPAREN stmt_block
Rule 38    func_declaration -> type TIMES ID params RBRACE stmt_block
Rule 39    func_declaration -> type TIMES ID params RBRACKET stmt_block
Rule 40    func_declaration -> type TIMES ID LPAREN params stmt_block
Rule 41    func_declaration -> type TIMES ID LBRACE params stmt_block
Rule 42    func_declaration -> type TIMES ID LBRACKET params stmt_block
Rule 43    func_declaration -> type TIMES ID params stmt_block
Rule 44    func_declaration -> type TIMES ID LPAREN RPAREN stmt_block
Rule 45    func_declaration -> type TIMES ID LBRACE RPAREN stmt_block
Rule 46    func_declaration -> type TIMES ID LPAREN RBRACE stmt_block
Rule 47    func_declaration -> type TIMES ID LBRACE RBRACE stmt_block
Rule 48    func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block
Rule 49    func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block
Rule 50    func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block
Rule 51    func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block
Rule 52    func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block
Rule 53    func_declaration -> type TIMES ID RPAREN stmt_block
Rule 54    func_declaration -> type TIMES ID RBRACE stmt_block
Rule 55    func_declaration -> type TIMES ID RBRACKET stmt_block
Rule 56    func_declaration -> type TIMES ID LPAREN stmt_block
Rule 57    func_declaration -> type TIMES ID LBRACE stmt_block
Rule 58    func_declaration -> type TIMES ID LBRACKET stmt_block
Rule 59    func_declaration -> type MAIN LPAREN params RPAREN stmt_block
Rule 60    func_declaration -> type MAIN LBRACE params RPAREN stmt_block
Rule 61    func_declaration -> type MAIN LPAREN params RBRACE stmt_block
Rule 62    func_declaration -> type MAIN LBRACE params RBRACE stmt_block
Rule 63    func_declaration -> type MAIN LBRACKET params RBRACE stmt_block
Rule 64    func_declaration -> type MAIN LBRACKET params RPAREN stmt_block
Rule 65    func_declaration -> type MAIN LBRACE params RBRACKET stmt_block
Rule 66    func_declaration -> type MAIN LPAREN params RBRACKET stmt_block
Rule 67    func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block
Rule 68    func_declaration -> type MAIN params RPAREN stmt_block
Rule 69    func_declaration -> type MAIN params RBRACE stmt_block
Rule 70    func_declaration -> type MAIN params RBRACKET stmt_block
Rule 71    func_declaration -> type MAIN LPAREN params stmt_block
Rule 72    func_declaration -> type MAIN LBRACE params stmt_block
Rule 73    func_declaration -> type MAIN LBRACKET params stmt_block
Rule 74    func_declaration -> type MAIN params stmt_block
Rule 75    func_declaration -> type MAIN LPAREN RPAREN stmt_block
Rule 76    func_declaration -> type MAIN LBRACE RPAREN stmt_block
Rule 77    func_declaration -> type MAIN LPAREN RBRACE stmt_block
Rule 78    func_declaration -> type MAIN LBRACE RBRACE stmt_block
Rule 79    func_declaration -> type MAIN LBRACKET RBRACE stmt_block
Rule 80    func_declaration -> type MAIN LBRACKET RPAREN stmt_block
Rule 81    func_declaration -> type MAIN LBRACE RBRACKET stmt_block
Rule 82    func_declaration -> type MAIN LPAREN RBRACKET stmt_block
Rule 83    func_declaration -> type MAIN LBRACKET RBRACKET stmt_block
Rule 84    func_declaration -> type MAIN RPAREN stmt_block
Rule 85    func_declaration -> type MAIN RBRACE stmt_block
Rule 86    func_declaration -> type MAIN RBRACKET stmt_block
Rule 87    func_declaration -> type MAIN LPAREN stmt_block
Rule 88    func_declaration -> type MAIN LBRACE stmt_block
Rule 89    func_declaration -> type MAIN LBRACKET stmt_block
Rule 90    params -> VOID
Rule 91    params -> param_list
Rule 92    param_list -> param
Rule 93    param_list -> param_list COMMA param
Rule 94    param -> type ID
Rule 95    param -> type TIMES ID
Rule 96    genstmt -> mstmt
Rule 97    genstmt -> umstmt
Rule 98    mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt
Rule 99    mstmt -> stmt
Rule 100   umstmt -> IF LPAREN expr RPAREN genstmt
Rule 101   umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt
Rule 102   stmt -> expr SEMICOLON
Rule 103   stmt -> declaration SEMICOLON
Rule 104   stmt -> stmt_block
Rule 105   stmt -> stmt_forloop
Rule 106   stmt -> stmt_return
Rule 107   stmt -> SEMICOLON
Rule 108   stmt -> expr error
Rule 109   stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON
Rule 110   stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON
Rule 111   stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON
Rule 112   stmt -> PRINT LPAREN argument_list SEMICOLON
Rule 113   stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON
Rule 114   stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON
Rule 115   stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON
Rule 116   stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON
Rule 117   stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON
Rule 118   stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON
Rule 119   stmt -> PRINT LBRACE argument_list SEMICOLON
Rule 120   stmt -> PRINT LBRACKET argument_list SEMICOLON
Rule 121   stmt -> PRINT error argument_list SEMICOLON
Rule 122   stmt -> PRINT error argument_list RPAREN SEMICOLON
Rule 123   stmt -> PRINT error argument_list RBRACE SEMICOLON
Rule 124   stmt -> PRINT error argument_list RBRACKET SEMICOLON
Rule 125   stmt -> PRINT LPAREN argument_list RBRACE error
Rule 126   stmt -> PRINT LPAREN argument_list RBRACKET error
Rule 127   stmt -> PRINT LBRACE argument_list RPAREN error
Rule 128   stmt -> PRINT LBRACKET argument_list RPAREN error
Rule 129   stmt -> PRINT LBRACE argument_list RBRACE error
Rule 130   stmt -> PRINT LBRACKET argument_list RBRACE error
Rule 131   stmt -> PRINT LBRACE argument_list RBRACKET error
Rule 132   stmt -> PRINT LBRACKET argument_list RBRACKET error
Rule 133   stmt -> PRINT error argument_list RPAREN error
Rule 134   stmt -> PRINT error argument_list RBRACE error
Rule 135   stmt -> PRINT error argument_list RBRACKET error
Rule 136   declaration -> declaration COMMA idbracket
Rule 137   declaration -> declaration COMMA TIMES idbracket
Rule 138   declaration -> type idbracket
Rule 139   declaration -> type TIMES idbracket
Rule 140   idbracket -> ID
Rule 141   idbracket -> ID LBRACKET INUM RBRACKET
Rule 142   idbracket -> ID LBRACKET INUM RBRACE
Rule 143   idbracket -> ID LBRACE INUM RBRACKET
Rule 144   idbracket -> ID LPAREN INUM RBRACKET
Rule 145   idbracket -> ID LBRACKET INUM RPAREN
Rule 146   idbracket -> ID LBRACE INUM RPAREN
Rule 147   idbracket -> ID LPAREN INUM RBRACE
Rule 148   idbracket -> ID LPAREN INUM RPAREN
Rule 149   idbracket -> ID LBRACE INUM RBRACE
Rule 150   type -> INT
Rule 151   type -> FLOAT
Rule 152   type -> VOID
Rule 153   stmt_block -> LBRACE stmt_list RBRACE
Rule 154   stmt_block -> LBRACKET stmt_list RPAREN
Rule 155   stmt_block -> LBRACKET stmt_list RBRACE
Rule 156   stmt_block -> LBRACKET stmt_list RBRACKET
Rule 157   stmt_block -> LBRACE stmt_list RPAREN
Rule 158   stmt_block -> LBRACE stmt_list RBRACKET
Rule 159   stmt_block -> error stmt_list RBRACKET
Rule 160   stmt_block -> error stmt_list RBRACE
Rule 161   stmt_block -> error stmt_list RPAREN
Rule 162   stmt_list -> stmt_list genstmt
Rule 163   stmt_list -> empty
Rule 164   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 165   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 166   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 167   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 168   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 169   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 170   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 171   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
Rule 172   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 173   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 174   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 175   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 176   stmt_return -> RETURN expr SEMICOLON
Rule 177   stmt_return -> RETURN expr error
Rule 178   stmt_return -> RETURN SEMICOLON
Rule 179   stmt_return -> RETURN error
Rule 180   expr -> ID EQUAL expr
Rule 181   expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr
Rule 182   expr -> TIMES ID EQUAL expr
Rule 183   expr -> incr_expr
Rule 184   expr -> basic_expr
Rule 185   basic_expr -> basic_expr compare arith_expr
Rule 186   basic_expr -> arith_expr
Rule 187   compare -> EQ
Rule 188   compare -> NEQ
Rule 189   compare -> GT
Rule 190   compare -> LT
Rule 191   incr_expr -> ID INCREMENT
Rule 192   incr_expr -> INCREMENT ID
Rule 193   arith_expr -> MINUS arith_expr
Rule 194   arith_expr -> LPAREN arith_expr RPAREN
Rule 195   arith_expr -> arith_expr PLUS arith_expr
Rule 196   arith_expr -> arith_expr MINUS arith_expr
Rule 197   arith_expr -> arith_expr TIMES arith_expr
Rule 198   arith_expr -> arith_expr DIV arith_expr
Rule 199   arith_expr -> ID
Rule 200   arith_expr -> FNUM
Rule 201   arith_expr -> INUM
Rule 202   arith_expr -> TIMES ID
Rule 203   arith_expr -> TIMES LPAREN arith_expr RPAREN
Rule 204   arith_expr -> TIMES ID LPAREN argument_list RPAREN
Rule 205   arith_expr -> ADDRESS ID
Rule 206   arith_expr -> ID LBRACKET arith_expr RBRACKET
Rule 207   arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET
Rule 208   arith_expr -> ID LPAREN argument_list RPAREN
Rule 209   argument_list -> argument
Rule 210   argument_list -> argument_list COMMA argument
Rule 211   argument -> empty
Rule 212   argument -> arith_expr
Rule 213   argument -> LITERAL
Rule 214   argument -> error
Rule 215   empty -> <empty>

Terminals, with rules where they appear

ADDRESS              : 205
COLON                : 
COMMA                : 93 136 137 210
DIV                  : 198
DOUBLEQUOTE          : 
ELSE                 : 98 101
ELSE_IF              : 
EQ                   : 187
EQUAL                : 180 181 182
FLOAT                : 151
FNUM                 : 200
FOR                  : 164 165 166 167 168 169 170 171 172 173 174 175
GT                   : 189
ID                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 94 95 140 141 142 143 144 145 146 147 148 149 180 181 182 191 192 199 202 204 205 206 207 208
IF                   : 98 100 101
INCREMENT            : 191 192
INT                  : 150
INUM                 : 141 142 143 144 145 146 147 148 149 201
LBRACE               : 7 16 17 18 23 29 31 35 41 45 47 51 57 60 62 65 72 76 78 81 88 113 115 117 119 127 129 131 143 146 149 153 157 158 166 167 171
LBRACKET             : 8 19 20 21 24 32 33 36 42 48 49 52 58 63 64 67 73 79 80 83 89 114 116 118 120 128 130 132 141 142 145 154 155 156 168 169 172 181 206 207
LITERAL              : 213
LPAREN               : 5 9 13 14 15 22 28 30 34 40 44 46 50 56 59 61 66 71 75 77 82 87 98 100 101 109 110 111 112 125 126 144 147 148 164 165 170 194 203 204 208
LT                   : 190
MAIN                 : 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
MINUS                : 193 196
NEQ                  : 188
PERIOD               : 
PLUS                 : 195
POINTER              : 
PRINT                : 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
QUOTE                : 
RBRACE               : 11 14 18 20 27 30 31 32 38 46 47 48 54 61 62 63 69 77 78 79 85 110 115 116 123 125 129 130 134 142 147 149 153 155 160 165 167 168 174
RBRACKET             : 12 15 17 21 26 34 35 36 39 50 51 52 55 65 66 67 70 81 82 83 86 111 117 118 124 126 131 132 135 141 143 144 156 158 159 170 171 172 175 181 206 207
RETURN               : 176 177 178 179
RPAREN               : 5 10 13 16 19 25 28 29 33 37 44 45 49 53 59 60 64 68 75 76 80 84 98 100 101 109 113 114 122 127 128 133 145 146 148 154 157 161 164 166 169 173 194 203 204 208
SEMICOLON            : 3 102 103 107 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 178
TIMES                : 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 95 137 139 182 197 202 203 204 207
VOID                 : 90 152
error                : 6 6 7 8 9 10 11 12 108 121 122 123 124 125 126 127 128 129 130 131 132 133 133 134 134 135 135 159 160 161 171 177 179 214

Nonterminals, with rules where they appear

argument             : 209 210
argument_list        : 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 204 208 210
arith_expr           : 181 185 186 193 194 195 195 196 196 197 197 198 198 203 206 207 212
basic_expr           : 184 185
compare              : 185
declaration          : 3 103 136 137
declaration_list     : 1 2 3
empty                : 4 163 211
expr                 : 98 100 101 102 108 164 164 164 165 165 165 166 166 166 167 167 167 168 168 168 169 169 169 170 170 170 171 171 172 172 172 173 173 173 174 174 174 175 175 175 176 177 180 181 182
func_declaration     : 2
genstmt              : 100 162
idbracket            : 136 137 138 139
incr_expr            : 183
mstmt                : 96 98 98 101
param                : 92 93
param_list           : 91 93
params               : 5 6 7 8 9 10 11 12 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
program              : 0
stmt                 : 99 164 165 166 167 168 169 170 171 172 173 174 175
stmt_block           : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 104
stmt_forloop         : 105
stmt_list            : 153 154 155 156 157 158 159 160 161 162
stmt_return          : 106
type                 : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 94 95 138 139
umstmt               : 97 101

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list func_declaration
    (3) declaration_list -> . declaration_list declaration SEMICOLON
    (4) declaration_list -> . empty
    (215) empty -> .

    INT             reduce using rule 215 (empty -> .)
    FLOAT           reduce using rule 215 (empty -> .)
    VOID            reduce using rule 215 (empty -> .)
    $end            reduce using rule 215 (empty -> .)

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . func_declaration
    (3) declaration_list -> declaration_list . declaration SEMICOLON
    (5) func_declaration -> . type ID LPAREN params RPAREN stmt_block
    (6) func_declaration -> . type ID error params error stmt_block
    (7) func_declaration -> . type ID LBRACE params error stmt_block
    (8) func_declaration -> . type ID LBRACKET params error stmt_block
    (9) func_declaration -> . type ID LPAREN params error stmt_block
    (10) func_declaration -> . type ID error params RPAREN stmt_block
    (11) func_declaration -> . type ID error params RBRACE stmt_block
    (12) func_declaration -> . type ID error params RBRACKET stmt_block
    (13) func_declaration -> . type ID LPAREN RPAREN stmt_block
    (14) func_declaration -> . type ID LPAREN RBRACE stmt_block
    (15) func_declaration -> . type ID LPAREN RBRACKET stmt_block
    (16) func_declaration -> . type ID LBRACE RPAREN stmt_block
    (17) func_declaration -> . type ID LBRACE RBRACKET stmt_block
    (18) func_declaration -> . type ID LBRACE RBRACE stmt_block
    (19) func_declaration -> . type ID LBRACKET RPAREN stmt_block
    (20) func_declaration -> . type ID LBRACKET RBRACE stmt_block
    (21) func_declaration -> . type ID LBRACKET RBRACKET stmt_block
    (22) func_declaration -> . type ID LPAREN stmt_block
    (23) func_declaration -> . type ID LBRACE stmt_block
    (24) func_declaration -> . type ID LBRACKET stmt_block
    (25) func_declaration -> . type ID RPAREN stmt_block
    (26) func_declaration -> . type ID RBRACKET stmt_block
    (27) func_declaration -> . type ID RBRACE stmt_block
    (28) func_declaration -> . type TIMES ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> . type TIMES ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> . type TIMES ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> . type TIMES ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> . type TIMES ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> . type TIMES ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> . type TIMES ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> . type TIMES ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> . type TIMES ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> . type TIMES ID params RPAREN stmt_block
    (38) func_declaration -> . type TIMES ID params RBRACE stmt_block
    (39) func_declaration -> . type TIMES ID params RBRACKET stmt_block
    (40) func_declaration -> . type TIMES ID LPAREN params stmt_block
    (41) func_declaration -> . type TIMES ID LBRACE params stmt_block
    (42) func_declaration -> . type TIMES ID LBRACKET params stmt_block
    (43) func_declaration -> . type TIMES ID params stmt_block
    (44) func_declaration -> . type TIMES ID LPAREN RPAREN stmt_block
    (45) func_declaration -> . type TIMES ID LBRACE RPAREN stmt_block
    (46) func_declaration -> . type TIMES ID LPAREN RBRACE stmt_block
    (47) func_declaration -> . type TIMES ID LBRACE RBRACE stmt_block
    (48) func_declaration -> . type TIMES ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> . type TIMES ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> . type TIMES ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> . type TIMES ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> . type TIMES ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> . type TIMES ID RPAREN stmt_block
    (54) func_declaration -> . type TIMES ID RBRACE stmt_block
    (55) func_declaration -> . type TIMES ID RBRACKET stmt_block
    (56) func_declaration -> . type TIMES ID LPAREN stmt_block
    (57) func_declaration -> . type TIMES ID LBRACE stmt_block
    (58) func_declaration -> . type TIMES ID LBRACKET stmt_block
    (59) func_declaration -> . type MAIN LPAREN params RPAREN stmt_block
    (60) func_declaration -> . type MAIN LBRACE params RPAREN stmt_block
    (61) func_declaration -> . type MAIN LPAREN params RBRACE stmt_block
    (62) func_declaration -> . type MAIN LBRACE params RBRACE stmt_block
    (63) func_declaration -> . type MAIN LBRACKET params RBRACE stmt_block
    (64) func_declaration -> . type MAIN LBRACKET params RPAREN stmt_block
    (65) func_declaration -> . type MAIN LBRACE params RBRACKET stmt_block
    (66) func_declaration -> . type MAIN LPAREN params RBRACKET stmt_block
    (67) func_declaration -> . type MAIN LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> . type MAIN params RPAREN stmt_block
    (69) func_declaration -> . type MAIN params RBRACE stmt_block
    (70) func_declaration -> . type MAIN params RBRACKET stmt_block
    (71) func_declaration -> . type MAIN LPAREN params stmt_block
    (72) func_declaration -> . type MAIN LBRACE params stmt_block
    (73) func_declaration -> . type MAIN LBRACKET params stmt_block
    (74) func_declaration -> . type MAIN params stmt_block
    (75) func_declaration -> . type MAIN LPAREN RPAREN stmt_block
    (76) func_declaration -> . type MAIN LBRACE RPAREN stmt_block
    (77) func_declaration -> . type MAIN LPAREN RBRACE stmt_block
    (78) func_declaration -> . type MAIN LBRACE RBRACE stmt_block
    (79) func_declaration -> . type MAIN LBRACKET RBRACE stmt_block
    (80) func_declaration -> . type MAIN LBRACKET RPAREN stmt_block
    (81) func_declaration -> . type MAIN LBRACE RBRACKET stmt_block
    (82) func_declaration -> . type MAIN LPAREN RBRACKET stmt_block
    (83) func_declaration -> . type MAIN LBRACKET RBRACKET stmt_block
    (84) func_declaration -> . type MAIN RPAREN stmt_block
    (85) func_declaration -> . type MAIN RBRACE stmt_block
    (86) func_declaration -> . type MAIN RBRACKET stmt_block
    (87) func_declaration -> . type MAIN LPAREN stmt_block
    (88) func_declaration -> . type MAIN LBRACE stmt_block
    (89) func_declaration -> . type MAIN LBRACKET stmt_block
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    $end            reduce using rule 1 (program -> declaration_list .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9

    func_declaration               shift and go to state 4
    declaration                    shift and go to state 5
    type                           shift and go to state 6

state 3

    (4) declaration_list -> empty .

    INT             reduce using rule 4 (declaration_list -> empty .)
    FLOAT           reduce using rule 4 (declaration_list -> empty .)
    VOID            reduce using rule 4 (declaration_list -> empty .)
    $end            reduce using rule 4 (declaration_list -> empty .)


state 4

    (2) declaration_list -> declaration_list func_declaration .

    INT             reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    FLOAT           reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list func_declaration .)


state 5

    (3) declaration_list -> declaration_list declaration . SEMICOLON
    (136) declaration -> declaration . COMMA idbracket
    (137) declaration -> declaration . COMMA TIMES idbracket

    SEMICOLON       shift and go to state 10
    COMMA           shift and go to state 11


state 6

    (5) func_declaration -> type . ID LPAREN params RPAREN stmt_block
    (6) func_declaration -> type . ID error params error stmt_block
    (7) func_declaration -> type . ID LBRACE params error stmt_block
    (8) func_declaration -> type . ID LBRACKET params error stmt_block
    (9) func_declaration -> type . ID LPAREN params error stmt_block
    (10) func_declaration -> type . ID error params RPAREN stmt_block
    (11) func_declaration -> type . ID error params RBRACE stmt_block
    (12) func_declaration -> type . ID error params RBRACKET stmt_block
    (13) func_declaration -> type . ID LPAREN RPAREN stmt_block
    (14) func_declaration -> type . ID LPAREN RBRACE stmt_block
    (15) func_declaration -> type . ID LPAREN RBRACKET stmt_block
    (16) func_declaration -> type . ID LBRACE RPAREN stmt_block
    (17) func_declaration -> type . ID LBRACE RBRACKET stmt_block
    (18) func_declaration -> type . ID LBRACE RBRACE stmt_block
    (19) func_declaration -> type . ID LBRACKET RPAREN stmt_block
    (20) func_declaration -> type . ID LBRACKET RBRACE stmt_block
    (21) func_declaration -> type . ID LBRACKET RBRACKET stmt_block
    (22) func_declaration -> type . ID LPAREN stmt_block
    (23) func_declaration -> type . ID LBRACE stmt_block
    (24) func_declaration -> type . ID LBRACKET stmt_block
    (25) func_declaration -> type . ID RPAREN stmt_block
    (26) func_declaration -> type . ID RBRACKET stmt_block
    (27) func_declaration -> type . ID RBRACE stmt_block
    (28) func_declaration -> type . TIMES ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> type . TIMES ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> type . TIMES ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> type . TIMES ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> type . TIMES ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type . TIMES ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type . TIMES ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type . TIMES ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type . TIMES ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type . TIMES ID params RPAREN stmt_block
    (38) func_declaration -> type . TIMES ID params RBRACE stmt_block
    (39) func_declaration -> type . TIMES ID params RBRACKET stmt_block
    (40) func_declaration -> type . TIMES ID LPAREN params stmt_block
    (41) func_declaration -> type . TIMES ID LBRACE params stmt_block
    (42) func_declaration -> type . TIMES ID LBRACKET params stmt_block
    (43) func_declaration -> type . TIMES ID params stmt_block
    (44) func_declaration -> type . TIMES ID LPAREN RPAREN stmt_block
    (45) func_declaration -> type . TIMES ID LBRACE RPAREN stmt_block
    (46) func_declaration -> type . TIMES ID LPAREN RBRACE stmt_block
    (47) func_declaration -> type . TIMES ID LBRACE RBRACE stmt_block
    (48) func_declaration -> type . TIMES ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> type . TIMES ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> type . TIMES ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> type . TIMES ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> type . TIMES ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type . TIMES ID RPAREN stmt_block
    (54) func_declaration -> type . TIMES ID RBRACE stmt_block
    (55) func_declaration -> type . TIMES ID RBRACKET stmt_block
    (56) func_declaration -> type . TIMES ID LPAREN stmt_block
    (57) func_declaration -> type . TIMES ID LBRACE stmt_block
    (58) func_declaration -> type . TIMES ID LBRACKET stmt_block
    (59) func_declaration -> type . MAIN LPAREN params RPAREN stmt_block
    (60) func_declaration -> type . MAIN LBRACE params RPAREN stmt_block
    (61) func_declaration -> type . MAIN LPAREN params RBRACE stmt_block
    (62) func_declaration -> type . MAIN LBRACE params RBRACE stmt_block
    (63) func_declaration -> type . MAIN LBRACKET params RBRACE stmt_block
    (64) func_declaration -> type . MAIN LBRACKET params RPAREN stmt_block
    (65) func_declaration -> type . MAIN LBRACE params RBRACKET stmt_block
    (66) func_declaration -> type . MAIN LPAREN params RBRACKET stmt_block
    (67) func_declaration -> type . MAIN LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> type . MAIN params RPAREN stmt_block
    (69) func_declaration -> type . MAIN params RBRACE stmt_block
    (70) func_declaration -> type . MAIN params RBRACKET stmt_block
    (71) func_declaration -> type . MAIN LPAREN params stmt_block
    (72) func_declaration -> type . MAIN LBRACE params stmt_block
    (73) func_declaration -> type . MAIN LBRACKET params stmt_block
    (74) func_declaration -> type . MAIN params stmt_block
    (75) func_declaration -> type . MAIN LPAREN RPAREN stmt_block
    (76) func_declaration -> type . MAIN LBRACE RPAREN stmt_block
    (77) func_declaration -> type . MAIN LPAREN RBRACE stmt_block
    (78) func_declaration -> type . MAIN LBRACE RBRACE stmt_block
    (79) func_declaration -> type . MAIN LBRACKET RBRACE stmt_block
    (80) func_declaration -> type . MAIN LBRACKET RPAREN stmt_block
    (81) func_declaration -> type . MAIN LBRACE RBRACKET stmt_block
    (82) func_declaration -> type . MAIN LPAREN RBRACKET stmt_block
    (83) func_declaration -> type . MAIN LBRACKET RBRACKET stmt_block
    (84) func_declaration -> type . MAIN RPAREN stmt_block
    (85) func_declaration -> type . MAIN RBRACE stmt_block
    (86) func_declaration -> type . MAIN RBRACKET stmt_block
    (87) func_declaration -> type . MAIN LPAREN stmt_block
    (88) func_declaration -> type . MAIN LBRACE stmt_block
    (89) func_declaration -> type . MAIN LBRACKET stmt_block
    (138) declaration -> type . idbracket
    (139) declaration -> type . TIMES idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 12
    TIMES           shift and go to state 13
    MAIN            shift and go to state 14

    idbracket                      shift and go to state 15

state 7

    (150) type -> INT .

    ID              reduce using rule 150 (type -> INT .)
    TIMES           reduce using rule 150 (type -> INT .)
    MAIN            reduce using rule 150 (type -> INT .)


state 8

    (151) type -> FLOAT .

    ID              reduce using rule 151 (type -> FLOAT .)
    TIMES           reduce using rule 151 (type -> FLOAT .)
    MAIN            reduce using rule 151 (type -> FLOAT .)


state 9

    (152) type -> VOID .

    ID              reduce using rule 152 (type -> VOID .)
    TIMES           reduce using rule 152 (type -> VOID .)
    MAIN            reduce using rule 152 (type -> VOID .)


state 10

    (3) declaration_list -> declaration_list declaration SEMICOLON .

    INT             reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    FLOAT           reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    VOID            reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)


state 11

    (136) declaration -> declaration COMMA . idbracket
    (137) declaration -> declaration COMMA . TIMES idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    TIMES           shift and go to state 17
    ID              shift and go to state 18

    idbracket                      shift and go to state 16

state 12

    (5) func_declaration -> type ID . LPAREN params RPAREN stmt_block
    (6) func_declaration -> type ID . error params error stmt_block
    (7) func_declaration -> type ID . LBRACE params error stmt_block
    (8) func_declaration -> type ID . LBRACKET params error stmt_block
    (9) func_declaration -> type ID . LPAREN params error stmt_block
    (10) func_declaration -> type ID . error params RPAREN stmt_block
    (11) func_declaration -> type ID . error params RBRACE stmt_block
    (12) func_declaration -> type ID . error params RBRACKET stmt_block
    (13) func_declaration -> type ID . LPAREN RPAREN stmt_block
    (14) func_declaration -> type ID . LPAREN RBRACE stmt_block
    (15) func_declaration -> type ID . LPAREN RBRACKET stmt_block
    (16) func_declaration -> type ID . LBRACE RPAREN stmt_block
    (17) func_declaration -> type ID . LBRACE RBRACKET stmt_block
    (18) func_declaration -> type ID . LBRACE RBRACE stmt_block
    (19) func_declaration -> type ID . LBRACKET RPAREN stmt_block
    (20) func_declaration -> type ID . LBRACKET RBRACE stmt_block
    (21) func_declaration -> type ID . LBRACKET RBRACKET stmt_block
    (22) func_declaration -> type ID . LPAREN stmt_block
    (23) func_declaration -> type ID . LBRACE stmt_block
    (24) func_declaration -> type ID . LBRACKET stmt_block
    (25) func_declaration -> type ID . RPAREN stmt_block
    (26) func_declaration -> type ID . RBRACKET stmt_block
    (27) func_declaration -> type ID . RBRACE stmt_block
    (140) idbracket -> ID .
    (141) idbracket -> ID . LBRACKET INUM RBRACKET
    (142) idbracket -> ID . LBRACKET INUM RBRACE
    (143) idbracket -> ID . LBRACE INUM RBRACKET
    (144) idbracket -> ID . LPAREN INUM RBRACKET
    (145) idbracket -> ID . LBRACKET INUM RPAREN
    (146) idbracket -> ID . LBRACE INUM RPAREN
    (147) idbracket -> ID . LPAREN INUM RBRACE
    (148) idbracket -> ID . LPAREN INUM RPAREN
    (149) idbracket -> ID . LBRACE INUM RBRACE

    LPAREN          shift and go to state 19
    error           shift and go to state 21
    LBRACE          shift and go to state 22
    LBRACKET        shift and go to state 23
    RPAREN          shift and go to state 20
    RBRACKET        shift and go to state 25
    RBRACE          shift and go to state 24
    SEMICOLON       reduce using rule 140 (idbracket -> ID .)
    COMMA           reduce using rule 140 (idbracket -> ID .)


state 13

    (28) func_declaration -> type TIMES . ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> type TIMES . ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> type TIMES . ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> type TIMES . ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> type TIMES . ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type TIMES . ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type TIMES . ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type TIMES . ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type TIMES . ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type TIMES . ID params RPAREN stmt_block
    (38) func_declaration -> type TIMES . ID params RBRACE stmt_block
    (39) func_declaration -> type TIMES . ID params RBRACKET stmt_block
    (40) func_declaration -> type TIMES . ID LPAREN params stmt_block
    (41) func_declaration -> type TIMES . ID LBRACE params stmt_block
    (42) func_declaration -> type TIMES . ID LBRACKET params stmt_block
    (43) func_declaration -> type TIMES . ID params stmt_block
    (44) func_declaration -> type TIMES . ID LPAREN RPAREN stmt_block
    (45) func_declaration -> type TIMES . ID LBRACE RPAREN stmt_block
    (46) func_declaration -> type TIMES . ID LPAREN RBRACE stmt_block
    (47) func_declaration -> type TIMES . ID LBRACE RBRACE stmt_block
    (48) func_declaration -> type TIMES . ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> type TIMES . ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> type TIMES . ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> type TIMES . ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> type TIMES . ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type TIMES . ID RPAREN stmt_block
    (54) func_declaration -> type TIMES . ID RBRACE stmt_block
    (55) func_declaration -> type TIMES . ID RBRACKET stmt_block
    (56) func_declaration -> type TIMES . ID LPAREN stmt_block
    (57) func_declaration -> type TIMES . ID LBRACE stmt_block
    (58) func_declaration -> type TIMES . ID LBRACKET stmt_block
    (139) declaration -> type TIMES . idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 26

    idbracket                      shift and go to state 27

state 14

    (59) func_declaration -> type MAIN . LPAREN params RPAREN stmt_block
    (60) func_declaration -> type MAIN . LBRACE params RPAREN stmt_block
    (61) func_declaration -> type MAIN . LPAREN params RBRACE stmt_block
    (62) func_declaration -> type MAIN . LBRACE params RBRACE stmt_block
    (63) func_declaration -> type MAIN . LBRACKET params RBRACE stmt_block
    (64) func_declaration -> type MAIN . LBRACKET params RPAREN stmt_block
    (65) func_declaration -> type MAIN . LBRACE params RBRACKET stmt_block
    (66) func_declaration -> type MAIN . LPAREN params RBRACKET stmt_block
    (67) func_declaration -> type MAIN . LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> type MAIN . params RPAREN stmt_block
    (69) func_declaration -> type MAIN . params RBRACE stmt_block
    (70) func_declaration -> type MAIN . params RBRACKET stmt_block
    (71) func_declaration -> type MAIN . LPAREN params stmt_block
    (72) func_declaration -> type MAIN . LBRACE params stmt_block
    (73) func_declaration -> type MAIN . LBRACKET params stmt_block
    (74) func_declaration -> type MAIN . params stmt_block
    (75) func_declaration -> type MAIN . LPAREN RPAREN stmt_block
    (76) func_declaration -> type MAIN . LBRACE RPAREN stmt_block
    (77) func_declaration -> type MAIN . LPAREN RBRACE stmt_block
    (78) func_declaration -> type MAIN . LBRACE RBRACE stmt_block
    (79) func_declaration -> type MAIN . LBRACKET RBRACE stmt_block
    (80) func_declaration -> type MAIN . LBRACKET RPAREN stmt_block
    (81) func_declaration -> type MAIN . LBRACE RBRACKET stmt_block
    (82) func_declaration -> type MAIN . LPAREN RBRACKET stmt_block
    (83) func_declaration -> type MAIN . LBRACKET RBRACKET stmt_block
    (84) func_declaration -> type MAIN . RPAREN stmt_block
    (85) func_declaration -> type MAIN . RBRACE stmt_block
    (86) func_declaration -> type MAIN . RBRACKET stmt_block
    (87) func_declaration -> type MAIN . LPAREN stmt_block
    (88) func_declaration -> type MAIN . LBRACE stmt_block
    (89) func_declaration -> type MAIN . LBRACKET stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    LPAREN          shift and go to state 29
    LBRACE          shift and go to state 32
    LBRACKET        shift and go to state 34
    RPAREN          shift and go to state 31
    RBRACE          shift and go to state 33
    RBRACKET        shift and go to state 35
    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 30
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 15

    (138) declaration -> type idbracket .

    SEMICOLON       reduce using rule 138 (declaration -> type idbracket .)
    COMMA           reduce using rule 138 (declaration -> type idbracket .)


state 16

    (136) declaration -> declaration COMMA idbracket .

    SEMICOLON       reduce using rule 136 (declaration -> declaration COMMA idbracket .)
    COMMA           reduce using rule 136 (declaration -> declaration COMMA idbracket .)


state 17

    (137) declaration -> declaration COMMA TIMES . idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 18

    idbracket                      shift and go to state 39

state 18

    (140) idbracket -> ID .
    (141) idbracket -> ID . LBRACKET INUM RBRACKET
    (142) idbracket -> ID . LBRACKET INUM RBRACE
    (143) idbracket -> ID . LBRACE INUM RBRACKET
    (144) idbracket -> ID . LPAREN INUM RBRACKET
    (145) idbracket -> ID . LBRACKET INUM RPAREN
    (146) idbracket -> ID . LBRACE INUM RPAREN
    (147) idbracket -> ID . LPAREN INUM RBRACE
    (148) idbracket -> ID . LPAREN INUM RPAREN
    (149) idbracket -> ID . LBRACE INUM RBRACE

    SEMICOLON       reduce using rule 140 (idbracket -> ID .)
    COMMA           reduce using rule 140 (idbracket -> ID .)
    LBRACKET        shift and go to state 40
    LBRACE          shift and go to state 41
    LPAREN          shift and go to state 42


state 19

    (5) func_declaration -> type ID LPAREN . params RPAREN stmt_block
    (9) func_declaration -> type ID LPAREN . params error stmt_block
    (13) func_declaration -> type ID LPAREN . RPAREN stmt_block
    (14) func_declaration -> type ID LPAREN . RBRACE stmt_block
    (15) func_declaration -> type ID LPAREN . RBRACKET stmt_block
    (22) func_declaration -> type ID LPAREN . stmt_block
    (144) idbracket -> ID LPAREN . INUM RBRACKET
    (147) idbracket -> ID LPAREN . INUM RBRACE
    (148) idbracket -> ID LPAREN . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 44
    RBRACE          shift and go to state 47
    RBRACKET        shift and go to state 48
    INUM            shift and go to state 49
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 43
    stmt_block                     shift and go to state 45
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 20

    (25) func_declaration -> type ID RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 52

state 21

    (6) func_declaration -> type ID error . params error stmt_block
    (10) func_declaration -> type ID error . params RPAREN stmt_block
    (11) func_declaration -> type ID error . params RBRACE stmt_block
    (12) func_declaration -> type ID error . params RBRACKET stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 53
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 22

    (7) func_declaration -> type ID LBRACE . params error stmt_block
    (16) func_declaration -> type ID LBRACE . RPAREN stmt_block
    (17) func_declaration -> type ID LBRACE . RBRACKET stmt_block
    (18) func_declaration -> type ID LBRACE . RBRACE stmt_block
    (23) func_declaration -> type ID LBRACE . stmt_block
    (143) idbracket -> ID LBRACE . INUM RBRACKET
    (146) idbracket -> ID LBRACE . INUM RPAREN
    (149) idbracket -> ID LBRACE . INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 56
    RBRACKET        shift and go to state 57
    RBRACE          shift and go to state 58
    INUM            shift and go to state 59
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 54
    stmt_block                     shift and go to state 55
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 23

    (8) func_declaration -> type ID LBRACKET . params error stmt_block
    (19) func_declaration -> type ID LBRACKET . RPAREN stmt_block
    (20) func_declaration -> type ID LBRACKET . RBRACE stmt_block
    (21) func_declaration -> type ID LBRACKET . RBRACKET stmt_block
    (24) func_declaration -> type ID LBRACKET . stmt_block
    (141) idbracket -> ID LBRACKET . INUM RBRACKET
    (142) idbracket -> ID LBRACKET . INUM RBRACE
    (145) idbracket -> ID LBRACKET . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 62
    RBRACE          shift and go to state 63
    RBRACKET        shift and go to state 64
    INUM            shift and go to state 65
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 60
    stmt_block                     shift and go to state 61
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 24

    (27) func_declaration -> type ID RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 66

state 25

    (26) func_declaration -> type ID RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 67

state 26

    (28) func_declaration -> type TIMES ID . LPAREN params RPAREN stmt_block
    (29) func_declaration -> type TIMES ID . LBRACE params RPAREN stmt_block
    (30) func_declaration -> type TIMES ID . LPAREN params RBRACE stmt_block
    (31) func_declaration -> type TIMES ID . LBRACE params RBRACE stmt_block
    (32) func_declaration -> type TIMES ID . LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type TIMES ID . LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type TIMES ID . LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type TIMES ID . LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type TIMES ID . LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type TIMES ID . params RPAREN stmt_block
    (38) func_declaration -> type TIMES ID . params RBRACE stmt_block
    (39) func_declaration -> type TIMES ID . params RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID . LPAREN params stmt_block
    (41) func_declaration -> type TIMES ID . LBRACE params stmt_block
    (42) func_declaration -> type TIMES ID . LBRACKET params stmt_block
    (43) func_declaration -> type TIMES ID . params stmt_block
    (44) func_declaration -> type TIMES ID . LPAREN RPAREN stmt_block
    (45) func_declaration -> type TIMES ID . LBRACE RPAREN stmt_block
    (46) func_declaration -> type TIMES ID . LPAREN RBRACE stmt_block
    (47) func_declaration -> type TIMES ID . LBRACE RBRACE stmt_block
    (48) func_declaration -> type TIMES ID . LBRACKET RBRACE stmt_block
    (49) func_declaration -> type TIMES ID . LBRACKET RPAREN stmt_block
    (50) func_declaration -> type TIMES ID . LPAREN RBRACKET stmt_block
    (51) func_declaration -> type TIMES ID . LBRACE RBRACKET stmt_block
    (52) func_declaration -> type TIMES ID . LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type TIMES ID . RPAREN stmt_block
    (54) func_declaration -> type TIMES ID . RBRACE stmt_block
    (55) func_declaration -> type TIMES ID . RBRACKET stmt_block
    (56) func_declaration -> type TIMES ID . LPAREN stmt_block
    (57) func_declaration -> type TIMES ID . LBRACE stmt_block
    (58) func_declaration -> type TIMES ID . LBRACKET stmt_block
    (140) idbracket -> ID .
    (141) idbracket -> ID . LBRACKET INUM RBRACKET
    (142) idbracket -> ID . LBRACKET INUM RBRACE
    (143) idbracket -> ID . LBRACE INUM RBRACKET
    (144) idbracket -> ID . LPAREN INUM RBRACKET
    (145) idbracket -> ID . LBRACKET INUM RPAREN
    (146) idbracket -> ID . LBRACE INUM RPAREN
    (147) idbracket -> ID . LPAREN INUM RBRACE
    (148) idbracket -> ID . LPAREN INUM RPAREN
    (149) idbracket -> ID . LBRACE INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    LPAREN          shift and go to state 68
    LBRACE          shift and go to state 71
    LBRACKET        shift and go to state 73
    RPAREN          shift and go to state 70
    RBRACE          shift and go to state 72
    RBRACKET        shift and go to state 74
    SEMICOLON       reduce using rule 140 (idbracket -> ID .)
    COMMA           reduce using rule 140 (idbracket -> ID .)
    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 69
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 27

    (139) declaration -> type TIMES idbracket .

    SEMICOLON       reduce using rule 139 (declaration -> type TIMES idbracket .)
    COMMA           reduce using rule 139 (declaration -> type TIMES idbracket .)


state 28

    (94) param -> type . ID
    (95) param -> type . TIMES ID

    ID              shift and go to state 75
    TIMES           shift and go to state 76


state 29

    (59) func_declaration -> type MAIN LPAREN . params RPAREN stmt_block
    (61) func_declaration -> type MAIN LPAREN . params RBRACE stmt_block
    (66) func_declaration -> type MAIN LPAREN . params RBRACKET stmt_block
    (71) func_declaration -> type MAIN LPAREN . params stmt_block
    (75) func_declaration -> type MAIN LPAREN . RPAREN stmt_block
    (77) func_declaration -> type MAIN LPAREN . RBRACE stmt_block
    (82) func_declaration -> type MAIN LPAREN . RBRACKET stmt_block
    (87) func_declaration -> type MAIN LPAREN . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 78
    RBRACE          shift and go to state 80
    RBRACKET        shift and go to state 81
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 77
    stmt_block                     shift and go to state 79
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 30

    (68) func_declaration -> type MAIN params . RPAREN stmt_block
    (69) func_declaration -> type MAIN params . RBRACE stmt_block
    (70) func_declaration -> type MAIN params . RBRACKET stmt_block
    (74) func_declaration -> type MAIN params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 82
    RBRACE          shift and go to state 84
    RBRACKET        shift and go to state 85
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 83

state 31

    (84) func_declaration -> type MAIN RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 86

state 32

    (60) func_declaration -> type MAIN LBRACE . params RPAREN stmt_block
    (62) func_declaration -> type MAIN LBRACE . params RBRACE stmt_block
    (65) func_declaration -> type MAIN LBRACE . params RBRACKET stmt_block
    (72) func_declaration -> type MAIN LBRACE . params stmt_block
    (76) func_declaration -> type MAIN LBRACE . RPAREN stmt_block
    (78) func_declaration -> type MAIN LBRACE . RBRACE stmt_block
    (81) func_declaration -> type MAIN LBRACE . RBRACKET stmt_block
    (88) func_declaration -> type MAIN LBRACE . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 88
    RBRACE          shift and go to state 90
    RBRACKET        shift and go to state 91
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 87
    stmt_block                     shift and go to state 89
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 33

    (85) func_declaration -> type MAIN RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 92

state 34

    (63) func_declaration -> type MAIN LBRACKET . params RBRACE stmt_block
    (64) func_declaration -> type MAIN LBRACKET . params RPAREN stmt_block
    (67) func_declaration -> type MAIN LBRACKET . params RBRACKET stmt_block
    (73) func_declaration -> type MAIN LBRACKET . params stmt_block
    (79) func_declaration -> type MAIN LBRACKET . RBRACE stmt_block
    (80) func_declaration -> type MAIN LBRACKET . RPAREN stmt_block
    (83) func_declaration -> type MAIN LBRACKET . RBRACKET stmt_block
    (89) func_declaration -> type MAIN LBRACKET . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RBRACE          shift and go to state 94
    RPAREN          shift and go to state 96
    RBRACKET        shift and go to state 97
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 93
    stmt_block                     shift and go to state 95
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 35

    (86) func_declaration -> type MAIN RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 98

state 36

    (90) params -> VOID .
    (152) type -> VOID .

    RPAREN          reduce using rule 90 (params -> VOID .)
    RBRACE          reduce using rule 90 (params -> VOID .)
    RBRACKET        reduce using rule 90 (params -> VOID .)
    LBRACE          reduce using rule 90 (params -> VOID .)
    LBRACKET        reduce using rule 90 (params -> VOID .)
    error           reduce using rule 90 (params -> VOID .)
    ID              reduce using rule 152 (type -> VOID .)
    TIMES           reduce using rule 152 (type -> VOID .)


state 37

    (91) params -> param_list .
    (93) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 91 (params -> param_list .)
    RBRACE          reduce using rule 91 (params -> param_list .)
    RBRACKET        reduce using rule 91 (params -> param_list .)
    LBRACE          reduce using rule 91 (params -> param_list .)
    LBRACKET        reduce using rule 91 (params -> param_list .)
    error           reduce using rule 91 (params -> param_list .)
    COMMA           shift and go to state 99


state 38

    (92) param_list -> param .

    COMMA           reduce using rule 92 (param_list -> param .)
    RPAREN          reduce using rule 92 (param_list -> param .)
    RBRACE          reduce using rule 92 (param_list -> param .)
    RBRACKET        reduce using rule 92 (param_list -> param .)
    LBRACE          reduce using rule 92 (param_list -> param .)
    LBRACKET        reduce using rule 92 (param_list -> param .)
    error           reduce using rule 92 (param_list -> param .)


state 39

    (137) declaration -> declaration COMMA TIMES idbracket .

    SEMICOLON       reduce using rule 137 (declaration -> declaration COMMA TIMES idbracket .)
    COMMA           reduce using rule 137 (declaration -> declaration COMMA TIMES idbracket .)


state 40

    (141) idbracket -> ID LBRACKET . INUM RBRACKET
    (142) idbracket -> ID LBRACKET . INUM RBRACE
    (145) idbracket -> ID LBRACKET . INUM RPAREN

    INUM            shift and go to state 65


state 41

    (143) idbracket -> ID LBRACE . INUM RBRACKET
    (146) idbracket -> ID LBRACE . INUM RPAREN
    (149) idbracket -> ID LBRACE . INUM RBRACE

    INUM            shift and go to state 59


state 42

    (144) idbracket -> ID LPAREN . INUM RBRACKET
    (147) idbracket -> ID LPAREN . INUM RBRACE
    (148) idbracket -> ID LPAREN . INUM RPAREN

    INUM            shift and go to state 49


state 43

    (5) func_declaration -> type ID LPAREN params . RPAREN stmt_block
    (9) func_declaration -> type ID LPAREN params . error stmt_block

    RPAREN          shift and go to state 100
    error           shift and go to state 101


state 44

    (13) func_declaration -> type ID LPAREN RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 102

state 45

    (22) func_declaration -> type ID LPAREN stmt_block .

    INT             reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    FLOAT           reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    VOID            reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    $end            reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)


state 46

    (159) stmt_block -> error . stmt_list RBRACKET
    (160) stmt_block -> error . stmt_list RBRACE
    (161) stmt_block -> error . stmt_list RPAREN
    (162) stmt_list -> . stmt_list genstmt
    (163) stmt_list -> . empty
    (215) empty -> .

    RBRACKET        reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RPAREN          reduce using rule 215 (empty -> .)
    IF              reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    PRINT           reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    TIMES           reduce using rule 215 (empty -> .)
    LBRACE          reduce using rule 215 (empty -> .)
    LBRACKET        reduce using rule 215 (empty -> .)
    error           reduce using rule 215 (empty -> .)
    FOR             reduce using rule 215 (empty -> .)
    RETURN          reduce using rule 215 (empty -> .)
    INCREMENT       reduce using rule 215 (empty -> .)
    INT             reduce using rule 215 (empty -> .)
    FLOAT           reduce using rule 215 (empty -> .)
    VOID            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    LPAREN          reduce using rule 215 (empty -> .)
    FNUM            reduce using rule 215 (empty -> .)
    INUM            reduce using rule 215 (empty -> .)
    ADDRESS         reduce using rule 215 (empty -> .)

    stmt_list                      shift and go to state 103
    empty                          shift and go to state 104

state 47

    (14) func_declaration -> type ID LPAREN RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 105

state 48

    (15) func_declaration -> type ID LPAREN RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 106

state 49

    (144) idbracket -> ID LPAREN INUM . RBRACKET
    (147) idbracket -> ID LPAREN INUM . RBRACE
    (148) idbracket -> ID LPAREN INUM . RPAREN

    RBRACKET        shift and go to state 107
    RBRACE          shift and go to state 108
    RPAREN          shift and go to state 109


state 50

    (153) stmt_block -> LBRACE . stmt_list RBRACE
    (157) stmt_block -> LBRACE . stmt_list RPAREN
    (158) stmt_block -> LBRACE . stmt_list RBRACKET
    (162) stmt_list -> . stmt_list genstmt
    (163) stmt_list -> . empty
    (215) empty -> .

    RBRACE          reduce using rule 215 (empty -> .)
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    IF              reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    PRINT           reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    TIMES           reduce using rule 215 (empty -> .)
    LBRACE          reduce using rule 215 (empty -> .)
    LBRACKET        reduce using rule 215 (empty -> .)
    error           reduce using rule 215 (empty -> .)
    FOR             reduce using rule 215 (empty -> .)
    RETURN          reduce using rule 215 (empty -> .)
    INCREMENT       reduce using rule 215 (empty -> .)
    INT             reduce using rule 215 (empty -> .)
    FLOAT           reduce using rule 215 (empty -> .)
    VOID            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    LPAREN          reduce using rule 215 (empty -> .)
    FNUM            reduce using rule 215 (empty -> .)
    INUM            reduce using rule 215 (empty -> .)
    ADDRESS         reduce using rule 215 (empty -> .)

    stmt_list                      shift and go to state 110
    empty                          shift and go to state 104

state 51

    (154) stmt_block -> LBRACKET . stmt_list RPAREN
    (155) stmt_block -> LBRACKET . stmt_list RBRACE
    (156) stmt_block -> LBRACKET . stmt_list RBRACKET
    (162) stmt_list -> . stmt_list genstmt
    (163) stmt_list -> . empty
    (215) empty -> .

    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    IF              reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    PRINT           reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    TIMES           reduce using rule 215 (empty -> .)
    LBRACE          reduce using rule 215 (empty -> .)
    LBRACKET        reduce using rule 215 (empty -> .)
    error           reduce using rule 215 (empty -> .)
    FOR             reduce using rule 215 (empty -> .)
    RETURN          reduce using rule 215 (empty -> .)
    INCREMENT       reduce using rule 215 (empty -> .)
    INT             reduce using rule 215 (empty -> .)
    FLOAT           reduce using rule 215 (empty -> .)
    VOID            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    LPAREN          reduce using rule 215 (empty -> .)
    FNUM            reduce using rule 215 (empty -> .)
    INUM            reduce using rule 215 (empty -> .)
    ADDRESS         reduce using rule 215 (empty -> .)

    stmt_list                      shift and go to state 111
    empty                          shift and go to state 104

state 52

    (25) func_declaration -> type ID RPAREN stmt_block .

    INT             reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    FLOAT           reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    VOID            reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    $end            reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)


state 53

    (6) func_declaration -> type ID error params . error stmt_block
    (10) func_declaration -> type ID error params . RPAREN stmt_block
    (11) func_declaration -> type ID error params . RBRACE stmt_block
    (12) func_declaration -> type ID error params . RBRACKET stmt_block

    error           shift and go to state 112
    RPAREN          shift and go to state 113
    RBRACE          shift and go to state 114
    RBRACKET        shift and go to state 115


state 54

    (7) func_declaration -> type ID LBRACE params . error stmt_block

    error           shift and go to state 116


state 55

    (23) func_declaration -> type ID LBRACE stmt_block .

    INT             reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    FLOAT           reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    VOID            reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    $end            reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)


state 56

    (16) func_declaration -> type ID LBRACE RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 117

state 57

    (17) func_declaration -> type ID LBRACE RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 118

state 58

    (18) func_declaration -> type ID LBRACE RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 119

state 59

    (143) idbracket -> ID LBRACE INUM . RBRACKET
    (146) idbracket -> ID LBRACE INUM . RPAREN
    (149) idbracket -> ID LBRACE INUM . RBRACE

    RBRACKET        shift and go to state 120
    RPAREN          shift and go to state 121
    RBRACE          shift and go to state 122


state 60

    (8) func_declaration -> type ID LBRACKET params . error stmt_block

    error           shift and go to state 123


state 61

    (24) func_declaration -> type ID LBRACKET stmt_block .

    INT             reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    FLOAT           reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    VOID            reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    $end            reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)


state 62

    (19) func_declaration -> type ID LBRACKET RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 124

state 63

    (20) func_declaration -> type ID LBRACKET RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 125

state 64

    (21) func_declaration -> type ID LBRACKET RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 126

state 65

    (141) idbracket -> ID LBRACKET INUM . RBRACKET
    (142) idbracket -> ID LBRACKET INUM . RBRACE
    (145) idbracket -> ID LBRACKET INUM . RPAREN

    RBRACKET        shift and go to state 127
    RBRACE          shift and go to state 128
    RPAREN          shift and go to state 129


state 66

    (27) func_declaration -> type ID RBRACE stmt_block .

    INT             reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    FLOAT           reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    VOID            reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    $end            reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)


state 67

    (26) func_declaration -> type ID RBRACKET stmt_block .

    INT             reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    FLOAT           reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    VOID            reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    $end            reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)


state 68

    (28) func_declaration -> type TIMES ID LPAREN . params RPAREN stmt_block
    (30) func_declaration -> type TIMES ID LPAREN . params RBRACE stmt_block
    (34) func_declaration -> type TIMES ID LPAREN . params RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID LPAREN . params stmt_block
    (44) func_declaration -> type TIMES ID LPAREN . RPAREN stmt_block
    (46) func_declaration -> type TIMES ID LPAREN . RBRACE stmt_block
    (50) func_declaration -> type TIMES ID LPAREN . RBRACKET stmt_block
    (56) func_declaration -> type TIMES ID LPAREN . stmt_block
    (144) idbracket -> ID LPAREN . INUM RBRACKET
    (147) idbracket -> ID LPAREN . INUM RBRACE
    (148) idbracket -> ID LPAREN . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 131
    RBRACE          shift and go to state 133
    RBRACKET        shift and go to state 134
    INUM            shift and go to state 49
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 130
    stmt_block                     shift and go to state 132
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 69

    (37) func_declaration -> type TIMES ID params . RPAREN stmt_block
    (38) func_declaration -> type TIMES ID params . RBRACE stmt_block
    (39) func_declaration -> type TIMES ID params . RBRACKET stmt_block
    (43) func_declaration -> type TIMES ID params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 135
    RBRACE          shift and go to state 137
    RBRACKET        shift and go to state 138
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 136

state 70

    (53) func_declaration -> type TIMES ID RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 139

state 71

    (29) func_declaration -> type TIMES ID LBRACE . params RPAREN stmt_block
    (31) func_declaration -> type TIMES ID LBRACE . params RBRACE stmt_block
    (35) func_declaration -> type TIMES ID LBRACE . params RBRACKET stmt_block
    (41) func_declaration -> type TIMES ID LBRACE . params stmt_block
    (45) func_declaration -> type TIMES ID LBRACE . RPAREN stmt_block
    (47) func_declaration -> type TIMES ID LBRACE . RBRACE stmt_block
    (51) func_declaration -> type TIMES ID LBRACE . RBRACKET stmt_block
    (57) func_declaration -> type TIMES ID LBRACE . stmt_block
    (143) idbracket -> ID LBRACE . INUM RBRACKET
    (146) idbracket -> ID LBRACE . INUM RPAREN
    (149) idbracket -> ID LBRACE . INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RPAREN          shift and go to state 141
    RBRACE          shift and go to state 143
    RBRACKET        shift and go to state 144
    INUM            shift and go to state 59
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 140
    stmt_block                     shift and go to state 142
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 72

    (54) func_declaration -> type TIMES ID RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 145

state 73

    (32) func_declaration -> type TIMES ID LBRACKET . params RBRACE stmt_block
    (33) func_declaration -> type TIMES ID LBRACKET . params RPAREN stmt_block
    (36) func_declaration -> type TIMES ID LBRACKET . params RBRACKET stmt_block
    (42) func_declaration -> type TIMES ID LBRACKET . params stmt_block
    (48) func_declaration -> type TIMES ID LBRACKET . RBRACE stmt_block
    (49) func_declaration -> type TIMES ID LBRACKET . RPAREN stmt_block
    (52) func_declaration -> type TIMES ID LBRACKET . RBRACKET stmt_block
    (58) func_declaration -> type TIMES ID LBRACKET . stmt_block
    (141) idbracket -> ID LBRACKET . INUM RBRACKET
    (142) idbracket -> ID LBRACKET . INUM RBRACE
    (145) idbracket -> ID LBRACKET . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    RBRACE          shift and go to state 147
    RPAREN          shift and go to state 149
    RBRACKET        shift and go to state 150
    INUM            shift and go to state 65
    VOID            shift and go to state 36
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 146
    stmt_block                     shift and go to state 148
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 74

    (55) func_declaration -> type TIMES ID RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 151

state 75

    (94) param -> type ID .

    COMMA           reduce using rule 94 (param -> type ID .)
    RPAREN          reduce using rule 94 (param -> type ID .)
    RBRACE          reduce using rule 94 (param -> type ID .)
    RBRACKET        reduce using rule 94 (param -> type ID .)
    LBRACE          reduce using rule 94 (param -> type ID .)
    LBRACKET        reduce using rule 94 (param -> type ID .)
    error           reduce using rule 94 (param -> type ID .)


state 76

    (95) param -> type TIMES . ID

    ID              shift and go to state 152


state 77

    (59) func_declaration -> type MAIN LPAREN params . RPAREN stmt_block
    (61) func_declaration -> type MAIN LPAREN params . RBRACE stmt_block
    (66) func_declaration -> type MAIN LPAREN params . RBRACKET stmt_block
    (71) func_declaration -> type MAIN LPAREN params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 153
    RBRACE          shift and go to state 155
    RBRACKET        shift and go to state 156
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 154

state 78

    (75) func_declaration -> type MAIN LPAREN RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 157

state 79

    (87) func_declaration -> type MAIN LPAREN stmt_block .

    INT             reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    FLOAT           reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    VOID            reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    $end            reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)


state 80

    (77) func_declaration -> type MAIN LPAREN RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 158

state 81

    (82) func_declaration -> type MAIN LPAREN RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 159

state 82

    (68) func_declaration -> type MAIN params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 160

state 83

    (74) func_declaration -> type MAIN params stmt_block .

    INT             reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    FLOAT           reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    VOID            reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    $end            reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)


state 84

    (69) func_declaration -> type MAIN params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 161

state 85

    (70) func_declaration -> type MAIN params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 162

state 86

    (84) func_declaration -> type MAIN RPAREN stmt_block .

    INT             reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    FLOAT           reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    VOID            reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    $end            reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)


state 87

    (60) func_declaration -> type MAIN LBRACE params . RPAREN stmt_block
    (62) func_declaration -> type MAIN LBRACE params . RBRACE stmt_block
    (65) func_declaration -> type MAIN LBRACE params . RBRACKET stmt_block
    (72) func_declaration -> type MAIN LBRACE params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 163
    RBRACE          shift and go to state 165
    RBRACKET        shift and go to state 166
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 164

state 88

    (76) func_declaration -> type MAIN LBRACE RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 167

state 89

    (88) func_declaration -> type MAIN LBRACE stmt_block .

    INT             reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    FLOAT           reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    VOID            reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    $end            reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)


state 90

    (78) func_declaration -> type MAIN LBRACE RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 168

state 91

    (81) func_declaration -> type MAIN LBRACE RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 169

state 92

    (85) func_declaration -> type MAIN RBRACE stmt_block .

    INT             reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    FLOAT           reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    VOID            reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    $end            reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)


state 93

    (63) func_declaration -> type MAIN LBRACKET params . RBRACE stmt_block
    (64) func_declaration -> type MAIN LBRACKET params . RPAREN stmt_block
    (67) func_declaration -> type MAIN LBRACKET params . RBRACKET stmt_block
    (73) func_declaration -> type MAIN LBRACKET params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RBRACE          shift and go to state 170
    RPAREN          shift and go to state 172
    RBRACKET        shift and go to state 173
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 171

state 94

    (79) func_declaration -> type MAIN LBRACKET RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 174

state 95

    (89) func_declaration -> type MAIN LBRACKET stmt_block .

    INT             reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    FLOAT           reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    VOID            reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    $end            reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)


state 96

    (80) func_declaration -> type MAIN LBRACKET RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 175

state 97

    (83) func_declaration -> type MAIN LBRACKET RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 176

state 98

    (86) func_declaration -> type MAIN RBRACKET stmt_block .

    INT             reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    FLOAT           reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    VOID            reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    $end            reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)


state 99

    (93) param_list -> param_list COMMA . param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9

    param                          shift and go to state 177
    type                           shift and go to state 28

state 100

    (5) func_declaration -> type ID LPAREN params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 178

state 101

    (9) func_declaration -> type ID LPAREN params error . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 179

state 102

    (13) func_declaration -> type ID LPAREN RPAREN stmt_block .

    INT             reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    $end            reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)


state 103

    (159) stmt_block -> error stmt_list . RBRACKET
    (160) stmt_block -> error stmt_list . RBRACE
    (161) stmt_block -> error stmt_list . RPAREN
    (162) stmt_list -> stmt_list . genstmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    RBRACKET        shift and go to state 180
    RBRACE          shift and go to state 181
    RPAREN          shift and go to state 182
    IF              shift and go to state 186
    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    genstmt                        shift and go to state 183
    mstmt                          shift and go to state 184
    umstmt                         shift and go to state 185
    expr                           shift and go to state 188
    stmt                           shift and go to state 189
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 104

    (163) stmt_list -> empty .

    RBRACKET        reduce using rule 163 (stmt_list -> empty .)
    RBRACE          reduce using rule 163 (stmt_list -> empty .)
    RPAREN          reduce using rule 163 (stmt_list -> empty .)
    IF              reduce using rule 163 (stmt_list -> empty .)
    SEMICOLON       reduce using rule 163 (stmt_list -> empty .)
    PRINT           reduce using rule 163 (stmt_list -> empty .)
    ID              reduce using rule 163 (stmt_list -> empty .)
    TIMES           reduce using rule 163 (stmt_list -> empty .)
    LBRACE          reduce using rule 163 (stmt_list -> empty .)
    LBRACKET        reduce using rule 163 (stmt_list -> empty .)
    error           reduce using rule 163 (stmt_list -> empty .)
    FOR             reduce using rule 163 (stmt_list -> empty .)
    RETURN          reduce using rule 163 (stmt_list -> empty .)
    INCREMENT       reduce using rule 163 (stmt_list -> empty .)
    INT             reduce using rule 163 (stmt_list -> empty .)
    FLOAT           reduce using rule 163 (stmt_list -> empty .)
    VOID            reduce using rule 163 (stmt_list -> empty .)
    MINUS           reduce using rule 163 (stmt_list -> empty .)
    LPAREN          reduce using rule 163 (stmt_list -> empty .)
    FNUM            reduce using rule 163 (stmt_list -> empty .)
    INUM            reduce using rule 163 (stmt_list -> empty .)
    ADDRESS         reduce using rule 163 (stmt_list -> empty .)


state 105

    (14) func_declaration -> type ID LPAREN RBRACE stmt_block .

    INT             reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    $end            reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)


state 106

    (15) func_declaration -> type ID LPAREN RBRACKET stmt_block .

    INT             reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)


state 107

    (144) idbracket -> ID LPAREN INUM RBRACKET .

    SEMICOLON       reduce using rule 144 (idbracket -> ID LPAREN INUM RBRACKET .)
    COMMA           reduce using rule 144 (idbracket -> ID LPAREN INUM RBRACKET .)


state 108

    (147) idbracket -> ID LPAREN INUM RBRACE .

    SEMICOLON       reduce using rule 147 (idbracket -> ID LPAREN INUM RBRACE .)
    COMMA           reduce using rule 147 (idbracket -> ID LPAREN INUM RBRACE .)


state 109

    (148) idbracket -> ID LPAREN INUM RPAREN .

    SEMICOLON       reduce using rule 148 (idbracket -> ID LPAREN INUM RPAREN .)
    COMMA           reduce using rule 148 (idbracket -> ID LPAREN INUM RPAREN .)


state 110

    (153) stmt_block -> LBRACE stmt_list . RBRACE
    (157) stmt_block -> LBRACE stmt_list . RPAREN
    (158) stmt_block -> LBRACE stmt_list . RBRACKET
    (162) stmt_list -> stmt_list . genstmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 209
    RPAREN          shift and go to state 210
    RBRACKET        shift and go to state 211
    IF              shift and go to state 186
    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    genstmt                        shift and go to state 183
    mstmt                          shift and go to state 184
    umstmt                         shift and go to state 185
    expr                           shift and go to state 188
    stmt                           shift and go to state 189
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 111

    (154) stmt_block -> LBRACKET stmt_list . RPAREN
    (155) stmt_block -> LBRACKET stmt_list . RBRACE
    (156) stmt_block -> LBRACKET stmt_list . RBRACKET
    (162) stmt_list -> stmt_list . genstmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    RPAREN          shift and go to state 212
    RBRACE          shift and go to state 213
    RBRACKET        shift and go to state 214
    IF              shift and go to state 186
    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    genstmt                        shift and go to state 183
    mstmt                          shift and go to state 184
    umstmt                         shift and go to state 185
    expr                           shift and go to state 188
    stmt                           shift and go to state 189
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 112

    (6) func_declaration -> type ID error params error . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 215

state 113

    (10) func_declaration -> type ID error params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 216

state 114

    (11) func_declaration -> type ID error params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 217

state 115

    (12) func_declaration -> type ID error params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 218

state 116

    (7) func_declaration -> type ID LBRACE params error . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 219

state 117

    (16) func_declaration -> type ID LBRACE RPAREN stmt_block .

    INT             reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    $end            reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)


state 118

    (17) func_declaration -> type ID LBRACE RBRACKET stmt_block .

    INT             reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)


state 119

    (18) func_declaration -> type ID LBRACE RBRACE stmt_block .

    INT             reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    $end            reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)


state 120

    (143) idbracket -> ID LBRACE INUM RBRACKET .

    SEMICOLON       reduce using rule 143 (idbracket -> ID LBRACE INUM RBRACKET .)
    COMMA           reduce using rule 143 (idbracket -> ID LBRACE INUM RBRACKET .)


state 121

    (146) idbracket -> ID LBRACE INUM RPAREN .

    SEMICOLON       reduce using rule 146 (idbracket -> ID LBRACE INUM RPAREN .)
    COMMA           reduce using rule 146 (idbracket -> ID LBRACE INUM RPAREN .)


state 122

    (149) idbracket -> ID LBRACE INUM RBRACE .

    SEMICOLON       reduce using rule 149 (idbracket -> ID LBRACE INUM RBRACE .)
    COMMA           reduce using rule 149 (idbracket -> ID LBRACE INUM RBRACE .)


state 123

    (8) func_declaration -> type ID LBRACKET params error . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 220

state 124

    (19) func_declaration -> type ID LBRACKET RPAREN stmt_block .

    INT             reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)


state 125

    (20) func_declaration -> type ID LBRACKET RBRACE stmt_block .

    INT             reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)


state 126

    (21) func_declaration -> type ID LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)


state 127

    (141) idbracket -> ID LBRACKET INUM RBRACKET .

    SEMICOLON       reduce using rule 141 (idbracket -> ID LBRACKET INUM RBRACKET .)
    COMMA           reduce using rule 141 (idbracket -> ID LBRACKET INUM RBRACKET .)


state 128

    (142) idbracket -> ID LBRACKET INUM RBRACE .

    SEMICOLON       reduce using rule 142 (idbracket -> ID LBRACKET INUM RBRACE .)
    COMMA           reduce using rule 142 (idbracket -> ID LBRACKET INUM RBRACE .)


state 129

    (145) idbracket -> ID LBRACKET INUM RPAREN .

    SEMICOLON       reduce using rule 145 (idbracket -> ID LBRACKET INUM RPAREN .)
    COMMA           reduce using rule 145 (idbracket -> ID LBRACKET INUM RPAREN .)


state 130

    (28) func_declaration -> type TIMES ID LPAREN params . RPAREN stmt_block
    (30) func_declaration -> type TIMES ID LPAREN params . RBRACE stmt_block
    (34) func_declaration -> type TIMES ID LPAREN params . RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID LPAREN params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 221
    RBRACE          shift and go to state 223
    RBRACKET        shift and go to state 224
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 222

state 131

    (44) func_declaration -> type TIMES ID LPAREN RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 225

state 132

    (56) func_declaration -> type TIMES ID LPAREN stmt_block .

    INT             reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    FLOAT           reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    VOID            reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    $end            reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)


state 133

    (46) func_declaration -> type TIMES ID LPAREN RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 226

state 134

    (50) func_declaration -> type TIMES ID LPAREN RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 227

state 135

    (37) func_declaration -> type TIMES ID params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 228

state 136

    (43) func_declaration -> type TIMES ID params stmt_block .

    INT             reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    FLOAT           reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    VOID            reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    $end            reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)


state 137

    (38) func_declaration -> type TIMES ID params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 229

state 138

    (39) func_declaration -> type TIMES ID params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 230

state 139

    (53) func_declaration -> type TIMES ID RPAREN stmt_block .

    INT             reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    FLOAT           reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    VOID            reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    $end            reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)


state 140

    (29) func_declaration -> type TIMES ID LBRACE params . RPAREN stmt_block
    (31) func_declaration -> type TIMES ID LBRACE params . RBRACE stmt_block
    (35) func_declaration -> type TIMES ID LBRACE params . RBRACKET stmt_block
    (41) func_declaration -> type TIMES ID LBRACE params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RPAREN          shift and go to state 231
    RBRACE          shift and go to state 233
    RBRACKET        shift and go to state 234
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 232

state 141

    (45) func_declaration -> type TIMES ID LBRACE RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 235

state 142

    (57) func_declaration -> type TIMES ID LBRACE stmt_block .

    INT             reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    FLOAT           reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    VOID            reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    $end            reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)


state 143

    (47) func_declaration -> type TIMES ID LBRACE RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 236

state 144

    (51) func_declaration -> type TIMES ID LBRACE RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 237

state 145

    (54) func_declaration -> type TIMES ID RBRACE stmt_block .

    INT             reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    FLOAT           reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    VOID            reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    $end            reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)


state 146

    (32) func_declaration -> type TIMES ID LBRACKET params . RBRACE stmt_block
    (33) func_declaration -> type TIMES ID LBRACKET params . RPAREN stmt_block
    (36) func_declaration -> type TIMES ID LBRACKET params . RBRACKET stmt_block
    (42) func_declaration -> type TIMES ID LBRACKET params . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    RBRACE          shift and go to state 238
    RPAREN          shift and go to state 240
    RBRACKET        shift and go to state 241
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 239

state 147

    (48) func_declaration -> type TIMES ID LBRACKET RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 242

state 148

    (58) func_declaration -> type TIMES ID LBRACKET stmt_block .

    INT             reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    FLOAT           reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    VOID            reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    $end            reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)


state 149

    (49) func_declaration -> type TIMES ID LBRACKET RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 243

state 150

    (52) func_declaration -> type TIMES ID LBRACKET RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 244

state 151

    (55) func_declaration -> type TIMES ID RBRACKET stmt_block .

    INT             reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    FLOAT           reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    VOID            reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    $end            reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)


state 152

    (95) param -> type TIMES ID .

    COMMA           reduce using rule 95 (param -> type TIMES ID .)
    RPAREN          reduce using rule 95 (param -> type TIMES ID .)
    RBRACE          reduce using rule 95 (param -> type TIMES ID .)
    RBRACKET        reduce using rule 95 (param -> type TIMES ID .)
    LBRACE          reduce using rule 95 (param -> type TIMES ID .)
    LBRACKET        reduce using rule 95 (param -> type TIMES ID .)
    error           reduce using rule 95 (param -> type TIMES ID .)


state 153

    (59) func_declaration -> type MAIN LPAREN params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 245

state 154

    (71) func_declaration -> type MAIN LPAREN params stmt_block .

    INT             reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    FLOAT           reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    VOID            reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    $end            reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)


state 155

    (61) func_declaration -> type MAIN LPAREN params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 246

state 156

    (66) func_declaration -> type MAIN LPAREN params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 247

state 157

    (75) func_declaration -> type MAIN LPAREN RPAREN stmt_block .

    INT             reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    $end            reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)


state 158

    (77) func_declaration -> type MAIN LPAREN RBRACE stmt_block .

    INT             reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    $end            reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)


state 159

    (82) func_declaration -> type MAIN LPAREN RBRACKET stmt_block .

    INT             reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)


state 160

    (68) func_declaration -> type MAIN params RPAREN stmt_block .

    INT             reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    FLOAT           reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    VOID            reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    $end            reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)


state 161

    (69) func_declaration -> type MAIN params RBRACE stmt_block .

    INT             reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    FLOAT           reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    VOID            reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    $end            reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)


state 162

    (70) func_declaration -> type MAIN params RBRACKET stmt_block .

    INT             reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    VOID            reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    $end            reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)


state 163

    (60) func_declaration -> type MAIN LBRACE params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 248

state 164

    (72) func_declaration -> type MAIN LBRACE params stmt_block .

    INT             reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    FLOAT           reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    VOID            reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    $end            reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)


state 165

    (62) func_declaration -> type MAIN LBRACE params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 249

state 166

    (65) func_declaration -> type MAIN LBRACE params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 250

state 167

    (76) func_declaration -> type MAIN LBRACE RPAREN stmt_block .

    INT             reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    $end            reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)


state 168

    (78) func_declaration -> type MAIN LBRACE RBRACE stmt_block .

    INT             reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    $end            reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)


state 169

    (81) func_declaration -> type MAIN LBRACE RBRACKET stmt_block .

    INT             reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)


state 170

    (63) func_declaration -> type MAIN LBRACKET params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 251

state 171

    (73) func_declaration -> type MAIN LBRACKET params stmt_block .

    INT             reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    FLOAT           reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    VOID            reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    $end            reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)


state 172

    (64) func_declaration -> type MAIN LBRACKET params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 252

state 173

    (67) func_declaration -> type MAIN LBRACKET params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 253

state 174

    (79) func_declaration -> type MAIN LBRACKET RBRACE stmt_block .

    INT             reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)


state 175

    (80) func_declaration -> type MAIN LBRACKET RPAREN stmt_block .

    INT             reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)


state 176

    (83) func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)


state 177

    (93) param_list -> param_list COMMA param .

    COMMA           reduce using rule 93 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 93 (param_list -> param_list COMMA param .)
    RBRACE          reduce using rule 93 (param_list -> param_list COMMA param .)
    RBRACKET        reduce using rule 93 (param_list -> param_list COMMA param .)
    LBRACE          reduce using rule 93 (param_list -> param_list COMMA param .)
    LBRACKET        reduce using rule 93 (param_list -> param_list COMMA param .)
    error           reduce using rule 93 (param_list -> param_list COMMA param .)


state 178

    (5) func_declaration -> type ID LPAREN params RPAREN stmt_block .

    INT             reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)


state 179

    (9) func_declaration -> type ID LPAREN params error stmt_block .

    INT             reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    FLOAT           reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    VOID            reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    $end            reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)


state 180

    (159) stmt_block -> error stmt_list RBRACKET .

    INT             reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    FLOAT           reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    VOID            reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    $end            reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    RBRACKET        reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    RBRACE          reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    RPAREN          reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    IF              reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    SEMICOLON       reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    PRINT           reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    ID              reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    TIMES           reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    LBRACE          reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    LBRACKET        reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    error           reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    FOR             reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    RETURN          reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    INCREMENT       reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    MINUS           reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    LPAREN          reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    FNUM            reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    INUM            reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    ADDRESS         reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)
    ELSE            reduce using rule 159 (stmt_block -> error stmt_list RBRACKET .)


state 181

    (160) stmt_block -> error stmt_list RBRACE .

    INT             reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    FLOAT           reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    VOID            reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    $end            reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    RBRACKET        reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    RBRACE          reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    RPAREN          reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    IF              reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    SEMICOLON       reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    PRINT           reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    ID              reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    TIMES           reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    LBRACE          reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    LBRACKET        reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    error           reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    FOR             reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    RETURN          reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    INCREMENT       reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    MINUS           reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    LPAREN          reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    FNUM            reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    INUM            reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    ADDRESS         reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)
    ELSE            reduce using rule 160 (stmt_block -> error stmt_list RBRACE .)


state 182

    (161) stmt_block -> error stmt_list RPAREN .

    INT             reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    FLOAT           reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    VOID            reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    $end            reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    RBRACKET        reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    RBRACE          reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    RPAREN          reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    IF              reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    SEMICOLON       reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    PRINT           reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    ID              reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    TIMES           reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    LBRACE          reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    LBRACKET        reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    error           reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    FOR             reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    RETURN          reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    INCREMENT       reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    MINUS           reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    LPAREN          reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    FNUM            reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    INUM            reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    ADDRESS         reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)
    ELSE            reduce using rule 161 (stmt_block -> error stmt_list RPAREN .)


state 183

    (162) stmt_list -> stmt_list genstmt .

    RBRACKET        reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    RBRACE          reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    RPAREN          reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    IF              reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    SEMICOLON       reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    PRINT           reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    ID              reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    TIMES           reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    LBRACE          reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    LBRACKET        reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    error           reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    FOR             reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    RETURN          reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    INCREMENT       reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    INT             reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    FLOAT           reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    VOID            reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    MINUS           reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    LPAREN          reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    FNUM            reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    INUM            reduce using rule 162 (stmt_list -> stmt_list genstmt .)
    ADDRESS         reduce using rule 162 (stmt_list -> stmt_list genstmt .)


state 184

    (96) genstmt -> mstmt .

    RBRACKET        reduce using rule 96 (genstmt -> mstmt .)
    RBRACE          reduce using rule 96 (genstmt -> mstmt .)
    RPAREN          reduce using rule 96 (genstmt -> mstmt .)
    IF              reduce using rule 96 (genstmt -> mstmt .)
    SEMICOLON       reduce using rule 96 (genstmt -> mstmt .)
    PRINT           reduce using rule 96 (genstmt -> mstmt .)
    ID              reduce using rule 96 (genstmt -> mstmt .)
    TIMES           reduce using rule 96 (genstmt -> mstmt .)
    LBRACE          reduce using rule 96 (genstmt -> mstmt .)
    LBRACKET        reduce using rule 96 (genstmt -> mstmt .)
    error           reduce using rule 96 (genstmt -> mstmt .)
    FOR             reduce using rule 96 (genstmt -> mstmt .)
    RETURN          reduce using rule 96 (genstmt -> mstmt .)
    INCREMENT       reduce using rule 96 (genstmt -> mstmt .)
    INT             reduce using rule 96 (genstmt -> mstmt .)
    FLOAT           reduce using rule 96 (genstmt -> mstmt .)
    VOID            reduce using rule 96 (genstmt -> mstmt .)
    MINUS           reduce using rule 96 (genstmt -> mstmt .)
    LPAREN          reduce using rule 96 (genstmt -> mstmt .)
    FNUM            reduce using rule 96 (genstmt -> mstmt .)
    INUM            reduce using rule 96 (genstmt -> mstmt .)
    ADDRESS         reduce using rule 96 (genstmt -> mstmt .)


state 185

    (97) genstmt -> umstmt .

    RBRACKET        reduce using rule 97 (genstmt -> umstmt .)
    RBRACE          reduce using rule 97 (genstmt -> umstmt .)
    RPAREN          reduce using rule 97 (genstmt -> umstmt .)
    IF              reduce using rule 97 (genstmt -> umstmt .)
    SEMICOLON       reduce using rule 97 (genstmt -> umstmt .)
    PRINT           reduce using rule 97 (genstmt -> umstmt .)
    ID              reduce using rule 97 (genstmt -> umstmt .)
    TIMES           reduce using rule 97 (genstmt -> umstmt .)
    LBRACE          reduce using rule 97 (genstmt -> umstmt .)
    LBRACKET        reduce using rule 97 (genstmt -> umstmt .)
    error           reduce using rule 97 (genstmt -> umstmt .)
    FOR             reduce using rule 97 (genstmt -> umstmt .)
    RETURN          reduce using rule 97 (genstmt -> umstmt .)
    INCREMENT       reduce using rule 97 (genstmt -> umstmt .)
    INT             reduce using rule 97 (genstmt -> umstmt .)
    FLOAT           reduce using rule 97 (genstmt -> umstmt .)
    VOID            reduce using rule 97 (genstmt -> umstmt .)
    MINUS           reduce using rule 97 (genstmt -> umstmt .)
    LPAREN          reduce using rule 97 (genstmt -> umstmt .)
    FNUM            reduce using rule 97 (genstmt -> umstmt .)
    INUM            reduce using rule 97 (genstmt -> umstmt .)
    ADDRESS         reduce using rule 97 (genstmt -> umstmt .)


state 186

    (98) mstmt -> IF . LPAREN expr RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF . LPAREN expr RPAREN genstmt
    (101) umstmt -> IF . LPAREN expr RPAREN mstmt ELSE umstmt

    LPAREN          shift and go to state 254


state 187

    (194) arith_expr -> LPAREN . arith_expr RPAREN
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 255

state 188

    (102) stmt -> expr . SEMICOLON
    (108) stmt -> expr . error

    SEMICOLON       shift and go to state 258
    error           shift and go to state 259


state 189

    (99) mstmt -> stmt .

    RBRACKET        reduce using rule 99 (mstmt -> stmt .)
    RBRACE          reduce using rule 99 (mstmt -> stmt .)
    RPAREN          reduce using rule 99 (mstmt -> stmt .)
    IF              reduce using rule 99 (mstmt -> stmt .)
    SEMICOLON       reduce using rule 99 (mstmt -> stmt .)
    PRINT           reduce using rule 99 (mstmt -> stmt .)
    ID              reduce using rule 99 (mstmt -> stmt .)
    TIMES           reduce using rule 99 (mstmt -> stmt .)
    LBRACE          reduce using rule 99 (mstmt -> stmt .)
    LBRACKET        reduce using rule 99 (mstmt -> stmt .)
    error           reduce using rule 99 (mstmt -> stmt .)
    FOR             reduce using rule 99 (mstmt -> stmt .)
    RETURN          reduce using rule 99 (mstmt -> stmt .)
    INCREMENT       reduce using rule 99 (mstmt -> stmt .)
    INT             reduce using rule 99 (mstmt -> stmt .)
    FLOAT           reduce using rule 99 (mstmt -> stmt .)
    VOID            reduce using rule 99 (mstmt -> stmt .)
    MINUS           reduce using rule 99 (mstmt -> stmt .)
    LPAREN          reduce using rule 99 (mstmt -> stmt .)
    FNUM            reduce using rule 99 (mstmt -> stmt .)
    INUM            reduce using rule 99 (mstmt -> stmt .)
    ADDRESS         reduce using rule 99 (mstmt -> stmt .)
    ELSE            reduce using rule 99 (mstmt -> stmt .)


state 190

    (107) stmt -> SEMICOLON .

    RBRACKET        reduce using rule 107 (stmt -> SEMICOLON .)
    RBRACE          reduce using rule 107 (stmt -> SEMICOLON .)
    RPAREN          reduce using rule 107 (stmt -> SEMICOLON .)
    IF              reduce using rule 107 (stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 107 (stmt -> SEMICOLON .)
    PRINT           reduce using rule 107 (stmt -> SEMICOLON .)
    ID              reduce using rule 107 (stmt -> SEMICOLON .)
    TIMES           reduce using rule 107 (stmt -> SEMICOLON .)
    LBRACE          reduce using rule 107 (stmt -> SEMICOLON .)
    LBRACKET        reduce using rule 107 (stmt -> SEMICOLON .)
    error           reduce using rule 107 (stmt -> SEMICOLON .)
    FOR             reduce using rule 107 (stmt -> SEMICOLON .)
    RETURN          reduce using rule 107 (stmt -> SEMICOLON .)
    INCREMENT       reduce using rule 107 (stmt -> SEMICOLON .)
    INT             reduce using rule 107 (stmt -> SEMICOLON .)
    FLOAT           reduce using rule 107 (stmt -> SEMICOLON .)
    VOID            reduce using rule 107 (stmt -> SEMICOLON .)
    MINUS           reduce using rule 107 (stmt -> SEMICOLON .)
    LPAREN          reduce using rule 107 (stmt -> SEMICOLON .)
    FNUM            reduce using rule 107 (stmt -> SEMICOLON .)
    INUM            reduce using rule 107 (stmt -> SEMICOLON .)
    ADDRESS         reduce using rule 107 (stmt -> SEMICOLON .)
    ELSE            reduce using rule 107 (stmt -> SEMICOLON .)


state 191

    (103) stmt -> declaration . SEMICOLON
    (136) declaration -> declaration . COMMA idbracket
    (137) declaration -> declaration . COMMA TIMES idbracket

    SEMICOLON       shift and go to state 260
    COMMA           shift and go to state 11


state 192

    (104) stmt -> stmt_block .

    RBRACKET        reduce using rule 104 (stmt -> stmt_block .)
    RBRACE          reduce using rule 104 (stmt -> stmt_block .)
    RPAREN          reduce using rule 104 (stmt -> stmt_block .)
    IF              reduce using rule 104 (stmt -> stmt_block .)
    SEMICOLON       reduce using rule 104 (stmt -> stmt_block .)
    PRINT           reduce using rule 104 (stmt -> stmt_block .)
    ID              reduce using rule 104 (stmt -> stmt_block .)
    TIMES           reduce using rule 104 (stmt -> stmt_block .)
    LBRACE          reduce using rule 104 (stmt -> stmt_block .)
    LBRACKET        reduce using rule 104 (stmt -> stmt_block .)
    error           reduce using rule 104 (stmt -> stmt_block .)
    FOR             reduce using rule 104 (stmt -> stmt_block .)
    RETURN          reduce using rule 104 (stmt -> stmt_block .)
    INCREMENT       reduce using rule 104 (stmt -> stmt_block .)
    INT             reduce using rule 104 (stmt -> stmt_block .)
    FLOAT           reduce using rule 104 (stmt -> stmt_block .)
    VOID            reduce using rule 104 (stmt -> stmt_block .)
    MINUS           reduce using rule 104 (stmt -> stmt_block .)
    LPAREN          reduce using rule 104 (stmt -> stmt_block .)
    FNUM            reduce using rule 104 (stmt -> stmt_block .)
    INUM            reduce using rule 104 (stmt -> stmt_block .)
    ADDRESS         reduce using rule 104 (stmt -> stmt_block .)
    ELSE            reduce using rule 104 (stmt -> stmt_block .)


state 193

    (105) stmt -> stmt_forloop .

    RBRACKET        reduce using rule 105 (stmt -> stmt_forloop .)
    RBRACE          reduce using rule 105 (stmt -> stmt_forloop .)
    RPAREN          reduce using rule 105 (stmt -> stmt_forloop .)
    IF              reduce using rule 105 (stmt -> stmt_forloop .)
    SEMICOLON       reduce using rule 105 (stmt -> stmt_forloop .)
    PRINT           reduce using rule 105 (stmt -> stmt_forloop .)
    ID              reduce using rule 105 (stmt -> stmt_forloop .)
    TIMES           reduce using rule 105 (stmt -> stmt_forloop .)
    LBRACE          reduce using rule 105 (stmt -> stmt_forloop .)
    LBRACKET        reduce using rule 105 (stmt -> stmt_forloop .)
    error           reduce using rule 105 (stmt -> stmt_forloop .)
    FOR             reduce using rule 105 (stmt -> stmt_forloop .)
    RETURN          reduce using rule 105 (stmt -> stmt_forloop .)
    INCREMENT       reduce using rule 105 (stmt -> stmt_forloop .)
    INT             reduce using rule 105 (stmt -> stmt_forloop .)
    FLOAT           reduce using rule 105 (stmt -> stmt_forloop .)
    VOID            reduce using rule 105 (stmt -> stmt_forloop .)
    MINUS           reduce using rule 105 (stmt -> stmt_forloop .)
    LPAREN          reduce using rule 105 (stmt -> stmt_forloop .)
    FNUM            reduce using rule 105 (stmt -> stmt_forloop .)
    INUM            reduce using rule 105 (stmt -> stmt_forloop .)
    ADDRESS         reduce using rule 105 (stmt -> stmt_forloop .)
    ELSE            reduce using rule 105 (stmt -> stmt_forloop .)


state 194

    (106) stmt -> stmt_return .

    RBRACKET        reduce using rule 106 (stmt -> stmt_return .)
    RBRACE          reduce using rule 106 (stmt -> stmt_return .)
    RPAREN          reduce using rule 106 (stmt -> stmt_return .)
    IF              reduce using rule 106 (stmt -> stmt_return .)
    SEMICOLON       reduce using rule 106 (stmt -> stmt_return .)
    PRINT           reduce using rule 106 (stmt -> stmt_return .)
    ID              reduce using rule 106 (stmt -> stmt_return .)
    TIMES           reduce using rule 106 (stmt -> stmt_return .)
    LBRACE          reduce using rule 106 (stmt -> stmt_return .)
    LBRACKET        reduce using rule 106 (stmt -> stmt_return .)
    error           reduce using rule 106 (stmt -> stmt_return .)
    FOR             reduce using rule 106 (stmt -> stmt_return .)
    RETURN          reduce using rule 106 (stmt -> stmt_return .)
    INCREMENT       reduce using rule 106 (stmt -> stmt_return .)
    INT             reduce using rule 106 (stmt -> stmt_return .)
    FLOAT           reduce using rule 106 (stmt -> stmt_return .)
    VOID            reduce using rule 106 (stmt -> stmt_return .)
    MINUS           reduce using rule 106 (stmt -> stmt_return .)
    LPAREN          reduce using rule 106 (stmt -> stmt_return .)
    FNUM            reduce using rule 106 (stmt -> stmt_return .)
    INUM            reduce using rule 106 (stmt -> stmt_return .)
    ADDRESS         reduce using rule 106 (stmt -> stmt_return .)
    ELSE            reduce using rule 106 (stmt -> stmt_return .)


state 195

    (109) stmt -> PRINT . LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> PRINT . LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> PRINT . LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> PRINT . LPAREN argument_list SEMICOLON
    (113) stmt -> PRINT . LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> PRINT . LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> PRINT . LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> PRINT . LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> PRINT . LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> PRINT . LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> PRINT . LBRACE argument_list SEMICOLON
    (120) stmt -> PRINT . LBRACKET argument_list SEMICOLON
    (121) stmt -> PRINT . error argument_list SEMICOLON
    (122) stmt -> PRINT . error argument_list RPAREN SEMICOLON
    (123) stmt -> PRINT . error argument_list RBRACE SEMICOLON
    (124) stmt -> PRINT . error argument_list RBRACKET SEMICOLON
    (125) stmt -> PRINT . LPAREN argument_list RBRACE error
    (126) stmt -> PRINT . LPAREN argument_list RBRACKET error
    (127) stmt -> PRINT . LBRACE argument_list RPAREN error
    (128) stmt -> PRINT . LBRACKET argument_list RPAREN error
    (129) stmt -> PRINT . LBRACE argument_list RBRACE error
    (130) stmt -> PRINT . LBRACKET argument_list RBRACE error
    (131) stmt -> PRINT . LBRACE argument_list RBRACKET error
    (132) stmt -> PRINT . LBRACKET argument_list RBRACKET error
    (133) stmt -> PRINT . error argument_list RPAREN error
    (134) stmt -> PRINT . error argument_list RBRACE error
    (135) stmt -> PRINT . error argument_list RBRACKET error

    LPAREN          shift and go to state 261
    LBRACE          shift and go to state 262
    LBRACKET        shift and go to state 263
    error           shift and go to state 264


state 196

    (180) expr -> ID . EQUAL expr
    (181) expr -> ID . LBRACKET arith_expr RBRACKET EQUAL expr
    (191) incr_expr -> ID . INCREMENT
    (199) arith_expr -> ID .
    (206) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (208) arith_expr -> ID . LPAREN argument_list RPAREN

    EQUAL           shift and go to state 265
    LBRACKET        shift and go to state 266
    INCREMENT       shift and go to state 267
    PLUS            reduce using rule 199 (arith_expr -> ID .)
    MINUS           reduce using rule 199 (arith_expr -> ID .)
    TIMES           reduce using rule 199 (arith_expr -> ID .)
    DIV             reduce using rule 199 (arith_expr -> ID .)
    EQ              reduce using rule 199 (arith_expr -> ID .)
    NEQ             reduce using rule 199 (arith_expr -> ID .)
    GT              reduce using rule 199 (arith_expr -> ID .)
    LT              reduce using rule 199 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 199 (arith_expr -> ID .)
    error           reduce using rule 199 (arith_expr -> ID .)
    RPAREN          reduce using rule 199 (arith_expr -> ID .)
    RBRACE          reduce using rule 199 (arith_expr -> ID .)
    RBRACKET        reduce using rule 199 (arith_expr -> ID .)
    LPAREN          shift and go to state 268


state 197

    (186) basic_expr -> arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    EQ              reduce using rule 186 (basic_expr -> arith_expr .)
    NEQ             reduce using rule 186 (basic_expr -> arith_expr .)
    GT              reduce using rule 186 (basic_expr -> arith_expr .)
    LT              reduce using rule 186 (basic_expr -> arith_expr .)
    SEMICOLON       reduce using rule 186 (basic_expr -> arith_expr .)
    error           reduce using rule 186 (basic_expr -> arith_expr .)
    RPAREN          reduce using rule 186 (basic_expr -> arith_expr .)
    RBRACE          reduce using rule 186 (basic_expr -> arith_expr .)
    RBRACKET        reduce using rule 186 (basic_expr -> arith_expr .)
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 198

    (182) expr -> TIMES . ID EQUAL expr
    (202) arith_expr -> TIMES . ID
    (203) arith_expr -> TIMES . LPAREN arith_expr RPAREN
    (204) arith_expr -> TIMES . ID LPAREN argument_list RPAREN
    (207) arith_expr -> TIMES . ID LBRACKET arith_expr RBRACKET

    ID              shift and go to state 273
    LPAREN          shift and go to state 274


state 199

    (183) expr -> incr_expr .

    SEMICOLON       reduce using rule 183 (expr -> incr_expr .)
    error           reduce using rule 183 (expr -> incr_expr .)
    RPAREN          reduce using rule 183 (expr -> incr_expr .)
    RBRACE          reduce using rule 183 (expr -> incr_expr .)
    RBRACKET        reduce using rule 183 (expr -> incr_expr .)


state 200

    (184) expr -> basic_expr .
    (185) basic_expr -> basic_expr . compare arith_expr
    (187) compare -> . EQ
    (188) compare -> . NEQ
    (189) compare -> . GT
    (190) compare -> . LT

    SEMICOLON       reduce using rule 184 (expr -> basic_expr .)
    error           reduce using rule 184 (expr -> basic_expr .)
    RPAREN          reduce using rule 184 (expr -> basic_expr .)
    RBRACE          reduce using rule 184 (expr -> basic_expr .)
    RBRACKET        reduce using rule 184 (expr -> basic_expr .)
    EQ              shift and go to state 276
    NEQ             shift and go to state 277
    GT              shift and go to state 278
    LT              shift and go to state 279

    compare                        shift and go to state 275

state 201

    (138) declaration -> type . idbracket
    (139) declaration -> type . TIMES idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    TIMES           shift and go to state 280
    ID              shift and go to state 18

    idbracket                      shift and go to state 15

state 202

    (164) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LPAREN          shift and go to state 281
    LBRACE          shift and go to state 283
    LBRACKET        shift and go to state 284
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 282
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 203

    (176) stmt_return -> RETURN . expr SEMICOLON
    (177) stmt_return -> RETURN . expr error
    (178) stmt_return -> RETURN . SEMICOLON
    (179) stmt_return -> RETURN . error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 286
    error           shift and go to state 287
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 285
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 204

    (192) incr_expr -> INCREMENT . ID

    ID              shift and go to state 288


state 205

    (193) arith_expr -> MINUS . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 289

state 206

    (200) arith_expr -> FNUM .

    PLUS            reduce using rule 200 (arith_expr -> FNUM .)
    MINUS           reduce using rule 200 (arith_expr -> FNUM .)
    TIMES           reduce using rule 200 (arith_expr -> FNUM .)
    DIV             reduce using rule 200 (arith_expr -> FNUM .)
    EQ              reduce using rule 200 (arith_expr -> FNUM .)
    NEQ             reduce using rule 200 (arith_expr -> FNUM .)
    GT              reduce using rule 200 (arith_expr -> FNUM .)
    LT              reduce using rule 200 (arith_expr -> FNUM .)
    SEMICOLON       reduce using rule 200 (arith_expr -> FNUM .)
    error           reduce using rule 200 (arith_expr -> FNUM .)
    RPAREN          reduce using rule 200 (arith_expr -> FNUM .)
    RBRACE          reduce using rule 200 (arith_expr -> FNUM .)
    RBRACKET        reduce using rule 200 (arith_expr -> FNUM .)
    COMMA           reduce using rule 200 (arith_expr -> FNUM .)


state 207

    (201) arith_expr -> INUM .

    PLUS            reduce using rule 201 (arith_expr -> INUM .)
    MINUS           reduce using rule 201 (arith_expr -> INUM .)
    TIMES           reduce using rule 201 (arith_expr -> INUM .)
    DIV             reduce using rule 201 (arith_expr -> INUM .)
    EQ              reduce using rule 201 (arith_expr -> INUM .)
    NEQ             reduce using rule 201 (arith_expr -> INUM .)
    GT              reduce using rule 201 (arith_expr -> INUM .)
    LT              reduce using rule 201 (arith_expr -> INUM .)
    SEMICOLON       reduce using rule 201 (arith_expr -> INUM .)
    error           reduce using rule 201 (arith_expr -> INUM .)
    RPAREN          reduce using rule 201 (arith_expr -> INUM .)
    RBRACE          reduce using rule 201 (arith_expr -> INUM .)
    RBRACKET        reduce using rule 201 (arith_expr -> INUM .)
    COMMA           reduce using rule 201 (arith_expr -> INUM .)


state 208

    (205) arith_expr -> ADDRESS . ID

    ID              shift and go to state 290


state 209

    (153) stmt_block -> LBRACE stmt_list RBRACE .

    INT             reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    VOID            reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    $end            reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    RBRACKET        reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    RPAREN          reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    IF              reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    SEMICOLON       reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    ID              reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    TIMES           reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    LBRACE          reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    LBRACKET        reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    error           reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    INCREMENT       reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    MINUS           reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    FNUM            reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    INUM            reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    ADDRESS         reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)
    ELSE            reduce using rule 153 (stmt_block -> LBRACE stmt_list RBRACE .)


state 210

    (157) stmt_block -> LBRACE stmt_list RPAREN .

    INT             reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    FLOAT           reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    VOID            reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    $end            reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    RBRACKET        reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    RBRACE          reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    RPAREN          reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    IF              reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    SEMICOLON       reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    PRINT           reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    ID              reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    TIMES           reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    LBRACE          reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    LBRACKET        reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    error           reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    FOR             reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    RETURN          reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    INCREMENT       reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    MINUS           reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    LPAREN          reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    FNUM            reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    INUM            reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    ADDRESS         reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)
    ELSE            reduce using rule 157 (stmt_block -> LBRACE stmt_list RPAREN .)


state 211

    (158) stmt_block -> LBRACE stmt_list RBRACKET .

    INT             reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    FLOAT           reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    VOID            reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    $end            reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    RBRACKET        reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    RBRACE          reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    RPAREN          reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    IF              reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    SEMICOLON       reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    PRINT           reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    ID              reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    TIMES           reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    LBRACE          reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    LBRACKET        reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    error           reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    FOR             reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    RETURN          reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    INCREMENT       reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    MINUS           reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    LPAREN          reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    FNUM            reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    INUM            reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    ADDRESS         reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)
    ELSE            reduce using rule 158 (stmt_block -> LBRACE stmt_list RBRACKET .)


state 212

    (154) stmt_block -> LBRACKET stmt_list RPAREN .

    INT             reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    FLOAT           reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    VOID            reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    $end            reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    RBRACKET        reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    RBRACE          reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    RPAREN          reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    IF              reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    SEMICOLON       reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    PRINT           reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    ID              reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    TIMES           reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    LBRACE          reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    LBRACKET        reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    error           reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    FOR             reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    RETURN          reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    INCREMENT       reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    MINUS           reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    LPAREN          reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    FNUM            reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    INUM            reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    ADDRESS         reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)
    ELSE            reduce using rule 154 (stmt_block -> LBRACKET stmt_list RPAREN .)


state 213

    (155) stmt_block -> LBRACKET stmt_list RBRACE .

    INT             reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    FLOAT           reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    VOID            reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    $end            reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    RBRACKET        reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    RBRACE          reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    RPAREN          reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    IF              reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    SEMICOLON       reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    PRINT           reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    ID              reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    TIMES           reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    LBRACE          reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    LBRACKET        reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    error           reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    FOR             reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    RETURN          reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    INCREMENT       reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    MINUS           reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    LPAREN          reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    FNUM            reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    INUM            reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    ADDRESS         reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)
    ELSE            reduce using rule 155 (stmt_block -> LBRACKET stmt_list RBRACE .)


state 214

    (156) stmt_block -> LBRACKET stmt_list RBRACKET .

    INT             reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    FLOAT           reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    VOID            reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    $end            reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    RBRACKET        reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    RBRACE          reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    RPAREN          reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    IF              reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    SEMICOLON       reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    PRINT           reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    ID              reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    TIMES           reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    LBRACE          reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    LBRACKET        reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    error           reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    FOR             reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    RETURN          reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    INCREMENT       reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    MINUS           reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    LPAREN          reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    FNUM            reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    INUM            reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    ADDRESS         reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)
    ELSE            reduce using rule 156 (stmt_block -> LBRACKET stmt_list RBRACKET .)


state 215

    (6) func_declaration -> type ID error params error stmt_block .

    INT             reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    FLOAT           reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    VOID            reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    $end            reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)


state 216

    (10) func_declaration -> type ID error params RPAREN stmt_block .

    INT             reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    FLOAT           reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    VOID            reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    $end            reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)


state 217

    (11) func_declaration -> type ID error params RBRACE stmt_block .

    INT             reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    FLOAT           reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    VOID            reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    $end            reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)


state 218

    (12) func_declaration -> type ID error params RBRACKET stmt_block .

    INT             reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    FLOAT           reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    VOID            reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    $end            reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)


state 219

    (7) func_declaration -> type ID LBRACE params error stmt_block .

    INT             reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    FLOAT           reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    VOID            reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    $end            reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)


state 220

    (8) func_declaration -> type ID LBRACKET params error stmt_block .

    INT             reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    FLOAT           reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    VOID            reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    $end            reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)


state 221

    (28) func_declaration -> type TIMES ID LPAREN params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 291

state 222

    (40) func_declaration -> type TIMES ID LPAREN params stmt_block .

    INT             reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    FLOAT           reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    VOID            reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    $end            reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)


state 223

    (30) func_declaration -> type TIMES ID LPAREN params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 292

state 224

    (34) func_declaration -> type TIMES ID LPAREN params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 293

state 225

    (44) func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .

    INT             reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    $end            reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)


state 226

    (46) func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .

    INT             reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    $end            reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)


state 227

    (50) func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .

    INT             reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)


state 228

    (37) func_declaration -> type TIMES ID params RPAREN stmt_block .

    INT             reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    FLOAT           reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    VOID            reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    $end            reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)


state 229

    (38) func_declaration -> type TIMES ID params RBRACE stmt_block .

    INT             reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    FLOAT           reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    VOID            reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    $end            reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)


state 230

    (39) func_declaration -> type TIMES ID params RBRACKET stmt_block .

    INT             reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    FLOAT           reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    VOID            reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    $end            reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)


state 231

    (29) func_declaration -> type TIMES ID LBRACE params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 294

state 232

    (41) func_declaration -> type TIMES ID LBRACE params stmt_block .

    INT             reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    FLOAT           reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    VOID            reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    $end            reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)


state 233

    (31) func_declaration -> type TIMES ID LBRACE params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 295

state 234

    (35) func_declaration -> type TIMES ID LBRACE params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 296

state 235

    (45) func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .

    INT             reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    $end            reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)


state 236

    (47) func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .

    INT             reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    $end            reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)


state 237

    (51) func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .

    INT             reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)


state 238

    (32) func_declaration -> type TIMES ID LBRACKET params RBRACE . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 297

state 239

    (42) func_declaration -> type TIMES ID LBRACKET params stmt_block .

    INT             reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    FLOAT           reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    VOID            reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    $end            reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)


state 240

    (33) func_declaration -> type TIMES ID LBRACKET params RPAREN . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 298

state 241

    (36) func_declaration -> type TIMES ID LBRACKET params RBRACKET . stmt_block
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN

    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46

    stmt_block                     shift and go to state 299

state 242

    (48) func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .

    INT             reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)


state 243

    (49) func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .

    INT             reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)


state 244

    (52) func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)


state 245

    (59) func_declaration -> type MAIN LPAREN params RPAREN stmt_block .

    INT             reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)


state 246

    (61) func_declaration -> type MAIN LPAREN params RBRACE stmt_block .

    INT             reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    FLOAT           reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    VOID            reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    $end            reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)


state 247

    (66) func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .

    INT             reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    VOID            reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    $end            reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)


state 248

    (60) func_declaration -> type MAIN LBRACE params RPAREN stmt_block .

    INT             reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    FLOAT           reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    VOID            reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    $end            reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)


state 249

    (62) func_declaration -> type MAIN LBRACE params RBRACE stmt_block .

    INT             reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    FLOAT           reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    VOID            reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    $end            reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)


state 250

    (65) func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .

    INT             reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    FLOAT           reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    VOID            reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    $end            reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)


state 251

    (63) func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .

    INT             reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    FLOAT           reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    VOID            reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    $end            reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)


state 252

    (64) func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .

    INT             reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    FLOAT           reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    VOID            reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    $end            reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)


state 253

    (67) func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .

    INT             reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    FLOAT           reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    VOID            reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    $end            reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)


state 254

    (98) mstmt -> IF LPAREN . expr RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN . expr RPAREN genstmt
    (101) umstmt -> IF LPAREN . expr RPAREN mstmt ELSE umstmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 300
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 255

    (194) arith_expr -> LPAREN arith_expr . RPAREN
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          shift and go to state 301
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 256

    (202) arith_expr -> TIMES . ID
    (203) arith_expr -> TIMES . LPAREN arith_expr RPAREN
    (204) arith_expr -> TIMES . ID LPAREN argument_list RPAREN
    (207) arith_expr -> TIMES . ID LBRACKET arith_expr RBRACKET

    ID              shift and go to state 302
    LPAREN          shift and go to state 274


state 257

    (199) arith_expr -> ID .
    (206) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (208) arith_expr -> ID . LPAREN argument_list RPAREN

    RPAREN          reduce using rule 199 (arith_expr -> ID .)
    PLUS            reduce using rule 199 (arith_expr -> ID .)
    MINUS           reduce using rule 199 (arith_expr -> ID .)
    TIMES           reduce using rule 199 (arith_expr -> ID .)
    DIV             reduce using rule 199 (arith_expr -> ID .)
    EQ              reduce using rule 199 (arith_expr -> ID .)
    NEQ             reduce using rule 199 (arith_expr -> ID .)
    GT              reduce using rule 199 (arith_expr -> ID .)
    LT              reduce using rule 199 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 199 (arith_expr -> ID .)
    error           reduce using rule 199 (arith_expr -> ID .)
    RBRACE          reduce using rule 199 (arith_expr -> ID .)
    RBRACKET        reduce using rule 199 (arith_expr -> ID .)
    COMMA           reduce using rule 199 (arith_expr -> ID .)
    LBRACKET        shift and go to state 303
    LPAREN          shift and go to state 268


state 258

    (102) stmt -> expr SEMICOLON .

    RBRACKET        reduce using rule 102 (stmt -> expr SEMICOLON .)
    RBRACE          reduce using rule 102 (stmt -> expr SEMICOLON .)
    RPAREN          reduce using rule 102 (stmt -> expr SEMICOLON .)
    IF              reduce using rule 102 (stmt -> expr SEMICOLON .)
    SEMICOLON       reduce using rule 102 (stmt -> expr SEMICOLON .)
    PRINT           reduce using rule 102 (stmt -> expr SEMICOLON .)
    ID              reduce using rule 102 (stmt -> expr SEMICOLON .)
    TIMES           reduce using rule 102 (stmt -> expr SEMICOLON .)
    LBRACE          reduce using rule 102 (stmt -> expr SEMICOLON .)
    LBRACKET        reduce using rule 102 (stmt -> expr SEMICOLON .)
    error           reduce using rule 102 (stmt -> expr SEMICOLON .)
    FOR             reduce using rule 102 (stmt -> expr SEMICOLON .)
    RETURN          reduce using rule 102 (stmt -> expr SEMICOLON .)
    INCREMENT       reduce using rule 102 (stmt -> expr SEMICOLON .)
    INT             reduce using rule 102 (stmt -> expr SEMICOLON .)
    FLOAT           reduce using rule 102 (stmt -> expr SEMICOLON .)
    VOID            reduce using rule 102 (stmt -> expr SEMICOLON .)
    MINUS           reduce using rule 102 (stmt -> expr SEMICOLON .)
    LPAREN          reduce using rule 102 (stmt -> expr SEMICOLON .)
    FNUM            reduce using rule 102 (stmt -> expr SEMICOLON .)
    INUM            reduce using rule 102 (stmt -> expr SEMICOLON .)
    ADDRESS         reduce using rule 102 (stmt -> expr SEMICOLON .)
    ELSE            reduce using rule 102 (stmt -> expr SEMICOLON .)


state 259

    (108) stmt -> expr error .

    RBRACKET        reduce using rule 108 (stmt -> expr error .)
    RBRACE          reduce using rule 108 (stmt -> expr error .)
    RPAREN          reduce using rule 108 (stmt -> expr error .)
    IF              reduce using rule 108 (stmt -> expr error .)
    SEMICOLON       reduce using rule 108 (stmt -> expr error .)
    PRINT           reduce using rule 108 (stmt -> expr error .)
    ID              reduce using rule 108 (stmt -> expr error .)
    TIMES           reduce using rule 108 (stmt -> expr error .)
    LBRACE          reduce using rule 108 (stmt -> expr error .)
    LBRACKET        reduce using rule 108 (stmt -> expr error .)
    error           reduce using rule 108 (stmt -> expr error .)
    FOR             reduce using rule 108 (stmt -> expr error .)
    RETURN          reduce using rule 108 (stmt -> expr error .)
    INCREMENT       reduce using rule 108 (stmt -> expr error .)
    INT             reduce using rule 108 (stmt -> expr error .)
    FLOAT           reduce using rule 108 (stmt -> expr error .)
    VOID            reduce using rule 108 (stmt -> expr error .)
    MINUS           reduce using rule 108 (stmt -> expr error .)
    LPAREN          reduce using rule 108 (stmt -> expr error .)
    FNUM            reduce using rule 108 (stmt -> expr error .)
    INUM            reduce using rule 108 (stmt -> expr error .)
    ADDRESS         reduce using rule 108 (stmt -> expr error .)
    ELSE            reduce using rule 108 (stmt -> expr error .)


state 260

    (103) stmt -> declaration SEMICOLON .

    RBRACKET        reduce using rule 103 (stmt -> declaration SEMICOLON .)
    RBRACE          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    RPAREN          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    IF              reduce using rule 103 (stmt -> declaration SEMICOLON .)
    SEMICOLON       reduce using rule 103 (stmt -> declaration SEMICOLON .)
    PRINT           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ID              reduce using rule 103 (stmt -> declaration SEMICOLON .)
    TIMES           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    LBRACE          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    LBRACKET        reduce using rule 103 (stmt -> declaration SEMICOLON .)
    error           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FOR             reduce using rule 103 (stmt -> declaration SEMICOLON .)
    RETURN          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INCREMENT       reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INT             reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FLOAT           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    VOID            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    MINUS           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    LPAREN          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FNUM            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INUM            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ADDRESS         reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ELSE            reduce using rule 103 (stmt -> declaration SEMICOLON .)


state 261

    (109) stmt -> PRINT LPAREN . argument_list RPAREN SEMICOLON
    (110) stmt -> PRINT LPAREN . argument_list RBRACE SEMICOLON
    (111) stmt -> PRINT LPAREN . argument_list RBRACKET SEMICOLON
    (112) stmt -> PRINT LPAREN . argument_list SEMICOLON
    (125) stmt -> PRINT LPAREN . argument_list RBRACE error
    (126) stmt -> PRINT LPAREN . argument_list RBRACKET error
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 304
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 262

    (113) stmt -> PRINT LBRACE . argument_list RPAREN SEMICOLON
    (115) stmt -> PRINT LBRACE . argument_list RBRACE SEMICOLON
    (117) stmt -> PRINT LBRACE . argument_list RBRACKET SEMICOLON
    (119) stmt -> PRINT LBRACE . argument_list SEMICOLON
    (127) stmt -> PRINT LBRACE . argument_list RPAREN error
    (129) stmt -> PRINT LBRACE . argument_list RBRACE error
    (131) stmt -> PRINT LBRACE . argument_list RBRACKET error
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 310
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 263

    (114) stmt -> PRINT LBRACKET . argument_list RPAREN SEMICOLON
    (116) stmt -> PRINT LBRACKET . argument_list RBRACE SEMICOLON
    (118) stmt -> PRINT LBRACKET . argument_list RBRACKET SEMICOLON
    (120) stmt -> PRINT LBRACKET . argument_list SEMICOLON
    (128) stmt -> PRINT LBRACKET . argument_list RPAREN error
    (130) stmt -> PRINT LBRACKET . argument_list RBRACE error
    (132) stmt -> PRINT LBRACKET . argument_list RBRACKET error
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 311
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 264

    (121) stmt -> PRINT error . argument_list SEMICOLON
    (122) stmt -> PRINT error . argument_list RPAREN SEMICOLON
    (123) stmt -> PRINT error . argument_list RBRACE SEMICOLON
    (124) stmt -> PRINT error . argument_list RBRACKET SEMICOLON
    (133) stmt -> PRINT error . argument_list RPAREN error
    (134) stmt -> PRINT error . argument_list RBRACE error
    (135) stmt -> PRINT error . argument_list RBRACKET error
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    SEMICOLON       reduce using rule 215 (empty -> .)
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 312
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 265

    (180) expr -> ID EQUAL . expr
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 313
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 266

    (181) expr -> ID LBRACKET . arith_expr RBRACKET EQUAL expr
    (206) arith_expr -> ID LBRACKET . arith_expr RBRACKET
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 314

state 267

    (191) incr_expr -> ID INCREMENT .

    SEMICOLON       reduce using rule 191 (incr_expr -> ID INCREMENT .)
    error           reduce using rule 191 (incr_expr -> ID INCREMENT .)
    RPAREN          reduce using rule 191 (incr_expr -> ID INCREMENT .)
    RBRACE          reduce using rule 191 (incr_expr -> ID INCREMENT .)
    RBRACKET        reduce using rule 191 (incr_expr -> ID INCREMENT .)


state 268

    (208) arith_expr -> ID LPAREN . argument_list RPAREN
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 315
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 269

    (195) arith_expr -> arith_expr PLUS . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 316

state 270

    (196) arith_expr -> arith_expr MINUS . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 317

state 271

    (197) arith_expr -> arith_expr TIMES . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 318

state 272

    (198) arith_expr -> arith_expr DIV . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 319

state 273

    (182) expr -> TIMES ID . EQUAL expr
    (202) arith_expr -> TIMES ID .
    (204) arith_expr -> TIMES ID . LPAREN argument_list RPAREN
    (207) arith_expr -> TIMES ID . LBRACKET arith_expr RBRACKET

    EQUAL           shift and go to state 320
    PLUS            reduce using rule 202 (arith_expr -> TIMES ID .)
    MINUS           reduce using rule 202 (arith_expr -> TIMES ID .)
    TIMES           reduce using rule 202 (arith_expr -> TIMES ID .)
    DIV             reduce using rule 202 (arith_expr -> TIMES ID .)
    EQ              reduce using rule 202 (arith_expr -> TIMES ID .)
    NEQ             reduce using rule 202 (arith_expr -> TIMES ID .)
    GT              reduce using rule 202 (arith_expr -> TIMES ID .)
    LT              reduce using rule 202 (arith_expr -> TIMES ID .)
    SEMICOLON       reduce using rule 202 (arith_expr -> TIMES ID .)
    error           reduce using rule 202 (arith_expr -> TIMES ID .)
    RPAREN          reduce using rule 202 (arith_expr -> TIMES ID .)
    RBRACE          reduce using rule 202 (arith_expr -> TIMES ID .)
    RBRACKET        reduce using rule 202 (arith_expr -> TIMES ID .)
    LPAREN          shift and go to state 321
    LBRACKET        shift and go to state 322


state 274

    (203) arith_expr -> TIMES LPAREN . arith_expr RPAREN
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 323

state 275

    (185) basic_expr -> basic_expr compare . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 324

state 276

    (187) compare -> EQ .

    MINUS           reduce using rule 187 (compare -> EQ .)
    LPAREN          reduce using rule 187 (compare -> EQ .)
    ID              reduce using rule 187 (compare -> EQ .)
    FNUM            reduce using rule 187 (compare -> EQ .)
    INUM            reduce using rule 187 (compare -> EQ .)
    TIMES           reduce using rule 187 (compare -> EQ .)
    ADDRESS         reduce using rule 187 (compare -> EQ .)


state 277

    (188) compare -> NEQ .

    MINUS           reduce using rule 188 (compare -> NEQ .)
    LPAREN          reduce using rule 188 (compare -> NEQ .)
    ID              reduce using rule 188 (compare -> NEQ .)
    FNUM            reduce using rule 188 (compare -> NEQ .)
    INUM            reduce using rule 188 (compare -> NEQ .)
    TIMES           reduce using rule 188 (compare -> NEQ .)
    ADDRESS         reduce using rule 188 (compare -> NEQ .)


state 278

    (189) compare -> GT .

    MINUS           reduce using rule 189 (compare -> GT .)
    LPAREN          reduce using rule 189 (compare -> GT .)
    ID              reduce using rule 189 (compare -> GT .)
    FNUM            reduce using rule 189 (compare -> GT .)
    INUM            reduce using rule 189 (compare -> GT .)
    TIMES           reduce using rule 189 (compare -> GT .)
    ADDRESS         reduce using rule 189 (compare -> GT .)


state 279

    (190) compare -> LT .

    MINUS           reduce using rule 190 (compare -> LT .)
    LPAREN          reduce using rule 190 (compare -> LT .)
    ID              reduce using rule 190 (compare -> LT .)
    FNUM            reduce using rule 190 (compare -> LT .)
    INUM            reduce using rule 190 (compare -> LT .)
    TIMES           reduce using rule 190 (compare -> LT .)
    ADDRESS         reduce using rule 190 (compare -> LT .)


state 280

    (139) declaration -> type TIMES . idbracket
    (140) idbracket -> . ID
    (141) idbracket -> . ID LBRACKET INUM RBRACKET
    (142) idbracket -> . ID LBRACKET INUM RBRACE
    (143) idbracket -> . ID LBRACE INUM RBRACKET
    (144) idbracket -> . ID LPAREN INUM RBRACKET
    (145) idbracket -> . ID LBRACKET INUM RPAREN
    (146) idbracket -> . ID LBRACE INUM RPAREN
    (147) idbracket -> . ID LPAREN INUM RBRACE
    (148) idbracket -> . ID LPAREN INUM RPAREN
    (149) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 18

    idbracket                      shift and go to state 27

state 281

    (164) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (194) arith_expr -> LPAREN . arith_expr RPAREN
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr

    ID              shift and go to state 327
    TIMES           shift and go to state 198
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208
    INCREMENT       shift and go to state 204

    expr                           shift and go to state 325
    arith_expr                     shift and go to state 326
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 282

    (173) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 328


state 283

    (166) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (171) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 329
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 284

    (168) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 330
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 285

    (176) stmt_return -> RETURN expr . SEMICOLON
    (177) stmt_return -> RETURN expr . error

    SEMICOLON       shift and go to state 331
    error           shift and go to state 332


state 286

    (178) stmt_return -> RETURN SEMICOLON .

    RBRACKET        reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    RPAREN          reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    IF              reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    ID              reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    TIMES           reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    LBRACKET        reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    error           reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    FOR             reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    INCREMENT       reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    INT             reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    VOID            reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    MINUS           reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    FNUM            reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    INUM            reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    ADDRESS         reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)
    ELSE            reduce using rule 178 (stmt_return -> RETURN SEMICOLON .)


state 287

    (179) stmt_return -> RETURN error .

    RBRACKET        reduce using rule 179 (stmt_return -> RETURN error .)
    RBRACE          reduce using rule 179 (stmt_return -> RETURN error .)
    RPAREN          reduce using rule 179 (stmt_return -> RETURN error .)
    IF              reduce using rule 179 (stmt_return -> RETURN error .)
    SEMICOLON       reduce using rule 179 (stmt_return -> RETURN error .)
    PRINT           reduce using rule 179 (stmt_return -> RETURN error .)
    ID              reduce using rule 179 (stmt_return -> RETURN error .)
    TIMES           reduce using rule 179 (stmt_return -> RETURN error .)
    LBRACE          reduce using rule 179 (stmt_return -> RETURN error .)
    LBRACKET        reduce using rule 179 (stmt_return -> RETURN error .)
    error           reduce using rule 179 (stmt_return -> RETURN error .)
    FOR             reduce using rule 179 (stmt_return -> RETURN error .)
    RETURN          reduce using rule 179 (stmt_return -> RETURN error .)
    INCREMENT       reduce using rule 179 (stmt_return -> RETURN error .)
    INT             reduce using rule 179 (stmt_return -> RETURN error .)
    FLOAT           reduce using rule 179 (stmt_return -> RETURN error .)
    VOID            reduce using rule 179 (stmt_return -> RETURN error .)
    MINUS           reduce using rule 179 (stmt_return -> RETURN error .)
    LPAREN          reduce using rule 179 (stmt_return -> RETURN error .)
    FNUM            reduce using rule 179 (stmt_return -> RETURN error .)
    INUM            reduce using rule 179 (stmt_return -> RETURN error .)
    ADDRESS         reduce using rule 179 (stmt_return -> RETURN error .)
    ELSE            reduce using rule 179 (stmt_return -> RETURN error .)


state 288

    (192) incr_expr -> INCREMENT ID .

    SEMICOLON       reduce using rule 192 (incr_expr -> INCREMENT ID .)
    error           reduce using rule 192 (incr_expr -> INCREMENT ID .)
    RPAREN          reduce using rule 192 (incr_expr -> INCREMENT ID .)
    RBRACE          reduce using rule 192 (incr_expr -> INCREMENT ID .)
    RBRACKET        reduce using rule 192 (incr_expr -> INCREMENT ID .)


state 289

    (193) arith_expr -> MINUS arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    MINUS           reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    TIMES           reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    DIV             reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    EQ              reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    NEQ             reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    GT              reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    LT              reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    SEMICOLON       reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    error           reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    RPAREN          reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    RBRACE          reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    RBRACKET        reduce using rule 193 (arith_expr -> MINUS arith_expr .)
    COMMA           reduce using rule 193 (arith_expr -> MINUS arith_expr .)

  ! PLUS            [ shift and go to state 269 ]
  ! MINUS           [ shift and go to state 270 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIV             [ shift and go to state 272 ]


state 290

    (205) arith_expr -> ADDRESS ID .

    PLUS            reduce using rule 205 (arith_expr -> ADDRESS ID .)
    MINUS           reduce using rule 205 (arith_expr -> ADDRESS ID .)
    TIMES           reduce using rule 205 (arith_expr -> ADDRESS ID .)
    DIV             reduce using rule 205 (arith_expr -> ADDRESS ID .)
    EQ              reduce using rule 205 (arith_expr -> ADDRESS ID .)
    NEQ             reduce using rule 205 (arith_expr -> ADDRESS ID .)
    GT              reduce using rule 205 (arith_expr -> ADDRESS ID .)
    LT              reduce using rule 205 (arith_expr -> ADDRESS ID .)
    SEMICOLON       reduce using rule 205 (arith_expr -> ADDRESS ID .)
    error           reduce using rule 205 (arith_expr -> ADDRESS ID .)
    RPAREN          reduce using rule 205 (arith_expr -> ADDRESS ID .)
    RBRACE          reduce using rule 205 (arith_expr -> ADDRESS ID .)
    RBRACKET        reduce using rule 205 (arith_expr -> ADDRESS ID .)
    COMMA           reduce using rule 205 (arith_expr -> ADDRESS ID .)


state 291

    (28) func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .

    INT             reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)


state 292

    (30) func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .

    INT             reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    FLOAT           reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    VOID            reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    $end            reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)


state 293

    (34) func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .

    INT             reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    VOID            reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    $end            reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)


state 294

    (29) func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .

    INT             reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    FLOAT           reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    VOID            reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    $end            reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)


state 295

    (31) func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .

    INT             reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    FLOAT           reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    VOID            reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    $end            reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)


state 296

    (35) func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .

    INT             reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    FLOAT           reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    VOID            reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    $end            reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)


state 297

    (32) func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .

    INT             reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    FLOAT           reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    VOID            reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    $end            reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)


state 298

    (33) func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .

    INT             reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    FLOAT           reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    VOID            reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    $end            reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)


state 299

    (36) func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .

    INT             reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    FLOAT           reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    VOID            reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    $end            reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)


state 300

    (98) mstmt -> IF LPAREN expr . RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN expr . RPAREN genstmt
    (101) umstmt -> IF LPAREN expr . RPAREN mstmt ELSE umstmt

    RPAREN          shift and go to state 333


state 301

    (194) arith_expr -> LPAREN arith_expr RPAREN .

    PLUS            reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    MINUS           reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    TIMES           reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    DIV             reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    EQ              reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    NEQ             reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    GT              reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    LT              reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    SEMICOLON       reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    error           reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    RPAREN          reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    RBRACE          reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    RBRACKET        reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)
    COMMA           reduce using rule 194 (arith_expr -> LPAREN arith_expr RPAREN .)


state 302

    (202) arith_expr -> TIMES ID .
    (204) arith_expr -> TIMES ID . LPAREN argument_list RPAREN
    (207) arith_expr -> TIMES ID . LBRACKET arith_expr RBRACKET

    RPAREN          reduce using rule 202 (arith_expr -> TIMES ID .)
    PLUS            reduce using rule 202 (arith_expr -> TIMES ID .)
    MINUS           reduce using rule 202 (arith_expr -> TIMES ID .)
    TIMES           reduce using rule 202 (arith_expr -> TIMES ID .)
    DIV             reduce using rule 202 (arith_expr -> TIMES ID .)
    EQ              reduce using rule 202 (arith_expr -> TIMES ID .)
    NEQ             reduce using rule 202 (arith_expr -> TIMES ID .)
    GT              reduce using rule 202 (arith_expr -> TIMES ID .)
    LT              reduce using rule 202 (arith_expr -> TIMES ID .)
    SEMICOLON       reduce using rule 202 (arith_expr -> TIMES ID .)
    error           reduce using rule 202 (arith_expr -> TIMES ID .)
    RBRACE          reduce using rule 202 (arith_expr -> TIMES ID .)
    RBRACKET        reduce using rule 202 (arith_expr -> TIMES ID .)
    COMMA           reduce using rule 202 (arith_expr -> TIMES ID .)
    LPAREN          shift and go to state 321
    LBRACKET        shift and go to state 322


state 303

    (206) arith_expr -> ID LBRACKET . arith_expr RBRACKET
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 334

state 304

    (109) stmt -> PRINT LPAREN argument_list . RPAREN SEMICOLON
    (110) stmt -> PRINT LPAREN argument_list . RBRACE SEMICOLON
    (111) stmt -> PRINT LPAREN argument_list . RBRACKET SEMICOLON
    (112) stmt -> PRINT LPAREN argument_list . SEMICOLON
    (125) stmt -> PRINT LPAREN argument_list . RBRACE error
    (126) stmt -> PRINT LPAREN argument_list . RBRACKET error
    (210) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 335
    RBRACE          shift and go to state 337
    RBRACKET        shift and go to state 338
    SEMICOLON       shift and go to state 336
    COMMA           shift and go to state 339


state 305

    (214) argument -> error .

    RPAREN          reduce using rule 214 (argument -> error .)
    RBRACE          reduce using rule 214 (argument -> error .)
    RBRACKET        reduce using rule 214 (argument -> error .)
    SEMICOLON       reduce using rule 214 (argument -> error .)
    COMMA           reduce using rule 214 (argument -> error .)


state 306

    (209) argument_list -> argument .

    RPAREN          reduce using rule 209 (argument_list -> argument .)
    RBRACE          reduce using rule 209 (argument_list -> argument .)
    RBRACKET        reduce using rule 209 (argument_list -> argument .)
    SEMICOLON       reduce using rule 209 (argument_list -> argument .)
    COMMA           reduce using rule 209 (argument_list -> argument .)


state 307

    (211) argument -> empty .

    RPAREN          reduce using rule 211 (argument -> empty .)
    RBRACE          reduce using rule 211 (argument -> empty .)
    RBRACKET        reduce using rule 211 (argument -> empty .)
    SEMICOLON       reduce using rule 211 (argument -> empty .)
    COMMA           reduce using rule 211 (argument -> empty .)


state 308

    (212) argument -> arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          reduce using rule 212 (argument -> arith_expr .)
    RBRACE          reduce using rule 212 (argument -> arith_expr .)
    RBRACKET        reduce using rule 212 (argument -> arith_expr .)
    SEMICOLON       reduce using rule 212 (argument -> arith_expr .)
    COMMA           reduce using rule 212 (argument -> arith_expr .)
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 309

    (213) argument -> LITERAL .

    RPAREN          reduce using rule 213 (argument -> LITERAL .)
    RBRACE          reduce using rule 213 (argument -> LITERAL .)
    RBRACKET        reduce using rule 213 (argument -> LITERAL .)
    SEMICOLON       reduce using rule 213 (argument -> LITERAL .)
    COMMA           reduce using rule 213 (argument -> LITERAL .)


state 310

    (113) stmt -> PRINT LBRACE argument_list . RPAREN SEMICOLON
    (115) stmt -> PRINT LBRACE argument_list . RBRACE SEMICOLON
    (117) stmt -> PRINT LBRACE argument_list . RBRACKET SEMICOLON
    (119) stmt -> PRINT LBRACE argument_list . SEMICOLON
    (127) stmt -> PRINT LBRACE argument_list . RPAREN error
    (129) stmt -> PRINT LBRACE argument_list . RBRACE error
    (131) stmt -> PRINT LBRACE argument_list . RBRACKET error
    (210) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 340
    RBRACE          shift and go to state 342
    RBRACKET        shift and go to state 343
    SEMICOLON       shift and go to state 341
    COMMA           shift and go to state 339


state 311

    (114) stmt -> PRINT LBRACKET argument_list . RPAREN SEMICOLON
    (116) stmt -> PRINT LBRACKET argument_list . RBRACE SEMICOLON
    (118) stmt -> PRINT LBRACKET argument_list . RBRACKET SEMICOLON
    (120) stmt -> PRINT LBRACKET argument_list . SEMICOLON
    (128) stmt -> PRINT LBRACKET argument_list . RPAREN error
    (130) stmt -> PRINT LBRACKET argument_list . RBRACE error
    (132) stmt -> PRINT LBRACKET argument_list . RBRACKET error
    (210) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 344
    RBRACE          shift and go to state 346
    RBRACKET        shift and go to state 347
    SEMICOLON       shift and go to state 345
    COMMA           shift and go to state 339


state 312

    (121) stmt -> PRINT error argument_list . SEMICOLON
    (122) stmt -> PRINT error argument_list . RPAREN SEMICOLON
    (123) stmt -> PRINT error argument_list . RBRACE SEMICOLON
    (124) stmt -> PRINT error argument_list . RBRACKET SEMICOLON
    (133) stmt -> PRINT error argument_list . RPAREN error
    (134) stmt -> PRINT error argument_list . RBRACE error
    (135) stmt -> PRINT error argument_list . RBRACKET error
    (210) argument_list -> argument_list . COMMA argument

    SEMICOLON       shift and go to state 348
    RPAREN          shift and go to state 349
    RBRACE          shift and go to state 350
    RBRACKET        shift and go to state 351
    COMMA           shift and go to state 339


state 313

    (180) expr -> ID EQUAL expr .

    SEMICOLON       reduce using rule 180 (expr -> ID EQUAL expr .)
    error           reduce using rule 180 (expr -> ID EQUAL expr .)
    RPAREN          reduce using rule 180 (expr -> ID EQUAL expr .)
    RBRACE          reduce using rule 180 (expr -> ID EQUAL expr .)
    RBRACKET        reduce using rule 180 (expr -> ID EQUAL expr .)


state 314

    (181) expr -> ID LBRACKET arith_expr . RBRACKET EQUAL expr
    (206) arith_expr -> ID LBRACKET arith_expr . RBRACKET
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 352
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 315

    (208) arith_expr -> ID LPAREN argument_list . RPAREN
    (210) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 353
    COMMA           shift and go to state 339


state 316

    (195) arith_expr -> arith_expr PLUS arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    MINUS           reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    EQ              reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    NEQ             reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    GT              reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    LT              reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    SEMICOLON       reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    error           reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    RPAREN          reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    RBRACE          reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    RBRACKET        reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    COMMA           reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .)
    TIMES           shift and go to state 271
    DIV             shift and go to state 272

  ! TIMES           [ reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .) ]
  ! DIV             [ reduce using rule 195 (arith_expr -> arith_expr PLUS arith_expr .) ]
  ! PLUS            [ shift and go to state 269 ]
  ! MINUS           [ shift and go to state 270 ]


state 317

    (196) arith_expr -> arith_expr MINUS arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    MINUS           reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    EQ              reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    NEQ             reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    GT              reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    LT              reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    SEMICOLON       reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    error           reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    RPAREN          reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    RBRACE          reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    RBRACKET        reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    COMMA           reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .)
    TIMES           shift and go to state 271
    DIV             shift and go to state 272

  ! TIMES           [ reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .) ]
  ! DIV             [ reduce using rule 196 (arith_expr -> arith_expr MINUS arith_expr .) ]
  ! PLUS            [ shift and go to state 269 ]
  ! MINUS           [ shift and go to state 270 ]


state 318

    (197) arith_expr -> arith_expr TIMES arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    MINUS           reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    TIMES           reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    DIV             reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    EQ              reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    NEQ             reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    GT              reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    LT              reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    SEMICOLON       reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    error           reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    RPAREN          reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    RBRACE          reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    RBRACKET        reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)
    COMMA           reduce using rule 197 (arith_expr -> arith_expr TIMES arith_expr .)

  ! PLUS            [ shift and go to state 269 ]
  ! MINUS           [ shift and go to state 270 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIV             [ shift and go to state 272 ]


state 319

    (198) arith_expr -> arith_expr DIV arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    MINUS           reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    TIMES           reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    DIV             reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    EQ              reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    NEQ             reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    GT              reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    LT              reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    SEMICOLON       reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    error           reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    RPAREN          reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    RBRACE          reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    RBRACKET        reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)
    COMMA           reduce using rule 198 (arith_expr -> arith_expr DIV arith_expr .)

  ! PLUS            [ shift and go to state 269 ]
  ! MINUS           [ shift and go to state 270 ]
  ! TIMES           [ shift and go to state 271 ]
  ! DIV             [ shift and go to state 272 ]


state 320

    (182) expr -> TIMES ID EQUAL . expr
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 354
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 321

    (204) arith_expr -> TIMES ID LPAREN . argument_list RPAREN
    (209) argument_list -> . argument
    (210) argument_list -> . argument_list COMMA argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument_list                  shift and go to state 355
    argument                       shift and go to state 306
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 322

    (207) arith_expr -> TIMES ID LBRACKET . arith_expr RBRACKET
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 356

state 323

    (203) arith_expr -> TIMES LPAREN arith_expr . RPAREN
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          shift and go to state 357
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 324

    (185) basic_expr -> basic_expr compare arith_expr .
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    EQ              reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    NEQ             reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    GT              reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    LT              reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    SEMICOLON       reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    error           reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    RPAREN          reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    RBRACE          reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    RBRACKET        reduce using rule 185 (basic_expr -> basic_expr compare arith_expr .)
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 325

    (164) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 358


state 326

    (194) arith_expr -> LPAREN arith_expr . RPAREN
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr
    (186) basic_expr -> arith_expr .

    RPAREN          shift and go to state 301
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272
    EQ              reduce using rule 186 (basic_expr -> arith_expr .)
    NEQ             reduce using rule 186 (basic_expr -> arith_expr .)
    GT              reduce using rule 186 (basic_expr -> arith_expr .)
    LT              reduce using rule 186 (basic_expr -> arith_expr .)
    SEMICOLON       reduce using rule 186 (basic_expr -> arith_expr .)


state 327

    (180) expr -> ID . EQUAL expr
    (181) expr -> ID . LBRACKET arith_expr RBRACKET EQUAL expr
    (199) arith_expr -> ID .
    (206) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (208) arith_expr -> ID . LPAREN argument_list RPAREN
    (191) incr_expr -> ID . INCREMENT

    EQUAL           shift and go to state 265
    LBRACKET        shift and go to state 266
    RPAREN          reduce using rule 199 (arith_expr -> ID .)
    PLUS            reduce using rule 199 (arith_expr -> ID .)
    MINUS           reduce using rule 199 (arith_expr -> ID .)
    TIMES           reduce using rule 199 (arith_expr -> ID .)
    DIV             reduce using rule 199 (arith_expr -> ID .)
    EQ              reduce using rule 199 (arith_expr -> ID .)
    NEQ             reduce using rule 199 (arith_expr -> ID .)
    GT              reduce using rule 199 (arith_expr -> ID .)
    LT              reduce using rule 199 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 199 (arith_expr -> ID .)
    LPAREN          shift and go to state 268
    INCREMENT       shift and go to state 267


state 328

    (173) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 359
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 329

    (166) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (171) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON error RBRACKET stmt

    SEMICOLON       shift and go to state 360


state 330

    (168) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 361


state 331

    (176) stmt_return -> RETURN expr SEMICOLON .

    RBRACKET        reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    RBRACE          reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    RPAREN          reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    IF              reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    SEMICOLON       reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    PRINT           reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    ID              reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    TIMES           reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    LBRACE          reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    LBRACKET        reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    error           reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    INCREMENT       reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    INT             reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    FLOAT           reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    VOID            reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    MINUS           reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    FNUM            reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    INUM            reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    ADDRESS         reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 176 (stmt_return -> RETURN expr SEMICOLON .)


state 332

    (177) stmt_return -> RETURN expr error .

    RBRACKET        reduce using rule 177 (stmt_return -> RETURN expr error .)
    RBRACE          reduce using rule 177 (stmt_return -> RETURN expr error .)
    RPAREN          reduce using rule 177 (stmt_return -> RETURN expr error .)
    IF              reduce using rule 177 (stmt_return -> RETURN expr error .)
    SEMICOLON       reduce using rule 177 (stmt_return -> RETURN expr error .)
    PRINT           reduce using rule 177 (stmt_return -> RETURN expr error .)
    ID              reduce using rule 177 (stmt_return -> RETURN expr error .)
    TIMES           reduce using rule 177 (stmt_return -> RETURN expr error .)
    LBRACE          reduce using rule 177 (stmt_return -> RETURN expr error .)
    LBRACKET        reduce using rule 177 (stmt_return -> RETURN expr error .)
    error           reduce using rule 177 (stmt_return -> RETURN expr error .)
    FOR             reduce using rule 177 (stmt_return -> RETURN expr error .)
    RETURN          reduce using rule 177 (stmt_return -> RETURN expr error .)
    INCREMENT       reduce using rule 177 (stmt_return -> RETURN expr error .)
    INT             reduce using rule 177 (stmt_return -> RETURN expr error .)
    FLOAT           reduce using rule 177 (stmt_return -> RETURN expr error .)
    VOID            reduce using rule 177 (stmt_return -> RETURN expr error .)
    MINUS           reduce using rule 177 (stmt_return -> RETURN expr error .)
    LPAREN          reduce using rule 177 (stmt_return -> RETURN expr error .)
    FNUM            reduce using rule 177 (stmt_return -> RETURN expr error .)
    INUM            reduce using rule 177 (stmt_return -> RETURN expr error .)
    ADDRESS         reduce using rule 177 (stmt_return -> RETURN expr error .)
    ELSE            reduce using rule 177 (stmt_return -> RETURN expr error .)


state 333

    (98) mstmt -> IF LPAREN expr RPAREN . mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN expr RPAREN . genstmt
    (101) umstmt -> IF LPAREN expr RPAREN . mstmt ELSE umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    IF              shift and go to state 186
    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    mstmt                          shift and go to state 362
    genstmt                        shift and go to state 363
    umstmt                         shift and go to state 185
    stmt                           shift and go to state 189
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 334

    (206) arith_expr -> ID LBRACKET arith_expr . RBRACKET
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 364
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 335

    (109) stmt -> PRINT LPAREN argument_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 365


state 336

    (112) stmt -> PRINT LPAREN argument_list SEMICOLON .

    RBRACKET        reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    RBRACE          reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    RPAREN          reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    IF              reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    SEMICOLON       reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    PRINT           reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    ID              reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    TIMES           reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    LBRACE          reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    LBRACKET        reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    error           reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    FOR             reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    RETURN          reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    INCREMENT       reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    INT             reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    FLOAT           reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    VOID            reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    MINUS           reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    LPAREN          reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    FNUM            reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    INUM            reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    ADDRESS         reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)
    ELSE            reduce using rule 112 (stmt -> PRINT LPAREN argument_list SEMICOLON .)


state 337

    (110) stmt -> PRINT LPAREN argument_list RBRACE . SEMICOLON
    (125) stmt -> PRINT LPAREN argument_list RBRACE . error

    SEMICOLON       shift and go to state 366
    error           shift and go to state 367


state 338

    (111) stmt -> PRINT LPAREN argument_list RBRACKET . SEMICOLON
    (126) stmt -> PRINT LPAREN argument_list RBRACKET . error

    SEMICOLON       shift and go to state 368
    error           shift and go to state 369


state 339

    (210) argument_list -> argument_list COMMA . argument
    (211) argument -> . empty
    (212) argument -> . arith_expr
    (213) argument -> . LITERAL
    (214) argument -> . error
    (215) empty -> .
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 309
    error           shift and go to state 305
    RPAREN          reduce using rule 215 (empty -> .)
    RBRACE          reduce using rule 215 (empty -> .)
    RBRACKET        reduce using rule 215 (empty -> .)
    SEMICOLON       reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    ID              shift and go to state 257
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    TIMES           shift and go to state 256
    ADDRESS         shift and go to state 208

    argument                       shift and go to state 370
    empty                          shift and go to state 307
    arith_expr                     shift and go to state 308

state 340

    (113) stmt -> PRINT LBRACE argument_list RPAREN . SEMICOLON
    (127) stmt -> PRINT LBRACE argument_list RPAREN . error

    SEMICOLON       shift and go to state 371
    error           shift and go to state 372


state 341

    (119) stmt -> PRINT LBRACE argument_list SEMICOLON .

    RBRACKET        reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    RBRACE          reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    RPAREN          reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    IF              reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    SEMICOLON       reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    PRINT           reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    ID              reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    TIMES           reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    LBRACE          reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    LBRACKET        reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    error           reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    FOR             reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    RETURN          reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    INCREMENT       reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    INT             reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    FLOAT           reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    VOID            reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    MINUS           reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    LPAREN          reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    FNUM            reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    INUM            reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    ADDRESS         reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)
    ELSE            reduce using rule 119 (stmt -> PRINT LBRACE argument_list SEMICOLON .)


state 342

    (115) stmt -> PRINT LBRACE argument_list RBRACE . SEMICOLON
    (129) stmt -> PRINT LBRACE argument_list RBRACE . error

    SEMICOLON       shift and go to state 373
    error           shift and go to state 374


state 343

    (117) stmt -> PRINT LBRACE argument_list RBRACKET . SEMICOLON
    (131) stmt -> PRINT LBRACE argument_list RBRACKET . error

    SEMICOLON       shift and go to state 375
    error           shift and go to state 376


state 344

    (114) stmt -> PRINT LBRACKET argument_list RPAREN . SEMICOLON
    (128) stmt -> PRINT LBRACKET argument_list RPAREN . error

    SEMICOLON       shift and go to state 377
    error           shift and go to state 378


state 345

    (120) stmt -> PRINT LBRACKET argument_list SEMICOLON .

    RBRACKET        reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    RBRACE          reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    RPAREN          reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    IF              reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    SEMICOLON       reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    PRINT           reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    ID              reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    TIMES           reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    LBRACE          reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    LBRACKET        reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    error           reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    FOR             reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    RETURN          reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    INCREMENT       reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    INT             reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    FLOAT           reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    VOID            reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    MINUS           reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    LPAREN          reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    FNUM            reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    INUM            reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    ADDRESS         reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)
    ELSE            reduce using rule 120 (stmt -> PRINT LBRACKET argument_list SEMICOLON .)


state 346

    (116) stmt -> PRINT LBRACKET argument_list RBRACE . SEMICOLON
    (130) stmt -> PRINT LBRACKET argument_list RBRACE . error

    SEMICOLON       shift and go to state 379
    error           shift and go to state 380


state 347

    (118) stmt -> PRINT LBRACKET argument_list RBRACKET . SEMICOLON
    (132) stmt -> PRINT LBRACKET argument_list RBRACKET . error

    SEMICOLON       shift and go to state 381
    error           shift and go to state 382


state 348

    (121) stmt -> PRINT error argument_list SEMICOLON .

    RBRACKET        reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    RBRACE          reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    RPAREN          reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    IF              reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    SEMICOLON       reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    PRINT           reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    ID              reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    TIMES           reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    LBRACE          reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    LBRACKET        reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    error           reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    FOR             reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    RETURN          reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    INCREMENT       reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    INT             reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    FLOAT           reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    VOID            reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    MINUS           reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    LPAREN          reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    FNUM            reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    INUM            reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    ADDRESS         reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)
    ELSE            reduce using rule 121 (stmt -> PRINT error argument_list SEMICOLON .)


state 349

    (122) stmt -> PRINT error argument_list RPAREN . SEMICOLON
    (133) stmt -> PRINT error argument_list RPAREN . error

    SEMICOLON       shift and go to state 384
    error           shift and go to state 383


state 350

    (123) stmt -> PRINT error argument_list RBRACE . SEMICOLON
    (134) stmt -> PRINT error argument_list RBRACE . error

    SEMICOLON       shift and go to state 386
    error           shift and go to state 385


state 351

    (124) stmt -> PRINT error argument_list RBRACKET . SEMICOLON
    (135) stmt -> PRINT error argument_list RBRACKET . error

    SEMICOLON       shift and go to state 388
    error           shift and go to state 387


state 352

    (181) expr -> ID LBRACKET arith_expr RBRACKET . EQUAL expr
    (206) arith_expr -> ID LBRACKET arith_expr RBRACKET .

    EQUAL           shift and go to state 389
    PLUS            reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RPAREN          reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)


state 353

    (208) arith_expr -> ID LPAREN argument_list RPAREN .

    PLUS            reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    DIV             reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    error           reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 208 (arith_expr -> ID LPAREN argument_list RPAREN .)


state 354

    (182) expr -> TIMES ID EQUAL expr .

    SEMICOLON       reduce using rule 182 (expr -> TIMES ID EQUAL expr .)
    error           reduce using rule 182 (expr -> TIMES ID EQUAL expr .)
    RPAREN          reduce using rule 182 (expr -> TIMES ID EQUAL expr .)
    RBRACE          reduce using rule 182 (expr -> TIMES ID EQUAL expr .)
    RBRACKET        reduce using rule 182 (expr -> TIMES ID EQUAL expr .)


state 355

    (204) arith_expr -> TIMES ID LPAREN argument_list . RPAREN
    (210) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 390
    COMMA           shift and go to state 339


state 356

    (207) arith_expr -> TIMES ID LBRACKET arith_expr . RBRACKET
    (195) arith_expr -> arith_expr . PLUS arith_expr
    (196) arith_expr -> arith_expr . MINUS arith_expr
    (197) arith_expr -> arith_expr . TIMES arith_expr
    (198) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 391
    PLUS            shift and go to state 269
    MINUS           shift and go to state 270
    TIMES           shift and go to state 271
    DIV             shift and go to state 272


state 357

    (203) arith_expr -> TIMES LPAREN arith_expr RPAREN .

    PLUS            reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    MINUS           reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    TIMES           reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    DIV             reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    EQ              reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    NEQ             reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    GT              reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    LT              reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    SEMICOLON       reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    error           reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RPAREN          reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RBRACE          reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RBRACKET        reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    COMMA           reduce using rule 203 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)


state 358

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 392
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 359

    (173) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 393


state 360

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON error RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 394
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 361

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 395
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 362

    (98) mstmt -> IF LPAREN expr RPAREN mstmt . ELSE mstmt
    (101) umstmt -> IF LPAREN expr RPAREN mstmt . ELSE umstmt
    (96) genstmt -> mstmt .

    ELSE            shift and go to state 396
    RBRACKET        reduce using rule 96 (genstmt -> mstmt .)
    RBRACE          reduce using rule 96 (genstmt -> mstmt .)
    RPAREN          reduce using rule 96 (genstmt -> mstmt .)
    IF              reduce using rule 96 (genstmt -> mstmt .)
    SEMICOLON       reduce using rule 96 (genstmt -> mstmt .)
    PRINT           reduce using rule 96 (genstmt -> mstmt .)
    ID              reduce using rule 96 (genstmt -> mstmt .)
    TIMES           reduce using rule 96 (genstmt -> mstmt .)
    LBRACE          reduce using rule 96 (genstmt -> mstmt .)
    LBRACKET        reduce using rule 96 (genstmt -> mstmt .)
    error           reduce using rule 96 (genstmt -> mstmt .)
    FOR             reduce using rule 96 (genstmt -> mstmt .)
    RETURN          reduce using rule 96 (genstmt -> mstmt .)
    INCREMENT       reduce using rule 96 (genstmt -> mstmt .)
    INT             reduce using rule 96 (genstmt -> mstmt .)
    FLOAT           reduce using rule 96 (genstmt -> mstmt .)
    VOID            reduce using rule 96 (genstmt -> mstmt .)
    MINUS           reduce using rule 96 (genstmt -> mstmt .)
    LPAREN          reduce using rule 96 (genstmt -> mstmt .)
    FNUM            reduce using rule 96 (genstmt -> mstmt .)
    INUM            reduce using rule 96 (genstmt -> mstmt .)
    ADDRESS         reduce using rule 96 (genstmt -> mstmt .)


state 363

    (100) umstmt -> IF LPAREN expr RPAREN genstmt .

    RBRACKET        reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    RBRACE          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    RPAREN          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    IF              reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    SEMICOLON       reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    PRINT           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    ID              reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    TIMES           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    LBRACE          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    LBRACKET        reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    error           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FOR             reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    RETURN          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INCREMENT       reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INT             reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FLOAT           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    VOID            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    MINUS           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    LPAREN          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FNUM            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INUM            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    ADDRESS         reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)


state 364

    (206) arith_expr -> ID LBRACKET arith_expr RBRACKET .

    RPAREN          reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    PLUS            reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    COMMA           reduce using rule 206 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)


state 365

    (109) stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .

    RBRACKET        reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    error           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)


state 366

    (110) stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .

    RBRACKET        reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    RBRACE          reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    RPAREN          reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    IF              reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    SEMICOLON       reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    PRINT           reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    ID              reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    TIMES           reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    LBRACE          reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    error           reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    FOR             reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    RETURN          reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    INT             reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    FLOAT           reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    VOID            reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    MINUS           reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    LPAREN          reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    FNUM            reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    INUM            reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    ADDRESS         reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)
    ELSE            reduce using rule 110 (stmt -> PRINT LPAREN argument_list RBRACE SEMICOLON .)


state 367

    (125) stmt -> PRINT LPAREN argument_list RBRACE error .

    RBRACKET        reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    RBRACE          reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    RPAREN          reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    IF              reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    SEMICOLON       reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    PRINT           reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    ID              reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    TIMES           reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    LBRACE          reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    LBRACKET        reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    error           reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    FOR             reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    RETURN          reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    INCREMENT       reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    INT             reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    FLOAT           reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    VOID            reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    MINUS           reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    LPAREN          reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    FNUM            reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    INUM            reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    ADDRESS         reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)
    ELSE            reduce using rule 125 (stmt -> PRINT LPAREN argument_list RBRACE error .)


state 368

    (111) stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .

    RBRACKET        reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    IF              reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    ID              reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    TIMES           reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    error           reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    INT             reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    MINUS           reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    FNUM            reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    INUM            reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    ADDRESS         reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)
    ELSE            reduce using rule 111 (stmt -> PRINT LPAREN argument_list RBRACKET SEMICOLON .)


state 369

    (126) stmt -> PRINT LPAREN argument_list RBRACKET error .

    RBRACKET        reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    RBRACE          reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    RPAREN          reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    IF              reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    SEMICOLON       reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    PRINT           reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    ID              reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    TIMES           reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    LBRACE          reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    LBRACKET        reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    error           reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    FOR             reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    RETURN          reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    INCREMENT       reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    INT             reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    FLOAT           reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    VOID            reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    MINUS           reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    LPAREN          reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    FNUM            reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    INUM            reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    ADDRESS         reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)
    ELSE            reduce using rule 126 (stmt -> PRINT LPAREN argument_list RBRACKET error .)


state 370

    (210) argument_list -> argument_list COMMA argument .

    RPAREN          reduce using rule 210 (argument_list -> argument_list COMMA argument .)
    RBRACE          reduce using rule 210 (argument_list -> argument_list COMMA argument .)
    RBRACKET        reduce using rule 210 (argument_list -> argument_list COMMA argument .)
    SEMICOLON       reduce using rule 210 (argument_list -> argument_list COMMA argument .)
    COMMA           reduce using rule 210 (argument_list -> argument_list COMMA argument .)


state 371

    (113) stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .

    RBRACKET        reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    error           reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 113 (stmt -> PRINT LBRACE argument_list RPAREN SEMICOLON .)


state 372

    (127) stmt -> PRINT LBRACE argument_list RPAREN error .

    RBRACKET        reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    RBRACE          reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    RPAREN          reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    IF              reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    SEMICOLON       reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    PRINT           reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    ID              reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    TIMES           reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    LBRACE          reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    LBRACKET        reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    error           reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    FOR             reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    RETURN          reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    INCREMENT       reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    INT             reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    FLOAT           reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    VOID            reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    MINUS           reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    LPAREN          reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    FNUM            reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    INUM            reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    ADDRESS         reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)
    ELSE            reduce using rule 127 (stmt -> PRINT LBRACE argument_list RPAREN error .)


state 373

    (115) stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .

    RBRACKET        reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    RBRACE          reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    RPAREN          reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    IF              reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    SEMICOLON       reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    PRINT           reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    ID              reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    TIMES           reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    LBRACE          reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    error           reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    FOR             reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    RETURN          reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    INT             reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    FLOAT           reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    VOID            reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    MINUS           reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    LPAREN          reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    FNUM            reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    INUM            reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    ADDRESS         reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)
    ELSE            reduce using rule 115 (stmt -> PRINT LBRACE argument_list RBRACE SEMICOLON .)


state 374

    (129) stmt -> PRINT LBRACE argument_list RBRACE error .

    RBRACKET        reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    RBRACE          reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    RPAREN          reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    IF              reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    SEMICOLON       reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    PRINT           reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    ID              reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    TIMES           reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    LBRACE          reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    LBRACKET        reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    error           reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    FOR             reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    RETURN          reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    INCREMENT       reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    INT             reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    FLOAT           reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    VOID            reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    MINUS           reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    LPAREN          reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    FNUM            reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    INUM            reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    ADDRESS         reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)
    ELSE            reduce using rule 129 (stmt -> PRINT LBRACE argument_list RBRACE error .)


state 375

    (117) stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .

    RBRACKET        reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    IF              reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    ID              reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    TIMES           reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    error           reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    INT             reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    MINUS           reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    FNUM            reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    INUM            reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    ADDRESS         reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)
    ELSE            reduce using rule 117 (stmt -> PRINT LBRACE argument_list RBRACKET SEMICOLON .)


state 376

    (131) stmt -> PRINT LBRACE argument_list RBRACKET error .

    RBRACKET        reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    RBRACE          reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    RPAREN          reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    IF              reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    SEMICOLON       reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    PRINT           reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    ID              reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    TIMES           reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    LBRACE          reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    LBRACKET        reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    error           reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    FOR             reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    RETURN          reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    INCREMENT       reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    INT             reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    FLOAT           reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    VOID            reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    MINUS           reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    LPAREN          reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    FNUM            reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    INUM            reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    ADDRESS         reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)
    ELSE            reduce using rule 131 (stmt -> PRINT LBRACE argument_list RBRACKET error .)


state 377

    (114) stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .

    RBRACKET        reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    error           reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 114 (stmt -> PRINT LBRACKET argument_list RPAREN SEMICOLON .)


state 378

    (128) stmt -> PRINT LBRACKET argument_list RPAREN error .

    RBRACKET        reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    RBRACE          reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    RPAREN          reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    IF              reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    SEMICOLON       reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    PRINT           reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    ID              reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    TIMES           reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    LBRACE          reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    LBRACKET        reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    error           reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    FOR             reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    RETURN          reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    INCREMENT       reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    INT             reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    FLOAT           reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    VOID            reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    MINUS           reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    LPAREN          reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    FNUM            reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    INUM            reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    ADDRESS         reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)
    ELSE            reduce using rule 128 (stmt -> PRINT LBRACKET argument_list RPAREN error .)


state 379

    (116) stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .

    RBRACKET        reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    RBRACE          reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    RPAREN          reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    IF              reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    SEMICOLON       reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    PRINT           reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    ID              reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    TIMES           reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    LBRACE          reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    error           reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    FOR             reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    RETURN          reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    INT             reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    FLOAT           reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    VOID            reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    MINUS           reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    LPAREN          reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    FNUM            reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    INUM            reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    ADDRESS         reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)
    ELSE            reduce using rule 116 (stmt -> PRINT LBRACKET argument_list RBRACE SEMICOLON .)


state 380

    (130) stmt -> PRINT LBRACKET argument_list RBRACE error .

    RBRACKET        reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    RBRACE          reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    RPAREN          reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    IF              reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    SEMICOLON       reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    PRINT           reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    ID              reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    TIMES           reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    LBRACE          reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    LBRACKET        reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    error           reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    FOR             reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    RETURN          reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    INCREMENT       reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    INT             reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    FLOAT           reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    VOID            reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    MINUS           reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    LPAREN          reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    FNUM            reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    INUM            reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    ADDRESS         reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)
    ELSE            reduce using rule 130 (stmt -> PRINT LBRACKET argument_list RBRACE error .)


state 381

    (118) stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .

    RBRACKET        reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    IF              reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    ID              reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    TIMES           reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    error           reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    INT             reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    MINUS           reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    FNUM            reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    INUM            reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    ADDRESS         reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)
    ELSE            reduce using rule 118 (stmt -> PRINT LBRACKET argument_list RBRACKET SEMICOLON .)


state 382

    (132) stmt -> PRINT LBRACKET argument_list RBRACKET error .

    RBRACKET        reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    RBRACE          reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    RPAREN          reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    IF              reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    SEMICOLON       reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    PRINT           reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    ID              reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    TIMES           reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    LBRACE          reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    LBRACKET        reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    error           reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    FOR             reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    RETURN          reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    INCREMENT       reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    INT             reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    FLOAT           reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    VOID            reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    MINUS           reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    LPAREN          reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    FNUM            reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    INUM            reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    ADDRESS         reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)
    ELSE            reduce using rule 132 (stmt -> PRINT LBRACKET argument_list RBRACKET error .)


state 383

    (133) stmt -> PRINT error argument_list RPAREN error .

    RBRACKET        reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    RBRACE          reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    RPAREN          reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    IF              reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    SEMICOLON       reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    PRINT           reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    ID              reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    TIMES           reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    LBRACE          reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    LBRACKET        reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    error           reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    FOR             reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    RETURN          reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    INCREMENT       reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    INT             reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    FLOAT           reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    VOID            reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    MINUS           reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    LPAREN          reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    FNUM            reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    INUM            reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    ADDRESS         reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)
    ELSE            reduce using rule 133 (stmt -> PRINT error argument_list RPAREN error .)


state 384

    (122) stmt -> PRINT error argument_list RPAREN SEMICOLON .

    RBRACKET        reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    error           reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 122 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)


state 385

    (134) stmt -> PRINT error argument_list RBRACE error .

    RBRACKET        reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    RBRACE          reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    RPAREN          reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    IF              reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    SEMICOLON       reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    PRINT           reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    ID              reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    TIMES           reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    LBRACE          reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    LBRACKET        reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    error           reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    FOR             reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    RETURN          reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    INCREMENT       reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    INT             reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    FLOAT           reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    VOID            reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    MINUS           reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    LPAREN          reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    FNUM            reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    INUM            reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    ADDRESS         reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)
    ELSE            reduce using rule 134 (stmt -> PRINT error argument_list RBRACE error .)


state 386

    (123) stmt -> PRINT error argument_list RBRACE SEMICOLON .

    RBRACKET        reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    RBRACE          reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    RPAREN          reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    IF              reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    SEMICOLON       reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    PRINT           reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ID              reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    TIMES           reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    LBRACE          reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    error           reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FOR             reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    RETURN          reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INT             reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FLOAT           reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    VOID            reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    MINUS           reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    LPAREN          reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FNUM            reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INUM            reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ADDRESS         reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ELSE            reduce using rule 123 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)


state 387

    (135) stmt -> PRINT error argument_list RBRACKET error .

    RBRACKET        reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    RBRACE          reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    RPAREN          reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    IF              reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    SEMICOLON       reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    PRINT           reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    ID              reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    TIMES           reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    LBRACE          reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    LBRACKET        reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    error           reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    FOR             reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    RETURN          reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    INCREMENT       reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    INT             reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    FLOAT           reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    VOID            reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    MINUS           reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    LPAREN          reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    FNUM            reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    INUM            reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    ADDRESS         reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)
    ELSE            reduce using rule 135 (stmt -> PRINT error argument_list RBRACKET error .)


state 388

    (124) stmt -> PRINT error argument_list RBRACKET SEMICOLON .

    RBRACKET        reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    IF              reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ID              reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    TIMES           reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    error           reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INT             reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    MINUS           reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FNUM            reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INUM            reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ADDRESS         reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ELSE            reduce using rule 124 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)


state 389

    (181) expr -> ID LBRACKET arith_expr RBRACKET EQUAL . expr
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    arith_expr                     shift and go to state 197
    expr                           shift and go to state 397
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 390

    (204) arith_expr -> TIMES ID LPAREN argument_list RPAREN .

    PLUS            reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    DIV             reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    error           reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 204 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)


state 391

    (207) arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .

    PLUS            reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RPAREN          reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    COMMA           reduce using rule 207 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)


state 392

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 398


state 393

    (173) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (174) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (175) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 399
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 394

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON error RBRACKET stmt

    SEMICOLON       shift and go to state 400


state 395

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 401


state 396

    (98) mstmt -> IF LPAREN expr RPAREN mstmt ELSE . mstmt
    (101) umstmt -> IF LPAREN expr RPAREN mstmt ELSE . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    IF              shift and go to state 186
    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    mstmt                          shift and go to state 402
    umstmt                         shift and go to state 403
    stmt                           shift and go to state 189
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 397

    (181) expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .

    SEMICOLON       reduce using rule 181 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    error           reduce using rule 181 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RPAREN          reduce using rule 181 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RBRACE          reduce using rule 181 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RBRACKET        reduce using rule 181 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)


state 398

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 404
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 399

    (173) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (174) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (175) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RPAREN          shift and go to state 405
    RBRACE          shift and go to state 406
    RBRACKET        shift and go to state 407


state 400

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . error RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    error           shift and go to state 409
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 408
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 401

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 196
    TIMES           shift and go to state 198
    INCREMENT       shift and go to state 204
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 410
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200

state 402

    (98) mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .

    RBRACKET        reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    RBRACE          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    RPAREN          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    IF              reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    SEMICOLON       reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    PRINT           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ID              reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    TIMES           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    LBRACE          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    LBRACKET        reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    error           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FOR             reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    RETURN          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INCREMENT       reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INT             reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FLOAT           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    VOID            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    MINUS           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    LPAREN          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FNUM            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INUM            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ADDRESS         reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ELSE            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)


state 403

    (101) umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .

    RBRACKET        reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    RBRACE          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    RPAREN          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    IF              reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    SEMICOLON       reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    PRINT           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    ID              reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    TIMES           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    LBRACE          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    LBRACKET        reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    error           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FOR             reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    RETURN          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INCREMENT       reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INT             reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FLOAT           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    VOID            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    MINUS           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    LPAREN          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FNUM            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INUM            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    ADDRESS         reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)


state 404

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RPAREN          shift and go to state 411
    RBRACE          shift and go to state 412
    RBRACKET        shift and go to state 413


state 405

    (173) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 414
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 406

    (174) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 415
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 407

    (175) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 416
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 408

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr . RBRACE stmt

    RPAREN          shift and go to state 417
    RBRACE          shift and go to state 418


state 409

    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error . RBRACKET stmt

    RBRACKET        shift and go to state 419


state 410

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RBRACE          shift and go to state 420
    RPAREN          shift and go to state 421
    RBRACKET        shift and go to state 422


state 411

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 423
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 412

    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 424
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 413

    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 425
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 414

    (173) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACKET        reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RBRACE          reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RPAREN          reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACKET        reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    error           reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 173 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 415

    (174) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACKET        reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RBRACE          reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RPAREN          reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACKET        reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    error           reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 174 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 416

    (175) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACKET        reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RBRACE          reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RPAREN          reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACKET        reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    error           reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 175 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)


state 417

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 426
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 418

    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 427
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 419

    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 428
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 420

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 429
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 421

    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 430
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 422

    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT LPAREN argument_list RBRACE SEMICOLON
    (111) stmt -> . PRINT LPAREN argument_list RBRACKET SEMICOLON
    (112) stmt -> . PRINT LPAREN argument_list SEMICOLON
    (113) stmt -> . PRINT LBRACE argument_list RPAREN SEMICOLON
    (114) stmt -> . PRINT LBRACKET argument_list RPAREN SEMICOLON
    (115) stmt -> . PRINT LBRACE argument_list RBRACE SEMICOLON
    (116) stmt -> . PRINT LBRACKET argument_list RBRACE SEMICOLON
    (117) stmt -> . PRINT LBRACE argument_list RBRACKET SEMICOLON
    (118) stmt -> . PRINT LBRACKET argument_list RBRACKET SEMICOLON
    (119) stmt -> . PRINT LBRACE argument_list SEMICOLON
    (120) stmt -> . PRINT LBRACKET argument_list SEMICOLON
    (121) stmt -> . PRINT error argument_list SEMICOLON
    (122) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (123) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (124) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (125) stmt -> . PRINT LPAREN argument_list RBRACE error
    (126) stmt -> . PRINT LPAREN argument_list RBRACKET error
    (127) stmt -> . PRINT LBRACE argument_list RPAREN error
    (128) stmt -> . PRINT LBRACKET argument_list RPAREN error
    (129) stmt -> . PRINT LBRACE argument_list RBRACE error
    (130) stmt -> . PRINT LBRACKET argument_list RBRACE error
    (131) stmt -> . PRINT LBRACE argument_list RBRACKET error
    (132) stmt -> . PRINT LBRACKET argument_list RBRACKET error
    (133) stmt -> . PRINT error argument_list RPAREN error
    (134) stmt -> . PRINT error argument_list RBRACE error
    (135) stmt -> . PRINT error argument_list RBRACKET error
    (180) expr -> . ID EQUAL expr
    (181) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (182) expr -> . TIMES ID EQUAL expr
    (183) expr -> . incr_expr
    (184) expr -> . basic_expr
    (136) declaration -> . declaration COMMA idbracket
    (137) declaration -> . declaration COMMA TIMES idbracket
    (138) declaration -> . type idbracket
    (139) declaration -> . type TIMES idbracket
    (153) stmt_block -> . LBRACE stmt_list RBRACE
    (154) stmt_block -> . LBRACKET stmt_list RPAREN
    (155) stmt_block -> . LBRACKET stmt_list RBRACE
    (156) stmt_block -> . LBRACKET stmt_list RBRACKET
    (157) stmt_block -> . LBRACE stmt_list RPAREN
    (158) stmt_block -> . LBRACE stmt_list RBRACKET
    (159) stmt_block -> . error stmt_list RBRACKET
    (160) stmt_block -> . error stmt_list RBRACE
    (161) stmt_block -> . error stmt_list RPAREN
    (164) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (165) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (166) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (167) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (168) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (169) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (170) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (171) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (172) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (173) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (174) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (175) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (176) stmt_return -> . RETURN expr SEMICOLON
    (177) stmt_return -> . RETURN expr error
    (178) stmt_return -> . RETURN SEMICOLON
    (179) stmt_return -> . RETURN error
    (191) incr_expr -> . ID INCREMENT
    (192) incr_expr -> . INCREMENT ID
    (185) basic_expr -> . basic_expr compare arith_expr
    (186) basic_expr -> . arith_expr
    (150) type -> . INT
    (151) type -> . FLOAT
    (152) type -> . VOID
    (193) arith_expr -> . MINUS arith_expr
    (194) arith_expr -> . LPAREN arith_expr RPAREN
    (195) arith_expr -> . arith_expr PLUS arith_expr
    (196) arith_expr -> . arith_expr MINUS arith_expr
    (197) arith_expr -> . arith_expr TIMES arith_expr
    (198) arith_expr -> . arith_expr DIV arith_expr
    (199) arith_expr -> . ID
    (200) arith_expr -> . FNUM
    (201) arith_expr -> . INUM
    (202) arith_expr -> . TIMES ID
    (203) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (204) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (205) arith_expr -> . ADDRESS ID
    (206) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (207) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (208) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 190
    PRINT           shift and go to state 195
    ID              shift and go to state 196
    TIMES           shift and go to state 198
    LBRACE          shift and go to state 50
    LBRACKET        shift and go to state 51
    error           shift and go to state 46
    FOR             shift and go to state 202
    RETURN          shift and go to state 203
    INCREMENT       shift and go to state 204
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 205
    LPAREN          shift and go to state 187
    FNUM            shift and go to state 206
    INUM            shift and go to state 207
    ADDRESS         shift and go to state 208

    expr                           shift and go to state 188
    stmt                           shift and go to state 431
    declaration                    shift and go to state 191
    stmt_block                     shift and go to state 192
    stmt_forloop                   shift and go to state 193
    stmt_return                    shift and go to state 194
    arith_expr                     shift and go to state 197
    incr_expr                      shift and go to state 199
    basic_expr                     shift and go to state 200
    type                           shift and go to state 201

state 423

    (164) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACKET        reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RBRACE          reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RPAREN          reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACKET        reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    error           reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 164 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 424

    (165) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACKET        reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RBRACE          reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RPAREN          reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACKET        reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    error           reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 165 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 425

    (170) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACKET        reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RBRACE          reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RPAREN          reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACKET        reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    error           reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 170 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)


state 426

    (166) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACKET        reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RBRACE          reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RPAREN          reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACKET        reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    error           reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 166 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 427

    (167) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACKET        reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RBRACE          reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RPAREN          reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACKET        reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    error           reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 167 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 428

    (171) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .

    RBRACKET        reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    RBRACE          reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    RPAREN          reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    IF              reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    SEMICOLON       reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    PRINT           reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ID              reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    TIMES           reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    LBRACE          reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    LBRACKET        reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    error           reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FOR             reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    RETURN          reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INCREMENT       reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INT             reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FLOAT           reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    VOID            reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    MINUS           reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    LPAREN          reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FNUM            reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INUM            reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ADDRESS         reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ELSE            reduce using rule 171 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)


state 429

    (168) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACKET        reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RBRACE          reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RPAREN          reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACKET        reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    error           reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 168 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 430

    (169) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACKET        reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RBRACE          reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RPAREN          reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACKET        reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    error           reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 169 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 431

    (172) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACKET        reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RBRACE          reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RPAREN          reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACKET        reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    error           reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 172 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)

