Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    DOUBLEQUOTE
    ELSE_IF
    PERIOD
    POINTER
    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list func_declaration
Rule 3     declaration_list -> declaration_list declaration SEMICOLON
Rule 4     declaration_list -> empty
Rule 5     func_declaration -> type ID LPAREN params RPAREN stmt_block
Rule 6     func_declaration -> type ID error params error stmt_block
Rule 7     func_declaration -> type ID LBRACE params error stmt_block
Rule 8     func_declaration -> type ID LBRACKET params error stmt_block
Rule 9     func_declaration -> type ID LPAREN params error stmt_block
Rule 10    func_declaration -> type ID error params RPAREN stmt_block
Rule 11    func_declaration -> type ID error params RBRACE stmt_block
Rule 12    func_declaration -> type ID error params RBRACKET stmt_block
Rule 13    func_declaration -> type ID LPAREN RPAREN stmt_block
Rule 14    func_declaration -> type ID LPAREN RBRACE stmt_block
Rule 15    func_declaration -> type ID LPAREN RBRACKET stmt_block
Rule 16    func_declaration -> type ID LBRACE RPAREN stmt_block
Rule 17    func_declaration -> type ID LBRACE RBRACKET stmt_block
Rule 18    func_declaration -> type ID LBRACE RBRACE stmt_block
Rule 19    func_declaration -> type ID LBRACKET RPAREN stmt_block
Rule 20    func_declaration -> type ID LBRACKET RBRACE stmt_block
Rule 21    func_declaration -> type ID LBRACKET RBRACKET stmt_block
Rule 22    func_declaration -> type ID LPAREN stmt_block
Rule 23    func_declaration -> type ID LBRACE stmt_block
Rule 24    func_declaration -> type ID LBRACKET stmt_block
Rule 25    func_declaration -> type ID RPAREN stmt_block
Rule 26    func_declaration -> type ID RBRACKET stmt_block
Rule 27    func_declaration -> type ID RBRACE stmt_block
Rule 28    func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block
Rule 29    func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block
Rule 30    func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block
Rule 31    func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block
Rule 32    func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block
Rule 33    func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block
Rule 34    func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block
Rule 35    func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block
Rule 36    func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block
Rule 37    func_declaration -> type TIMES ID params RPAREN stmt_block
Rule 38    func_declaration -> type TIMES ID params RBRACE stmt_block
Rule 39    func_declaration -> type TIMES ID params RBRACKET stmt_block
Rule 40    func_declaration -> type TIMES ID LPAREN params stmt_block
Rule 41    func_declaration -> type TIMES ID LBRACE params stmt_block
Rule 42    func_declaration -> type TIMES ID LBRACKET params stmt_block
Rule 43    func_declaration -> type TIMES ID params stmt_block
Rule 44    func_declaration -> type TIMES ID LPAREN RPAREN stmt_block
Rule 45    func_declaration -> type TIMES ID LBRACE RPAREN stmt_block
Rule 46    func_declaration -> type TIMES ID LPAREN RBRACE stmt_block
Rule 47    func_declaration -> type TIMES ID LBRACE RBRACE stmt_block
Rule 48    func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block
Rule 49    func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block
Rule 50    func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block
Rule 51    func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block
Rule 52    func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block
Rule 53    func_declaration -> type TIMES ID RPAREN stmt_block
Rule 54    func_declaration -> type TIMES ID RBRACE stmt_block
Rule 55    func_declaration -> type TIMES ID RBRACKET stmt_block
Rule 56    func_declaration -> type TIMES ID LPAREN stmt_block
Rule 57    func_declaration -> type TIMES ID LBRACE stmt_block
Rule 58    func_declaration -> type TIMES ID LBRACKET stmt_block
Rule 59    func_declaration -> type MAIN LPAREN params RPAREN stmt_block
Rule 60    func_declaration -> type MAIN LBRACE params RPAREN stmt_block
Rule 61    func_declaration -> type MAIN LPAREN params RBRACE stmt_block
Rule 62    func_declaration -> type MAIN LBRACE params RBRACE stmt_block
Rule 63    func_declaration -> type MAIN LBRACKET params RBRACE stmt_block
Rule 64    func_declaration -> type MAIN LBRACKET params RPAREN stmt_block
Rule 65    func_declaration -> type MAIN LBRACE params RBRACKET stmt_block
Rule 66    func_declaration -> type MAIN LPAREN params RBRACKET stmt_block
Rule 67    func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block
Rule 68    func_declaration -> type MAIN params RPAREN stmt_block
Rule 69    func_declaration -> type MAIN params RBRACE stmt_block
Rule 70    func_declaration -> type MAIN params RBRACKET stmt_block
Rule 71    func_declaration -> type MAIN LPAREN params stmt_block
Rule 72    func_declaration -> type MAIN LBRACE params stmt_block
Rule 73    func_declaration -> type MAIN LBRACKET params stmt_block
Rule 74    func_declaration -> type MAIN params stmt_block
Rule 75    func_declaration -> type MAIN LPAREN RPAREN stmt_block
Rule 76    func_declaration -> type MAIN LBRACE RPAREN stmt_block
Rule 77    func_declaration -> type MAIN LPAREN RBRACE stmt_block
Rule 78    func_declaration -> type MAIN LBRACE RBRACE stmt_block
Rule 79    func_declaration -> type MAIN LBRACKET RBRACE stmt_block
Rule 80    func_declaration -> type MAIN LBRACKET RPAREN stmt_block
Rule 81    func_declaration -> type MAIN LBRACE RBRACKET stmt_block
Rule 82    func_declaration -> type MAIN LPAREN RBRACKET stmt_block
Rule 83    func_declaration -> type MAIN LBRACKET RBRACKET stmt_block
Rule 84    func_declaration -> type MAIN RPAREN stmt_block
Rule 85    func_declaration -> type MAIN RBRACE stmt_block
Rule 86    func_declaration -> type MAIN RBRACKET stmt_block
Rule 87    func_declaration -> type MAIN LPAREN stmt_block
Rule 88    func_declaration -> type MAIN LBRACE stmt_block
Rule 89    func_declaration -> type MAIN LBRACKET stmt_block
Rule 90    params -> VOID
Rule 91    params -> param_list
Rule 92    param_list -> param
Rule 93    param_list -> param_list COMMA param
Rule 94    param -> type ID
Rule 95    param -> type TIMES ID
Rule 96    genstmt -> mstmt
Rule 97    genstmt -> umstmt
Rule 98    mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt
Rule 99    mstmt -> stmt
Rule 100   umstmt -> IF LPAREN expr RPAREN genstmt
Rule 101   umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt
Rule 102   stmt -> expr SEMICOLON
Rule 103   stmt -> declaration SEMICOLON
Rule 104   stmt -> stmt_block
Rule 105   stmt -> stmt_forloop
Rule 106   stmt -> stmt_return
Rule 107   stmt -> SEMICOLON
Rule 108   stmt -> expr error
Rule 109   stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON
Rule 110   stmt -> PRINT error argument_list RPAREN SEMICOLON
Rule 111   stmt -> PRINT error argument_list RBRACE SEMICOLON
Rule 112   stmt -> PRINT error argument_list RBRACKET SEMICOLON
Rule 113   stmt -> PRINT error argument_list SEMICOLON
Rule 114   declaration -> declaration COMMA idbracket
Rule 115   declaration -> declaration COMMA TIMES idbracket
Rule 116   declaration -> type idbracket
Rule 117   declaration -> type TIMES idbracket
Rule 118   idbracket -> ID
Rule 119   idbracket -> ID LBRACKET INUM RBRACKET
Rule 120   idbracket -> ID LBRACKET INUM RBRACE
Rule 121   idbracket -> ID LBRACE INUM RBRACKET
Rule 122   idbracket -> ID LPAREN INUM RBRACKET
Rule 123   idbracket -> ID LBRACKET INUM RPAREN
Rule 124   idbracket -> ID LBRACE INUM RPAREN
Rule 125   idbracket -> ID LPAREN INUM RBRACE
Rule 126   idbracket -> ID LPAREN INUM RPAREN
Rule 127   idbracket -> ID LBRACE INUM RBRACE
Rule 128   type -> INT
Rule 129   type -> FLOAT
Rule 130   type -> VOID
Rule 131   stmt_block -> LBRACE stmt_list RBRACE
Rule 132   stmt_list -> stmt_list genstmt
Rule 133   stmt_list -> empty
Rule 134   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 135   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 136   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 137   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 138   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 139   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 140   stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 141   stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
Rule 142   stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 143   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
Rule 144   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
Rule 145   stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
Rule 146   stmt_return -> RETURN expr SEMICOLON
Rule 147   stmt_return -> RETURN expr error
Rule 148   stmt_return -> RETURN SEMICOLON
Rule 149   stmt_return -> RETURN error
Rule 150   expr -> ID EQUAL expr
Rule 151   expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr
Rule 152   expr -> TIMES ID EQUAL expr
Rule 153   expr -> incr_expr
Rule 154   expr -> basic_expr
Rule 155   basic_expr -> basic_expr compare arith_expr
Rule 156   basic_expr -> arith_expr
Rule 157   compare -> EQ
Rule 158   compare -> NEQ
Rule 159   compare -> GT
Rule 160   compare -> LT
Rule 161   incr_expr -> ID INCREMENT
Rule 162   incr_expr -> INCREMENT ID
Rule 163   arith_expr -> MINUS arith_expr
Rule 164   arith_expr -> LPAREN arith_expr RPAREN
Rule 165   arith_expr -> arith_expr PLUS arith_expr
Rule 166   arith_expr -> arith_expr MINUS arith_expr
Rule 167   arith_expr -> arith_expr TIMES arith_expr
Rule 168   arith_expr -> arith_expr DIV arith_expr
Rule 169   arith_expr -> ID
Rule 170   arith_expr -> FNUM
Rule 171   arith_expr -> INUM
Rule 172   arith_expr -> TIMES ID
Rule 173   arith_expr -> TIMES LPAREN arith_expr RPAREN
Rule 174   arith_expr -> TIMES ID LPAREN argument_list RPAREN
Rule 175   arith_expr -> ADDRESS ID
Rule 176   arith_expr -> ID LBRACKET arith_expr RBRACKET
Rule 177   arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET
Rule 178   arith_expr -> ID LPAREN argument_list RPAREN
Rule 179   argument_list -> argument
Rule 180   argument_list -> argument_list COMMA argument
Rule 181   argument -> empty
Rule 182   argument -> arith_expr
Rule 183   argument -> LITERAL
Rule 184   argument -> error
Rule 185   empty -> <empty>

Terminals, with rules where they appear

ADDRESS              : 175
COLON                : 
COMMA                : 93 114 115 180
DIV                  : 168
DOUBLEQUOTE          : 
ELSE                 : 98 101
ELSE_IF              : 
EQ                   : 157
EQUAL                : 150 151 152
FLOAT                : 129
FNUM                 : 170
FOR                  : 134 135 136 137 138 139 140 141 142 143 144 145
GT                   : 159
ID                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 94 95 118 119 120 121 122 123 124 125 126 127 150 151 152 161 162 169 172 174 175 176 177 178
IF                   : 98 100 101
INCREMENT            : 161 162
INT                  : 128
INUM                 : 119 120 121 122 123 124 125 126 127 171
LBRACE               : 7 16 17 18 23 29 31 35 41 45 47 51 57 60 62 65 72 76 78 81 88 121 124 127 131 136 137 141
LBRACKET             : 8 19 20 21 24 32 33 36 42 48 49 52 58 63 64 67 73 79 80 83 89 119 120 123 138 139 142 151 176 177
LITERAL              : 183
LPAREN               : 5 9 13 14 15 22 28 30 34 40 44 46 50 56 59 61 66 71 75 77 82 87 98 100 101 109 122 125 126 134 135 140 164 173 174 178
LT                   : 160
MAIN                 : 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
MINUS                : 163 166
NEQ                  : 158
PERIOD               : 
PLUS                 : 165
POINTER              : 
PRINT                : 109 110 111 112 113
QUOTE                : 
RBRACE               : 11 14 18 20 27 30 31 32 38 46 47 48 54 61 62 63 69 77 78 79 85 111 120 125 127 131 135 137 138 144
RBRACKET             : 12 15 17 21 26 34 35 36 39 50 51 52 55 65 66 67 70 81 82 83 86 112 119 121 122 140 141 142 145 151 176 177
RETURN               : 146 147 148 149
RPAREN               : 5 10 13 16 19 25 28 29 33 37 44 45 49 53 59 60 64 68 75 76 80 84 98 100 101 109 110 123 124 126 134 136 139 143 164 173 174 178
SEMICOLON            : 3 102 103 107 109 110 111 112 113 134 134 135 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 148
TIMES                : 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 95 115 117 152 167 172 173 174 177
VOID                 : 90 130
error                : 6 6 7 8 9 10 11 12 108 110 111 112 113 141 147 149 184

Nonterminals, with rules where they appear

argument             : 179 180
argument_list        : 109 110 111 112 113 174 178 180
arith_expr           : 151 155 156 163 164 165 165 166 166 167 167 168 168 173 176 177 182
basic_expr           : 154 155
compare              : 155
declaration          : 3 103 114 115
declaration_list     : 1 2 3
empty                : 4 133 181
expr                 : 98 100 101 102 108 134 134 134 135 135 135 136 136 136 137 137 137 138 138 138 139 139 139 140 140 140 141 141 142 142 142 143 143 143 144 144 144 145 145 145 146 147 150 151 152
func_declaration     : 2
genstmt              : 100 132
idbracket            : 114 115 116 117
incr_expr            : 153
mstmt                : 96 98 98 101
param                : 92 93
param_list           : 91 93
params               : 5 6 7 8 9 10 11 12 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
program              : 0
stmt                 : 99 134 135 136 137 138 139 140 141 142 143 144 145
stmt_block           : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 104
stmt_forloop         : 105
stmt_list            : 131 132
stmt_return          : 106
type                 : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 94 95 116 117
umstmt               : 97 101

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list func_declaration
    (3) declaration_list -> . declaration_list declaration SEMICOLON
    (4) declaration_list -> . empty
    (185) empty -> .

    INT             reduce using rule 185 (empty -> .)
    FLOAT           reduce using rule 185 (empty -> .)
    VOID            reduce using rule 185 (empty -> .)
    $end            reduce using rule 185 (empty -> .)

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . func_declaration
    (3) declaration_list -> declaration_list . declaration SEMICOLON
    (5) func_declaration -> . type ID LPAREN params RPAREN stmt_block
    (6) func_declaration -> . type ID error params error stmt_block
    (7) func_declaration -> . type ID LBRACE params error stmt_block
    (8) func_declaration -> . type ID LBRACKET params error stmt_block
    (9) func_declaration -> . type ID LPAREN params error stmt_block
    (10) func_declaration -> . type ID error params RPAREN stmt_block
    (11) func_declaration -> . type ID error params RBRACE stmt_block
    (12) func_declaration -> . type ID error params RBRACKET stmt_block
    (13) func_declaration -> . type ID LPAREN RPAREN stmt_block
    (14) func_declaration -> . type ID LPAREN RBRACE stmt_block
    (15) func_declaration -> . type ID LPAREN RBRACKET stmt_block
    (16) func_declaration -> . type ID LBRACE RPAREN stmt_block
    (17) func_declaration -> . type ID LBRACE RBRACKET stmt_block
    (18) func_declaration -> . type ID LBRACE RBRACE stmt_block
    (19) func_declaration -> . type ID LBRACKET RPAREN stmt_block
    (20) func_declaration -> . type ID LBRACKET RBRACE stmt_block
    (21) func_declaration -> . type ID LBRACKET RBRACKET stmt_block
    (22) func_declaration -> . type ID LPAREN stmt_block
    (23) func_declaration -> . type ID LBRACE stmt_block
    (24) func_declaration -> . type ID LBRACKET stmt_block
    (25) func_declaration -> . type ID RPAREN stmt_block
    (26) func_declaration -> . type ID RBRACKET stmt_block
    (27) func_declaration -> . type ID RBRACE stmt_block
    (28) func_declaration -> . type TIMES ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> . type TIMES ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> . type TIMES ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> . type TIMES ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> . type TIMES ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> . type TIMES ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> . type TIMES ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> . type TIMES ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> . type TIMES ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> . type TIMES ID params RPAREN stmt_block
    (38) func_declaration -> . type TIMES ID params RBRACE stmt_block
    (39) func_declaration -> . type TIMES ID params RBRACKET stmt_block
    (40) func_declaration -> . type TIMES ID LPAREN params stmt_block
    (41) func_declaration -> . type TIMES ID LBRACE params stmt_block
    (42) func_declaration -> . type TIMES ID LBRACKET params stmt_block
    (43) func_declaration -> . type TIMES ID params stmt_block
    (44) func_declaration -> . type TIMES ID LPAREN RPAREN stmt_block
    (45) func_declaration -> . type TIMES ID LBRACE RPAREN stmt_block
    (46) func_declaration -> . type TIMES ID LPAREN RBRACE stmt_block
    (47) func_declaration -> . type TIMES ID LBRACE RBRACE stmt_block
    (48) func_declaration -> . type TIMES ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> . type TIMES ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> . type TIMES ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> . type TIMES ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> . type TIMES ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> . type TIMES ID RPAREN stmt_block
    (54) func_declaration -> . type TIMES ID RBRACE stmt_block
    (55) func_declaration -> . type TIMES ID RBRACKET stmt_block
    (56) func_declaration -> . type TIMES ID LPAREN stmt_block
    (57) func_declaration -> . type TIMES ID LBRACE stmt_block
    (58) func_declaration -> . type TIMES ID LBRACKET stmt_block
    (59) func_declaration -> . type MAIN LPAREN params RPAREN stmt_block
    (60) func_declaration -> . type MAIN LBRACE params RPAREN stmt_block
    (61) func_declaration -> . type MAIN LPAREN params RBRACE stmt_block
    (62) func_declaration -> . type MAIN LBRACE params RBRACE stmt_block
    (63) func_declaration -> . type MAIN LBRACKET params RBRACE stmt_block
    (64) func_declaration -> . type MAIN LBRACKET params RPAREN stmt_block
    (65) func_declaration -> . type MAIN LBRACE params RBRACKET stmt_block
    (66) func_declaration -> . type MAIN LPAREN params RBRACKET stmt_block
    (67) func_declaration -> . type MAIN LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> . type MAIN params RPAREN stmt_block
    (69) func_declaration -> . type MAIN params RBRACE stmt_block
    (70) func_declaration -> . type MAIN params RBRACKET stmt_block
    (71) func_declaration -> . type MAIN LPAREN params stmt_block
    (72) func_declaration -> . type MAIN LBRACE params stmt_block
    (73) func_declaration -> . type MAIN LBRACKET params stmt_block
    (74) func_declaration -> . type MAIN params stmt_block
    (75) func_declaration -> . type MAIN LPAREN RPAREN stmt_block
    (76) func_declaration -> . type MAIN LBRACE RPAREN stmt_block
    (77) func_declaration -> . type MAIN LPAREN RBRACE stmt_block
    (78) func_declaration -> . type MAIN LBRACE RBRACE stmt_block
    (79) func_declaration -> . type MAIN LBRACKET RBRACE stmt_block
    (80) func_declaration -> . type MAIN LBRACKET RPAREN stmt_block
    (81) func_declaration -> . type MAIN LBRACE RBRACKET stmt_block
    (82) func_declaration -> . type MAIN LPAREN RBRACKET stmt_block
    (83) func_declaration -> . type MAIN LBRACKET RBRACKET stmt_block
    (84) func_declaration -> . type MAIN RPAREN stmt_block
    (85) func_declaration -> . type MAIN RBRACE stmt_block
    (86) func_declaration -> . type MAIN RBRACKET stmt_block
    (87) func_declaration -> . type MAIN LPAREN stmt_block
    (88) func_declaration -> . type MAIN LBRACE stmt_block
    (89) func_declaration -> . type MAIN LBRACKET stmt_block
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    $end            reduce using rule 1 (program -> declaration_list .)
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9

    func_declaration               shift and go to state 4
    declaration                    shift and go to state 5
    type                           shift and go to state 6

state 3

    (4) declaration_list -> empty .

    INT             reduce using rule 4 (declaration_list -> empty .)
    FLOAT           reduce using rule 4 (declaration_list -> empty .)
    VOID            reduce using rule 4 (declaration_list -> empty .)
    $end            reduce using rule 4 (declaration_list -> empty .)


state 4

    (2) declaration_list -> declaration_list func_declaration .

    INT             reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    FLOAT           reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list func_declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list func_declaration .)


state 5

    (3) declaration_list -> declaration_list declaration . SEMICOLON
    (114) declaration -> declaration . COMMA idbracket
    (115) declaration -> declaration . COMMA TIMES idbracket

    SEMICOLON       shift and go to state 10
    COMMA           shift and go to state 11


state 6

    (5) func_declaration -> type . ID LPAREN params RPAREN stmt_block
    (6) func_declaration -> type . ID error params error stmt_block
    (7) func_declaration -> type . ID LBRACE params error stmt_block
    (8) func_declaration -> type . ID LBRACKET params error stmt_block
    (9) func_declaration -> type . ID LPAREN params error stmt_block
    (10) func_declaration -> type . ID error params RPAREN stmt_block
    (11) func_declaration -> type . ID error params RBRACE stmt_block
    (12) func_declaration -> type . ID error params RBRACKET stmt_block
    (13) func_declaration -> type . ID LPAREN RPAREN stmt_block
    (14) func_declaration -> type . ID LPAREN RBRACE stmt_block
    (15) func_declaration -> type . ID LPAREN RBRACKET stmt_block
    (16) func_declaration -> type . ID LBRACE RPAREN stmt_block
    (17) func_declaration -> type . ID LBRACE RBRACKET stmt_block
    (18) func_declaration -> type . ID LBRACE RBRACE stmt_block
    (19) func_declaration -> type . ID LBRACKET RPAREN stmt_block
    (20) func_declaration -> type . ID LBRACKET RBRACE stmt_block
    (21) func_declaration -> type . ID LBRACKET RBRACKET stmt_block
    (22) func_declaration -> type . ID LPAREN stmt_block
    (23) func_declaration -> type . ID LBRACE stmt_block
    (24) func_declaration -> type . ID LBRACKET stmt_block
    (25) func_declaration -> type . ID RPAREN stmt_block
    (26) func_declaration -> type . ID RBRACKET stmt_block
    (27) func_declaration -> type . ID RBRACE stmt_block
    (28) func_declaration -> type . TIMES ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> type . TIMES ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> type . TIMES ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> type . TIMES ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> type . TIMES ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type . TIMES ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type . TIMES ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type . TIMES ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type . TIMES ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type . TIMES ID params RPAREN stmt_block
    (38) func_declaration -> type . TIMES ID params RBRACE stmt_block
    (39) func_declaration -> type . TIMES ID params RBRACKET stmt_block
    (40) func_declaration -> type . TIMES ID LPAREN params stmt_block
    (41) func_declaration -> type . TIMES ID LBRACE params stmt_block
    (42) func_declaration -> type . TIMES ID LBRACKET params stmt_block
    (43) func_declaration -> type . TIMES ID params stmt_block
    (44) func_declaration -> type . TIMES ID LPAREN RPAREN stmt_block
    (45) func_declaration -> type . TIMES ID LBRACE RPAREN stmt_block
    (46) func_declaration -> type . TIMES ID LPAREN RBRACE stmt_block
    (47) func_declaration -> type . TIMES ID LBRACE RBRACE stmt_block
    (48) func_declaration -> type . TIMES ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> type . TIMES ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> type . TIMES ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> type . TIMES ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> type . TIMES ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type . TIMES ID RPAREN stmt_block
    (54) func_declaration -> type . TIMES ID RBRACE stmt_block
    (55) func_declaration -> type . TIMES ID RBRACKET stmt_block
    (56) func_declaration -> type . TIMES ID LPAREN stmt_block
    (57) func_declaration -> type . TIMES ID LBRACE stmt_block
    (58) func_declaration -> type . TIMES ID LBRACKET stmt_block
    (59) func_declaration -> type . MAIN LPAREN params RPAREN stmt_block
    (60) func_declaration -> type . MAIN LBRACE params RPAREN stmt_block
    (61) func_declaration -> type . MAIN LPAREN params RBRACE stmt_block
    (62) func_declaration -> type . MAIN LBRACE params RBRACE stmt_block
    (63) func_declaration -> type . MAIN LBRACKET params RBRACE stmt_block
    (64) func_declaration -> type . MAIN LBRACKET params RPAREN stmt_block
    (65) func_declaration -> type . MAIN LBRACE params RBRACKET stmt_block
    (66) func_declaration -> type . MAIN LPAREN params RBRACKET stmt_block
    (67) func_declaration -> type . MAIN LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> type . MAIN params RPAREN stmt_block
    (69) func_declaration -> type . MAIN params RBRACE stmt_block
    (70) func_declaration -> type . MAIN params RBRACKET stmt_block
    (71) func_declaration -> type . MAIN LPAREN params stmt_block
    (72) func_declaration -> type . MAIN LBRACE params stmt_block
    (73) func_declaration -> type . MAIN LBRACKET params stmt_block
    (74) func_declaration -> type . MAIN params stmt_block
    (75) func_declaration -> type . MAIN LPAREN RPAREN stmt_block
    (76) func_declaration -> type . MAIN LBRACE RPAREN stmt_block
    (77) func_declaration -> type . MAIN LPAREN RBRACE stmt_block
    (78) func_declaration -> type . MAIN LBRACE RBRACE stmt_block
    (79) func_declaration -> type . MAIN LBRACKET RBRACE stmt_block
    (80) func_declaration -> type . MAIN LBRACKET RPAREN stmt_block
    (81) func_declaration -> type . MAIN LBRACE RBRACKET stmt_block
    (82) func_declaration -> type . MAIN LPAREN RBRACKET stmt_block
    (83) func_declaration -> type . MAIN LBRACKET RBRACKET stmt_block
    (84) func_declaration -> type . MAIN RPAREN stmt_block
    (85) func_declaration -> type . MAIN RBRACE stmt_block
    (86) func_declaration -> type . MAIN RBRACKET stmt_block
    (87) func_declaration -> type . MAIN LPAREN stmt_block
    (88) func_declaration -> type . MAIN LBRACE stmt_block
    (89) func_declaration -> type . MAIN LBRACKET stmt_block
    (116) declaration -> type . idbracket
    (117) declaration -> type . TIMES idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 12
    TIMES           shift and go to state 13
    MAIN            shift and go to state 14

    idbracket                      shift and go to state 15

state 7

    (128) type -> INT .

    ID              reduce using rule 128 (type -> INT .)
    TIMES           reduce using rule 128 (type -> INT .)
    MAIN            reduce using rule 128 (type -> INT .)


state 8

    (129) type -> FLOAT .

    ID              reduce using rule 129 (type -> FLOAT .)
    TIMES           reduce using rule 129 (type -> FLOAT .)
    MAIN            reduce using rule 129 (type -> FLOAT .)


state 9

    (130) type -> VOID .

    ID              reduce using rule 130 (type -> VOID .)
    TIMES           reduce using rule 130 (type -> VOID .)
    MAIN            reduce using rule 130 (type -> VOID .)


state 10

    (3) declaration_list -> declaration_list declaration SEMICOLON .

    INT             reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    FLOAT           reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    VOID            reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration SEMICOLON .)


state 11

    (114) declaration -> declaration COMMA . idbracket
    (115) declaration -> declaration COMMA . TIMES idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    TIMES           shift and go to state 17
    ID              shift and go to state 18

    idbracket                      shift and go to state 16

state 12

    (5) func_declaration -> type ID . LPAREN params RPAREN stmt_block
    (6) func_declaration -> type ID . error params error stmt_block
    (7) func_declaration -> type ID . LBRACE params error stmt_block
    (8) func_declaration -> type ID . LBRACKET params error stmt_block
    (9) func_declaration -> type ID . LPAREN params error stmt_block
    (10) func_declaration -> type ID . error params RPAREN stmt_block
    (11) func_declaration -> type ID . error params RBRACE stmt_block
    (12) func_declaration -> type ID . error params RBRACKET stmt_block
    (13) func_declaration -> type ID . LPAREN RPAREN stmt_block
    (14) func_declaration -> type ID . LPAREN RBRACE stmt_block
    (15) func_declaration -> type ID . LPAREN RBRACKET stmt_block
    (16) func_declaration -> type ID . LBRACE RPAREN stmt_block
    (17) func_declaration -> type ID . LBRACE RBRACKET stmt_block
    (18) func_declaration -> type ID . LBRACE RBRACE stmt_block
    (19) func_declaration -> type ID . LBRACKET RPAREN stmt_block
    (20) func_declaration -> type ID . LBRACKET RBRACE stmt_block
    (21) func_declaration -> type ID . LBRACKET RBRACKET stmt_block
    (22) func_declaration -> type ID . LPAREN stmt_block
    (23) func_declaration -> type ID . LBRACE stmt_block
    (24) func_declaration -> type ID . LBRACKET stmt_block
    (25) func_declaration -> type ID . RPAREN stmt_block
    (26) func_declaration -> type ID . RBRACKET stmt_block
    (27) func_declaration -> type ID . RBRACE stmt_block
    (118) idbracket -> ID .
    (119) idbracket -> ID . LBRACKET INUM RBRACKET
    (120) idbracket -> ID . LBRACKET INUM RBRACE
    (121) idbracket -> ID . LBRACE INUM RBRACKET
    (122) idbracket -> ID . LPAREN INUM RBRACKET
    (123) idbracket -> ID . LBRACKET INUM RPAREN
    (124) idbracket -> ID . LBRACE INUM RPAREN
    (125) idbracket -> ID . LPAREN INUM RBRACE
    (126) idbracket -> ID . LPAREN INUM RPAREN
    (127) idbracket -> ID . LBRACE INUM RBRACE

    LPAREN          shift and go to state 19
    error           shift and go to state 21
    LBRACE          shift and go to state 22
    LBRACKET        shift and go to state 23
    RPAREN          shift and go to state 20
    RBRACKET        shift and go to state 25
    RBRACE          shift and go to state 24
    SEMICOLON       reduce using rule 118 (idbracket -> ID .)
    COMMA           reduce using rule 118 (idbracket -> ID .)


state 13

    (28) func_declaration -> type TIMES . ID LPAREN params RPAREN stmt_block
    (29) func_declaration -> type TIMES . ID LBRACE params RPAREN stmt_block
    (30) func_declaration -> type TIMES . ID LPAREN params RBRACE stmt_block
    (31) func_declaration -> type TIMES . ID LBRACE params RBRACE stmt_block
    (32) func_declaration -> type TIMES . ID LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type TIMES . ID LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type TIMES . ID LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type TIMES . ID LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type TIMES . ID LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type TIMES . ID params RPAREN stmt_block
    (38) func_declaration -> type TIMES . ID params RBRACE stmt_block
    (39) func_declaration -> type TIMES . ID params RBRACKET stmt_block
    (40) func_declaration -> type TIMES . ID LPAREN params stmt_block
    (41) func_declaration -> type TIMES . ID LBRACE params stmt_block
    (42) func_declaration -> type TIMES . ID LBRACKET params stmt_block
    (43) func_declaration -> type TIMES . ID params stmt_block
    (44) func_declaration -> type TIMES . ID LPAREN RPAREN stmt_block
    (45) func_declaration -> type TIMES . ID LBRACE RPAREN stmt_block
    (46) func_declaration -> type TIMES . ID LPAREN RBRACE stmt_block
    (47) func_declaration -> type TIMES . ID LBRACE RBRACE stmt_block
    (48) func_declaration -> type TIMES . ID LBRACKET RBRACE stmt_block
    (49) func_declaration -> type TIMES . ID LBRACKET RPAREN stmt_block
    (50) func_declaration -> type TIMES . ID LPAREN RBRACKET stmt_block
    (51) func_declaration -> type TIMES . ID LBRACE RBRACKET stmt_block
    (52) func_declaration -> type TIMES . ID LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type TIMES . ID RPAREN stmt_block
    (54) func_declaration -> type TIMES . ID RBRACE stmt_block
    (55) func_declaration -> type TIMES . ID RBRACKET stmt_block
    (56) func_declaration -> type TIMES . ID LPAREN stmt_block
    (57) func_declaration -> type TIMES . ID LBRACE stmt_block
    (58) func_declaration -> type TIMES . ID LBRACKET stmt_block
    (117) declaration -> type TIMES . idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 26

    idbracket                      shift and go to state 27

state 14

    (59) func_declaration -> type MAIN . LPAREN params RPAREN stmt_block
    (60) func_declaration -> type MAIN . LBRACE params RPAREN stmt_block
    (61) func_declaration -> type MAIN . LPAREN params RBRACE stmt_block
    (62) func_declaration -> type MAIN . LBRACE params RBRACE stmt_block
    (63) func_declaration -> type MAIN . LBRACKET params RBRACE stmt_block
    (64) func_declaration -> type MAIN . LBRACKET params RPAREN stmt_block
    (65) func_declaration -> type MAIN . LBRACE params RBRACKET stmt_block
    (66) func_declaration -> type MAIN . LPAREN params RBRACKET stmt_block
    (67) func_declaration -> type MAIN . LBRACKET params RBRACKET stmt_block
    (68) func_declaration -> type MAIN . params RPAREN stmt_block
    (69) func_declaration -> type MAIN . params RBRACE stmt_block
    (70) func_declaration -> type MAIN . params RBRACKET stmt_block
    (71) func_declaration -> type MAIN . LPAREN params stmt_block
    (72) func_declaration -> type MAIN . LBRACE params stmt_block
    (73) func_declaration -> type MAIN . LBRACKET params stmt_block
    (74) func_declaration -> type MAIN . params stmt_block
    (75) func_declaration -> type MAIN . LPAREN RPAREN stmt_block
    (76) func_declaration -> type MAIN . LBRACE RPAREN stmt_block
    (77) func_declaration -> type MAIN . LPAREN RBRACE stmt_block
    (78) func_declaration -> type MAIN . LBRACE RBRACE stmt_block
    (79) func_declaration -> type MAIN . LBRACKET RBRACE stmt_block
    (80) func_declaration -> type MAIN . LBRACKET RPAREN stmt_block
    (81) func_declaration -> type MAIN . LBRACE RBRACKET stmt_block
    (82) func_declaration -> type MAIN . LPAREN RBRACKET stmt_block
    (83) func_declaration -> type MAIN . LBRACKET RBRACKET stmt_block
    (84) func_declaration -> type MAIN . RPAREN stmt_block
    (85) func_declaration -> type MAIN . RBRACE stmt_block
    (86) func_declaration -> type MAIN . RBRACKET stmt_block
    (87) func_declaration -> type MAIN . LPAREN stmt_block
    (88) func_declaration -> type MAIN . LBRACE stmt_block
    (89) func_declaration -> type MAIN . LBRACKET stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    LPAREN          shift and go to state 29
    LBRACE          shift and go to state 32
    LBRACKET        shift and go to state 34
    RPAREN          shift and go to state 31
    RBRACE          shift and go to state 33
    RBRACKET        shift and go to state 35
    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 30
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 15

    (116) declaration -> type idbracket .

    SEMICOLON       reduce using rule 116 (declaration -> type idbracket .)
    COMMA           reduce using rule 116 (declaration -> type idbracket .)


state 16

    (114) declaration -> declaration COMMA idbracket .

    SEMICOLON       reduce using rule 114 (declaration -> declaration COMMA idbracket .)
    COMMA           reduce using rule 114 (declaration -> declaration COMMA idbracket .)


state 17

    (115) declaration -> declaration COMMA TIMES . idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 18

    idbracket                      shift and go to state 39

state 18

    (118) idbracket -> ID .
    (119) idbracket -> ID . LBRACKET INUM RBRACKET
    (120) idbracket -> ID . LBRACKET INUM RBRACE
    (121) idbracket -> ID . LBRACE INUM RBRACKET
    (122) idbracket -> ID . LPAREN INUM RBRACKET
    (123) idbracket -> ID . LBRACKET INUM RPAREN
    (124) idbracket -> ID . LBRACE INUM RPAREN
    (125) idbracket -> ID . LPAREN INUM RBRACE
    (126) idbracket -> ID . LPAREN INUM RPAREN
    (127) idbracket -> ID . LBRACE INUM RBRACE

    SEMICOLON       reduce using rule 118 (idbracket -> ID .)
    COMMA           reduce using rule 118 (idbracket -> ID .)
    LBRACKET        shift and go to state 40
    LBRACE          shift and go to state 41
    LPAREN          shift and go to state 42


state 19

    (5) func_declaration -> type ID LPAREN . params RPAREN stmt_block
    (9) func_declaration -> type ID LPAREN . params error stmt_block
    (13) func_declaration -> type ID LPAREN . RPAREN stmt_block
    (14) func_declaration -> type ID LPAREN . RBRACE stmt_block
    (15) func_declaration -> type ID LPAREN . RBRACKET stmt_block
    (22) func_declaration -> type ID LPAREN . stmt_block
    (122) idbracket -> ID LPAREN . INUM RBRACKET
    (125) idbracket -> ID LPAREN . INUM RBRACE
    (126) idbracket -> ID LPAREN . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 44
    RBRACE          shift and go to state 46
    RBRACKET        shift and go to state 47
    INUM            shift and go to state 48
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 43
    stmt_block                     shift and go to state 45
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 20

    (25) func_declaration -> type ID RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 50

state 21

    (6) func_declaration -> type ID error . params error stmt_block
    (10) func_declaration -> type ID error . params RPAREN stmt_block
    (11) func_declaration -> type ID error . params RBRACE stmt_block
    (12) func_declaration -> type ID error . params RBRACKET stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 51
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 22

    (7) func_declaration -> type ID LBRACE . params error stmt_block
    (16) func_declaration -> type ID LBRACE . RPAREN stmt_block
    (17) func_declaration -> type ID LBRACE . RBRACKET stmt_block
    (18) func_declaration -> type ID LBRACE . RBRACE stmt_block
    (23) func_declaration -> type ID LBRACE . stmt_block
    (121) idbracket -> ID LBRACE . INUM RBRACKET
    (124) idbracket -> ID LBRACE . INUM RPAREN
    (127) idbracket -> ID LBRACE . INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 54
    RBRACKET        shift and go to state 55
    RBRACE          shift and go to state 56
    INUM            shift and go to state 57
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 52
    stmt_block                     shift and go to state 53
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 23

    (8) func_declaration -> type ID LBRACKET . params error stmt_block
    (19) func_declaration -> type ID LBRACKET . RPAREN stmt_block
    (20) func_declaration -> type ID LBRACKET . RBRACE stmt_block
    (21) func_declaration -> type ID LBRACKET . RBRACKET stmt_block
    (24) func_declaration -> type ID LBRACKET . stmt_block
    (119) idbracket -> ID LBRACKET . INUM RBRACKET
    (120) idbracket -> ID LBRACKET . INUM RBRACE
    (123) idbracket -> ID LBRACKET . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 60
    RBRACE          shift and go to state 61
    RBRACKET        shift and go to state 62
    INUM            shift and go to state 63
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 58
    stmt_block                     shift and go to state 59
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 24

    (27) func_declaration -> type ID RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 64

state 25

    (26) func_declaration -> type ID RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 65

state 26

    (28) func_declaration -> type TIMES ID . LPAREN params RPAREN stmt_block
    (29) func_declaration -> type TIMES ID . LBRACE params RPAREN stmt_block
    (30) func_declaration -> type TIMES ID . LPAREN params RBRACE stmt_block
    (31) func_declaration -> type TIMES ID . LBRACE params RBRACE stmt_block
    (32) func_declaration -> type TIMES ID . LBRACKET params RBRACE stmt_block
    (33) func_declaration -> type TIMES ID . LBRACKET params RPAREN stmt_block
    (34) func_declaration -> type TIMES ID . LPAREN params RBRACKET stmt_block
    (35) func_declaration -> type TIMES ID . LBRACE params RBRACKET stmt_block
    (36) func_declaration -> type TIMES ID . LBRACKET params RBRACKET stmt_block
    (37) func_declaration -> type TIMES ID . params RPAREN stmt_block
    (38) func_declaration -> type TIMES ID . params RBRACE stmt_block
    (39) func_declaration -> type TIMES ID . params RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID . LPAREN params stmt_block
    (41) func_declaration -> type TIMES ID . LBRACE params stmt_block
    (42) func_declaration -> type TIMES ID . LBRACKET params stmt_block
    (43) func_declaration -> type TIMES ID . params stmt_block
    (44) func_declaration -> type TIMES ID . LPAREN RPAREN stmt_block
    (45) func_declaration -> type TIMES ID . LBRACE RPAREN stmt_block
    (46) func_declaration -> type TIMES ID . LPAREN RBRACE stmt_block
    (47) func_declaration -> type TIMES ID . LBRACE RBRACE stmt_block
    (48) func_declaration -> type TIMES ID . LBRACKET RBRACE stmt_block
    (49) func_declaration -> type TIMES ID . LBRACKET RPAREN stmt_block
    (50) func_declaration -> type TIMES ID . LPAREN RBRACKET stmt_block
    (51) func_declaration -> type TIMES ID . LBRACE RBRACKET stmt_block
    (52) func_declaration -> type TIMES ID . LBRACKET RBRACKET stmt_block
    (53) func_declaration -> type TIMES ID . RPAREN stmt_block
    (54) func_declaration -> type TIMES ID . RBRACE stmt_block
    (55) func_declaration -> type TIMES ID . RBRACKET stmt_block
    (56) func_declaration -> type TIMES ID . LPAREN stmt_block
    (57) func_declaration -> type TIMES ID . LBRACE stmt_block
    (58) func_declaration -> type TIMES ID . LBRACKET stmt_block
    (118) idbracket -> ID .
    (119) idbracket -> ID . LBRACKET INUM RBRACKET
    (120) idbracket -> ID . LBRACKET INUM RBRACE
    (121) idbracket -> ID . LBRACE INUM RBRACKET
    (122) idbracket -> ID . LPAREN INUM RBRACKET
    (123) idbracket -> ID . LBRACKET INUM RPAREN
    (124) idbracket -> ID . LBRACE INUM RPAREN
    (125) idbracket -> ID . LPAREN INUM RBRACE
    (126) idbracket -> ID . LPAREN INUM RPAREN
    (127) idbracket -> ID . LBRACE INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    LPAREN          shift and go to state 66
    LBRACE          shift and go to state 69
    LBRACKET        shift and go to state 71
    RPAREN          shift and go to state 68
    RBRACE          shift and go to state 70
    RBRACKET        shift and go to state 72
    SEMICOLON       reduce using rule 118 (idbracket -> ID .)
    COMMA           reduce using rule 118 (idbracket -> ID .)
    VOID            shift and go to state 36
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 67
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 27

    (117) declaration -> type TIMES idbracket .

    SEMICOLON       reduce using rule 117 (declaration -> type TIMES idbracket .)
    COMMA           reduce using rule 117 (declaration -> type TIMES idbracket .)


state 28

    (94) param -> type . ID
    (95) param -> type . TIMES ID

    ID              shift and go to state 73
    TIMES           shift and go to state 74


state 29

    (59) func_declaration -> type MAIN LPAREN . params RPAREN stmt_block
    (61) func_declaration -> type MAIN LPAREN . params RBRACE stmt_block
    (66) func_declaration -> type MAIN LPAREN . params RBRACKET stmt_block
    (71) func_declaration -> type MAIN LPAREN . params stmt_block
    (75) func_declaration -> type MAIN LPAREN . RPAREN stmt_block
    (77) func_declaration -> type MAIN LPAREN . RBRACE stmt_block
    (82) func_declaration -> type MAIN LPAREN . RBRACKET stmt_block
    (87) func_declaration -> type MAIN LPAREN . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 76
    RBRACE          shift and go to state 78
    RBRACKET        shift and go to state 79
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 75
    stmt_block                     shift and go to state 77
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 30

    (68) func_declaration -> type MAIN params . RPAREN stmt_block
    (69) func_declaration -> type MAIN params . RBRACE stmt_block
    (70) func_declaration -> type MAIN params . RBRACKET stmt_block
    (74) func_declaration -> type MAIN params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 80
    RBRACE          shift and go to state 82
    RBRACKET        shift and go to state 83
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 81

state 31

    (84) func_declaration -> type MAIN RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 84

state 32

    (60) func_declaration -> type MAIN LBRACE . params RPAREN stmt_block
    (62) func_declaration -> type MAIN LBRACE . params RBRACE stmt_block
    (65) func_declaration -> type MAIN LBRACE . params RBRACKET stmt_block
    (72) func_declaration -> type MAIN LBRACE . params stmt_block
    (76) func_declaration -> type MAIN LBRACE . RPAREN stmt_block
    (78) func_declaration -> type MAIN LBRACE . RBRACE stmt_block
    (81) func_declaration -> type MAIN LBRACE . RBRACKET stmt_block
    (88) func_declaration -> type MAIN LBRACE . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 86
    RBRACE          shift and go to state 88
    RBRACKET        shift and go to state 89
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 85
    stmt_block                     shift and go to state 87
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 33

    (85) func_declaration -> type MAIN RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 90

state 34

    (63) func_declaration -> type MAIN LBRACKET . params RBRACE stmt_block
    (64) func_declaration -> type MAIN LBRACKET . params RPAREN stmt_block
    (67) func_declaration -> type MAIN LBRACKET . params RBRACKET stmt_block
    (73) func_declaration -> type MAIN LBRACKET . params stmt_block
    (79) func_declaration -> type MAIN LBRACKET . RBRACE stmt_block
    (80) func_declaration -> type MAIN LBRACKET . RPAREN stmt_block
    (83) func_declaration -> type MAIN LBRACKET . RBRACKET stmt_block
    (89) func_declaration -> type MAIN LBRACKET . stmt_block
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RBRACE          shift and go to state 92
    RPAREN          shift and go to state 94
    RBRACKET        shift and go to state 95
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 91
    stmt_block                     shift and go to state 93
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 35

    (86) func_declaration -> type MAIN RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 96

state 36

    (90) params -> VOID .
    (130) type -> VOID .

    RPAREN          reduce using rule 90 (params -> VOID .)
    RBRACE          reduce using rule 90 (params -> VOID .)
    RBRACKET        reduce using rule 90 (params -> VOID .)
    LBRACE          reduce using rule 90 (params -> VOID .)
    error           reduce using rule 90 (params -> VOID .)
    ID              reduce using rule 130 (type -> VOID .)
    TIMES           reduce using rule 130 (type -> VOID .)


state 37

    (91) params -> param_list .
    (93) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 91 (params -> param_list .)
    RBRACE          reduce using rule 91 (params -> param_list .)
    RBRACKET        reduce using rule 91 (params -> param_list .)
    LBRACE          reduce using rule 91 (params -> param_list .)
    error           reduce using rule 91 (params -> param_list .)
    COMMA           shift and go to state 97


state 38

    (92) param_list -> param .

    COMMA           reduce using rule 92 (param_list -> param .)
    RPAREN          reduce using rule 92 (param_list -> param .)
    RBRACE          reduce using rule 92 (param_list -> param .)
    RBRACKET        reduce using rule 92 (param_list -> param .)
    LBRACE          reduce using rule 92 (param_list -> param .)
    error           reduce using rule 92 (param_list -> param .)


state 39

    (115) declaration -> declaration COMMA TIMES idbracket .

    SEMICOLON       reduce using rule 115 (declaration -> declaration COMMA TIMES idbracket .)
    COMMA           reduce using rule 115 (declaration -> declaration COMMA TIMES idbracket .)


state 40

    (119) idbracket -> ID LBRACKET . INUM RBRACKET
    (120) idbracket -> ID LBRACKET . INUM RBRACE
    (123) idbracket -> ID LBRACKET . INUM RPAREN

    INUM            shift and go to state 63


state 41

    (121) idbracket -> ID LBRACE . INUM RBRACKET
    (124) idbracket -> ID LBRACE . INUM RPAREN
    (127) idbracket -> ID LBRACE . INUM RBRACE

    INUM            shift and go to state 57


state 42

    (122) idbracket -> ID LPAREN . INUM RBRACKET
    (125) idbracket -> ID LPAREN . INUM RBRACE
    (126) idbracket -> ID LPAREN . INUM RPAREN

    INUM            shift and go to state 48


state 43

    (5) func_declaration -> type ID LPAREN params . RPAREN stmt_block
    (9) func_declaration -> type ID LPAREN params . error stmt_block

    RPAREN          shift and go to state 98
    error           shift and go to state 99


state 44

    (13) func_declaration -> type ID LPAREN RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 100

state 45

    (22) func_declaration -> type ID LPAREN stmt_block .

    INT             reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    FLOAT           reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    VOID            reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)
    $end            reduce using rule 22 (func_declaration -> type ID LPAREN stmt_block .)


state 46

    (14) func_declaration -> type ID LPAREN RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 101

state 47

    (15) func_declaration -> type ID LPAREN RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 102

state 48

    (122) idbracket -> ID LPAREN INUM . RBRACKET
    (125) idbracket -> ID LPAREN INUM . RBRACE
    (126) idbracket -> ID LPAREN INUM . RPAREN

    RBRACKET        shift and go to state 103
    RBRACE          shift and go to state 104
    RPAREN          shift and go to state 105


state 49

    (131) stmt_block -> LBRACE . stmt_list RBRACE
    (132) stmt_list -> . stmt_list genstmt
    (133) stmt_list -> . empty
    (185) empty -> .

    RBRACE          reduce using rule 185 (empty -> .)
    IF              reduce using rule 185 (empty -> .)
    SEMICOLON       reduce using rule 185 (empty -> .)
    PRINT           reduce using rule 185 (empty -> .)
    ID              reduce using rule 185 (empty -> .)
    TIMES           reduce using rule 185 (empty -> .)
    LBRACE          reduce using rule 185 (empty -> .)
    FOR             reduce using rule 185 (empty -> .)
    RETURN          reduce using rule 185 (empty -> .)
    INCREMENT       reduce using rule 185 (empty -> .)
    INT             reduce using rule 185 (empty -> .)
    FLOAT           reduce using rule 185 (empty -> .)
    VOID            reduce using rule 185 (empty -> .)
    MINUS           reduce using rule 185 (empty -> .)
    LPAREN          reduce using rule 185 (empty -> .)
    FNUM            reduce using rule 185 (empty -> .)
    INUM            reduce using rule 185 (empty -> .)
    ADDRESS         reduce using rule 185 (empty -> .)

    stmt_list                      shift and go to state 106
    empty                          shift and go to state 107

state 50

    (25) func_declaration -> type ID RPAREN stmt_block .

    INT             reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    FLOAT           reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    VOID            reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)
    $end            reduce using rule 25 (func_declaration -> type ID RPAREN stmt_block .)


state 51

    (6) func_declaration -> type ID error params . error stmt_block
    (10) func_declaration -> type ID error params . RPAREN stmt_block
    (11) func_declaration -> type ID error params . RBRACE stmt_block
    (12) func_declaration -> type ID error params . RBRACKET stmt_block

    error           shift and go to state 108
    RPAREN          shift and go to state 109
    RBRACE          shift and go to state 110
    RBRACKET        shift and go to state 111


state 52

    (7) func_declaration -> type ID LBRACE params . error stmt_block

    error           shift and go to state 112


state 53

    (23) func_declaration -> type ID LBRACE stmt_block .

    INT             reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    FLOAT           reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    VOID            reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)
    $end            reduce using rule 23 (func_declaration -> type ID LBRACE stmt_block .)


state 54

    (16) func_declaration -> type ID LBRACE RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 113

state 55

    (17) func_declaration -> type ID LBRACE RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 114

state 56

    (18) func_declaration -> type ID LBRACE RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 115

state 57

    (121) idbracket -> ID LBRACE INUM . RBRACKET
    (124) idbracket -> ID LBRACE INUM . RPAREN
    (127) idbracket -> ID LBRACE INUM . RBRACE

    RBRACKET        shift and go to state 116
    RPAREN          shift and go to state 117
    RBRACE          shift and go to state 118


state 58

    (8) func_declaration -> type ID LBRACKET params . error stmt_block

    error           shift and go to state 119


state 59

    (24) func_declaration -> type ID LBRACKET stmt_block .

    INT             reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    FLOAT           reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    VOID            reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)
    $end            reduce using rule 24 (func_declaration -> type ID LBRACKET stmt_block .)


state 60

    (19) func_declaration -> type ID LBRACKET RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 120

state 61

    (20) func_declaration -> type ID LBRACKET RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 121

state 62

    (21) func_declaration -> type ID LBRACKET RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 122

state 63

    (119) idbracket -> ID LBRACKET INUM . RBRACKET
    (120) idbracket -> ID LBRACKET INUM . RBRACE
    (123) idbracket -> ID LBRACKET INUM . RPAREN

    RBRACKET        shift and go to state 123
    RBRACE          shift and go to state 124
    RPAREN          shift and go to state 125


state 64

    (27) func_declaration -> type ID RBRACE stmt_block .

    INT             reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    FLOAT           reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    VOID            reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)
    $end            reduce using rule 27 (func_declaration -> type ID RBRACE stmt_block .)


state 65

    (26) func_declaration -> type ID RBRACKET stmt_block .

    INT             reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    FLOAT           reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    VOID            reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)
    $end            reduce using rule 26 (func_declaration -> type ID RBRACKET stmt_block .)


state 66

    (28) func_declaration -> type TIMES ID LPAREN . params RPAREN stmt_block
    (30) func_declaration -> type TIMES ID LPAREN . params RBRACE stmt_block
    (34) func_declaration -> type TIMES ID LPAREN . params RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID LPAREN . params stmt_block
    (44) func_declaration -> type TIMES ID LPAREN . RPAREN stmt_block
    (46) func_declaration -> type TIMES ID LPAREN . RBRACE stmt_block
    (50) func_declaration -> type TIMES ID LPAREN . RBRACKET stmt_block
    (56) func_declaration -> type TIMES ID LPAREN . stmt_block
    (122) idbracket -> ID LPAREN . INUM RBRACKET
    (125) idbracket -> ID LPAREN . INUM RBRACE
    (126) idbracket -> ID LPAREN . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 127
    RBRACE          shift and go to state 129
    RBRACKET        shift and go to state 130
    INUM            shift and go to state 48
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 126
    stmt_block                     shift and go to state 128
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 67

    (37) func_declaration -> type TIMES ID params . RPAREN stmt_block
    (38) func_declaration -> type TIMES ID params . RBRACE stmt_block
    (39) func_declaration -> type TIMES ID params . RBRACKET stmt_block
    (43) func_declaration -> type TIMES ID params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 131
    RBRACE          shift and go to state 133
    RBRACKET        shift and go to state 134
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 132

state 68

    (53) func_declaration -> type TIMES ID RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 135

state 69

    (29) func_declaration -> type TIMES ID LBRACE . params RPAREN stmt_block
    (31) func_declaration -> type TIMES ID LBRACE . params RBRACE stmt_block
    (35) func_declaration -> type TIMES ID LBRACE . params RBRACKET stmt_block
    (41) func_declaration -> type TIMES ID LBRACE . params stmt_block
    (45) func_declaration -> type TIMES ID LBRACE . RPAREN stmt_block
    (47) func_declaration -> type TIMES ID LBRACE . RBRACE stmt_block
    (51) func_declaration -> type TIMES ID LBRACE . RBRACKET stmt_block
    (57) func_declaration -> type TIMES ID LBRACE . stmt_block
    (121) idbracket -> ID LBRACE . INUM RBRACKET
    (124) idbracket -> ID LBRACE . INUM RPAREN
    (127) idbracket -> ID LBRACE . INUM RBRACE
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RPAREN          shift and go to state 137
    RBRACE          shift and go to state 139
    RBRACKET        shift and go to state 140
    INUM            shift and go to state 57
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 136
    stmt_block                     shift and go to state 138
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 70

    (54) func_declaration -> type TIMES ID RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 141

state 71

    (32) func_declaration -> type TIMES ID LBRACKET . params RBRACE stmt_block
    (33) func_declaration -> type TIMES ID LBRACKET . params RPAREN stmt_block
    (36) func_declaration -> type TIMES ID LBRACKET . params RBRACKET stmt_block
    (42) func_declaration -> type TIMES ID LBRACKET . params stmt_block
    (48) func_declaration -> type TIMES ID LBRACKET . RBRACE stmt_block
    (49) func_declaration -> type TIMES ID LBRACKET . RPAREN stmt_block
    (52) func_declaration -> type TIMES ID LBRACKET . RBRACKET stmt_block
    (58) func_declaration -> type TIMES ID LBRACKET . stmt_block
    (119) idbracket -> ID LBRACKET . INUM RBRACKET
    (120) idbracket -> ID LBRACKET . INUM RBRACE
    (123) idbracket -> ID LBRACKET . INUM RPAREN
    (90) params -> . VOID
    (91) params -> . param_list
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (92) param_list -> . param
    (93) param_list -> . param_list COMMA param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    RBRACE          shift and go to state 143
    RPAREN          shift and go to state 145
    RBRACKET        shift and go to state 146
    INUM            shift and go to state 63
    VOID            shift and go to state 36
    LBRACE          shift and go to state 49
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    type                           shift and go to state 28
    params                         shift and go to state 142
    stmt_block                     shift and go to state 144
    param_list                     shift and go to state 37
    param                          shift and go to state 38

state 72

    (55) func_declaration -> type TIMES ID RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 147

state 73

    (94) param -> type ID .

    COMMA           reduce using rule 94 (param -> type ID .)
    RPAREN          reduce using rule 94 (param -> type ID .)
    RBRACE          reduce using rule 94 (param -> type ID .)
    RBRACKET        reduce using rule 94 (param -> type ID .)
    LBRACE          reduce using rule 94 (param -> type ID .)
    error           reduce using rule 94 (param -> type ID .)


state 74

    (95) param -> type TIMES . ID

    ID              shift and go to state 148


state 75

    (59) func_declaration -> type MAIN LPAREN params . RPAREN stmt_block
    (61) func_declaration -> type MAIN LPAREN params . RBRACE stmt_block
    (66) func_declaration -> type MAIN LPAREN params . RBRACKET stmt_block
    (71) func_declaration -> type MAIN LPAREN params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 149
    RBRACE          shift and go to state 151
    RBRACKET        shift and go to state 152
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 150

state 76

    (75) func_declaration -> type MAIN LPAREN RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 153

state 77

    (87) func_declaration -> type MAIN LPAREN stmt_block .

    INT             reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    FLOAT           reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    VOID            reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)
    $end            reduce using rule 87 (func_declaration -> type MAIN LPAREN stmt_block .)


state 78

    (77) func_declaration -> type MAIN LPAREN RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 154

state 79

    (82) func_declaration -> type MAIN LPAREN RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 155

state 80

    (68) func_declaration -> type MAIN params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 156

state 81

    (74) func_declaration -> type MAIN params stmt_block .

    INT             reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    FLOAT           reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    VOID            reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)
    $end            reduce using rule 74 (func_declaration -> type MAIN params stmt_block .)


state 82

    (69) func_declaration -> type MAIN params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 157

state 83

    (70) func_declaration -> type MAIN params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 158

state 84

    (84) func_declaration -> type MAIN RPAREN stmt_block .

    INT             reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    FLOAT           reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    VOID            reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)
    $end            reduce using rule 84 (func_declaration -> type MAIN RPAREN stmt_block .)


state 85

    (60) func_declaration -> type MAIN LBRACE params . RPAREN stmt_block
    (62) func_declaration -> type MAIN LBRACE params . RBRACE stmt_block
    (65) func_declaration -> type MAIN LBRACE params . RBRACKET stmt_block
    (72) func_declaration -> type MAIN LBRACE params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 159
    RBRACE          shift and go to state 161
    RBRACKET        shift and go to state 162
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 160

state 86

    (76) func_declaration -> type MAIN LBRACE RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 163

state 87

    (88) func_declaration -> type MAIN LBRACE stmt_block .

    INT             reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    FLOAT           reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    VOID            reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)
    $end            reduce using rule 88 (func_declaration -> type MAIN LBRACE stmt_block .)


state 88

    (78) func_declaration -> type MAIN LBRACE RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 164

state 89

    (81) func_declaration -> type MAIN LBRACE RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 165

state 90

    (85) func_declaration -> type MAIN RBRACE stmt_block .

    INT             reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    FLOAT           reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    VOID            reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)
    $end            reduce using rule 85 (func_declaration -> type MAIN RBRACE stmt_block .)


state 91

    (63) func_declaration -> type MAIN LBRACKET params . RBRACE stmt_block
    (64) func_declaration -> type MAIN LBRACKET params . RPAREN stmt_block
    (67) func_declaration -> type MAIN LBRACKET params . RBRACKET stmt_block
    (73) func_declaration -> type MAIN LBRACKET params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 166
    RPAREN          shift and go to state 168
    RBRACKET        shift and go to state 169
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 167

state 92

    (79) func_declaration -> type MAIN LBRACKET RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 170

state 93

    (89) func_declaration -> type MAIN LBRACKET stmt_block .

    INT             reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    FLOAT           reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    VOID            reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)
    $end            reduce using rule 89 (func_declaration -> type MAIN LBRACKET stmt_block .)


state 94

    (80) func_declaration -> type MAIN LBRACKET RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 171

state 95

    (83) func_declaration -> type MAIN LBRACKET RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 172

state 96

    (86) func_declaration -> type MAIN RBRACKET stmt_block .

    INT             reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    FLOAT           reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    VOID            reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)
    $end            reduce using rule 86 (func_declaration -> type MAIN RBRACKET stmt_block .)


state 97

    (93) param_list -> param_list COMMA . param
    (94) param -> . type ID
    (95) param -> . type TIMES ID
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9

    param                          shift and go to state 173
    type                           shift and go to state 28

state 98

    (5) func_declaration -> type ID LPAREN params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 174

state 99

    (9) func_declaration -> type ID LPAREN params error . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 175

state 100

    (13) func_declaration -> type ID LPAREN RPAREN stmt_block .

    INT             reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)
    $end            reduce using rule 13 (func_declaration -> type ID LPAREN RPAREN stmt_block .)


state 101

    (14) func_declaration -> type ID LPAREN RBRACE stmt_block .

    INT             reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)
    $end            reduce using rule 14 (func_declaration -> type ID LPAREN RBRACE stmt_block .)


state 102

    (15) func_declaration -> type ID LPAREN RBRACKET stmt_block .

    INT             reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 15 (func_declaration -> type ID LPAREN RBRACKET stmt_block .)


state 103

    (122) idbracket -> ID LPAREN INUM RBRACKET .

    SEMICOLON       reduce using rule 122 (idbracket -> ID LPAREN INUM RBRACKET .)
    COMMA           reduce using rule 122 (idbracket -> ID LPAREN INUM RBRACKET .)


state 104

    (125) idbracket -> ID LPAREN INUM RBRACE .

    SEMICOLON       reduce using rule 125 (idbracket -> ID LPAREN INUM RBRACE .)
    COMMA           reduce using rule 125 (idbracket -> ID LPAREN INUM RBRACE .)


state 105

    (126) idbracket -> ID LPAREN INUM RPAREN .

    SEMICOLON       reduce using rule 126 (idbracket -> ID LPAREN INUM RPAREN .)
    COMMA           reduce using rule 126 (idbracket -> ID LPAREN INUM RPAREN .)


state 106

    (131) stmt_block -> LBRACE stmt_list . RBRACE
    (132) stmt_list -> stmt_list . genstmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 176
    IF              shift and go to state 180
    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    genstmt                        shift and go to state 177
    mstmt                          shift and go to state 178
    umstmt                         shift and go to state 179
    expr                           shift and go to state 182
    stmt                           shift and go to state 183
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 107

    (133) stmt_list -> empty .

    RBRACE          reduce using rule 133 (stmt_list -> empty .)
    IF              reduce using rule 133 (stmt_list -> empty .)
    SEMICOLON       reduce using rule 133 (stmt_list -> empty .)
    PRINT           reduce using rule 133 (stmt_list -> empty .)
    ID              reduce using rule 133 (stmt_list -> empty .)
    TIMES           reduce using rule 133 (stmt_list -> empty .)
    LBRACE          reduce using rule 133 (stmt_list -> empty .)
    FOR             reduce using rule 133 (stmt_list -> empty .)
    RETURN          reduce using rule 133 (stmt_list -> empty .)
    INCREMENT       reduce using rule 133 (stmt_list -> empty .)
    INT             reduce using rule 133 (stmt_list -> empty .)
    FLOAT           reduce using rule 133 (stmt_list -> empty .)
    VOID            reduce using rule 133 (stmt_list -> empty .)
    MINUS           reduce using rule 133 (stmt_list -> empty .)
    LPAREN          reduce using rule 133 (stmt_list -> empty .)
    FNUM            reduce using rule 133 (stmt_list -> empty .)
    INUM            reduce using rule 133 (stmt_list -> empty .)
    ADDRESS         reduce using rule 133 (stmt_list -> empty .)


state 108

    (6) func_declaration -> type ID error params error . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 203

state 109

    (10) func_declaration -> type ID error params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 204

state 110

    (11) func_declaration -> type ID error params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 205

state 111

    (12) func_declaration -> type ID error params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 206

state 112

    (7) func_declaration -> type ID LBRACE params error . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 207

state 113

    (16) func_declaration -> type ID LBRACE RPAREN stmt_block .

    INT             reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)
    $end            reduce using rule 16 (func_declaration -> type ID LBRACE RPAREN stmt_block .)


state 114

    (17) func_declaration -> type ID LBRACE RBRACKET stmt_block .

    INT             reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 17 (func_declaration -> type ID LBRACE RBRACKET stmt_block .)


state 115

    (18) func_declaration -> type ID LBRACE RBRACE stmt_block .

    INT             reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)
    $end            reduce using rule 18 (func_declaration -> type ID LBRACE RBRACE stmt_block .)


state 116

    (121) idbracket -> ID LBRACE INUM RBRACKET .

    SEMICOLON       reduce using rule 121 (idbracket -> ID LBRACE INUM RBRACKET .)
    COMMA           reduce using rule 121 (idbracket -> ID LBRACE INUM RBRACKET .)


state 117

    (124) idbracket -> ID LBRACE INUM RPAREN .

    SEMICOLON       reduce using rule 124 (idbracket -> ID LBRACE INUM RPAREN .)
    COMMA           reduce using rule 124 (idbracket -> ID LBRACE INUM RPAREN .)


state 118

    (127) idbracket -> ID LBRACE INUM RBRACE .

    SEMICOLON       reduce using rule 127 (idbracket -> ID LBRACE INUM RBRACE .)
    COMMA           reduce using rule 127 (idbracket -> ID LBRACE INUM RBRACE .)


state 119

    (8) func_declaration -> type ID LBRACKET params error . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 208

state 120

    (19) func_declaration -> type ID LBRACKET RPAREN stmt_block .

    INT             reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 19 (func_declaration -> type ID LBRACKET RPAREN stmt_block .)


state 121

    (20) func_declaration -> type ID LBRACKET RBRACE stmt_block .

    INT             reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 20 (func_declaration -> type ID LBRACKET RBRACE stmt_block .)


state 122

    (21) func_declaration -> type ID LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 21 (func_declaration -> type ID LBRACKET RBRACKET stmt_block .)


state 123

    (119) idbracket -> ID LBRACKET INUM RBRACKET .

    SEMICOLON       reduce using rule 119 (idbracket -> ID LBRACKET INUM RBRACKET .)
    COMMA           reduce using rule 119 (idbracket -> ID LBRACKET INUM RBRACKET .)


state 124

    (120) idbracket -> ID LBRACKET INUM RBRACE .

    SEMICOLON       reduce using rule 120 (idbracket -> ID LBRACKET INUM RBRACE .)
    COMMA           reduce using rule 120 (idbracket -> ID LBRACKET INUM RBRACE .)


state 125

    (123) idbracket -> ID LBRACKET INUM RPAREN .

    SEMICOLON       reduce using rule 123 (idbracket -> ID LBRACKET INUM RPAREN .)
    COMMA           reduce using rule 123 (idbracket -> ID LBRACKET INUM RPAREN .)


state 126

    (28) func_declaration -> type TIMES ID LPAREN params . RPAREN stmt_block
    (30) func_declaration -> type TIMES ID LPAREN params . RBRACE stmt_block
    (34) func_declaration -> type TIMES ID LPAREN params . RBRACKET stmt_block
    (40) func_declaration -> type TIMES ID LPAREN params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 209
    RBRACE          shift and go to state 211
    RBRACKET        shift and go to state 212
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 210

state 127

    (44) func_declaration -> type TIMES ID LPAREN RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 213

state 128

    (56) func_declaration -> type TIMES ID LPAREN stmt_block .

    INT             reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    FLOAT           reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    VOID            reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)
    $end            reduce using rule 56 (func_declaration -> type TIMES ID LPAREN stmt_block .)


state 129

    (46) func_declaration -> type TIMES ID LPAREN RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 214

state 130

    (50) func_declaration -> type TIMES ID LPAREN RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 215

state 131

    (37) func_declaration -> type TIMES ID params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 216

state 132

    (43) func_declaration -> type TIMES ID params stmt_block .

    INT             reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    FLOAT           reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    VOID            reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)
    $end            reduce using rule 43 (func_declaration -> type TIMES ID params stmt_block .)


state 133

    (38) func_declaration -> type TIMES ID params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 217

state 134

    (39) func_declaration -> type TIMES ID params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 218

state 135

    (53) func_declaration -> type TIMES ID RPAREN stmt_block .

    INT             reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    FLOAT           reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    VOID            reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)
    $end            reduce using rule 53 (func_declaration -> type TIMES ID RPAREN stmt_block .)


state 136

    (29) func_declaration -> type TIMES ID LBRACE params . RPAREN stmt_block
    (31) func_declaration -> type TIMES ID LBRACE params . RBRACE stmt_block
    (35) func_declaration -> type TIMES ID LBRACE params . RBRACKET stmt_block
    (41) func_declaration -> type TIMES ID LBRACE params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 219
    RBRACE          shift and go to state 221
    RBRACKET        shift and go to state 222
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 220

state 137

    (45) func_declaration -> type TIMES ID LBRACE RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 223

state 138

    (57) func_declaration -> type TIMES ID LBRACE stmt_block .

    INT             reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    FLOAT           reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    VOID            reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)
    $end            reduce using rule 57 (func_declaration -> type TIMES ID LBRACE stmt_block .)


state 139

    (47) func_declaration -> type TIMES ID LBRACE RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 224

state 140

    (51) func_declaration -> type TIMES ID LBRACE RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 225

state 141

    (54) func_declaration -> type TIMES ID RBRACE stmt_block .

    INT             reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    FLOAT           reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    VOID            reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)
    $end            reduce using rule 54 (func_declaration -> type TIMES ID RBRACE stmt_block .)


state 142

    (32) func_declaration -> type TIMES ID LBRACKET params . RBRACE stmt_block
    (33) func_declaration -> type TIMES ID LBRACKET params . RPAREN stmt_block
    (36) func_declaration -> type TIMES ID LBRACKET params . RBRACKET stmt_block
    (42) func_declaration -> type TIMES ID LBRACKET params . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 226
    RPAREN          shift and go to state 228
    RBRACKET        shift and go to state 229
    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 227

state 143

    (48) func_declaration -> type TIMES ID LBRACKET RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 230

state 144

    (58) func_declaration -> type TIMES ID LBRACKET stmt_block .

    INT             reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    FLOAT           reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    VOID            reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)
    $end            reduce using rule 58 (func_declaration -> type TIMES ID LBRACKET stmt_block .)


state 145

    (49) func_declaration -> type TIMES ID LBRACKET RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 231

state 146

    (52) func_declaration -> type TIMES ID LBRACKET RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 232

state 147

    (55) func_declaration -> type TIMES ID RBRACKET stmt_block .

    INT             reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    FLOAT           reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    VOID            reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)
    $end            reduce using rule 55 (func_declaration -> type TIMES ID RBRACKET stmt_block .)


state 148

    (95) param -> type TIMES ID .

    COMMA           reduce using rule 95 (param -> type TIMES ID .)
    RPAREN          reduce using rule 95 (param -> type TIMES ID .)
    RBRACE          reduce using rule 95 (param -> type TIMES ID .)
    RBRACKET        reduce using rule 95 (param -> type TIMES ID .)
    LBRACE          reduce using rule 95 (param -> type TIMES ID .)
    error           reduce using rule 95 (param -> type TIMES ID .)


state 149

    (59) func_declaration -> type MAIN LPAREN params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 233

state 150

    (71) func_declaration -> type MAIN LPAREN params stmt_block .

    INT             reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    FLOAT           reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    VOID            reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)
    $end            reduce using rule 71 (func_declaration -> type MAIN LPAREN params stmt_block .)


state 151

    (61) func_declaration -> type MAIN LPAREN params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 234

state 152

    (66) func_declaration -> type MAIN LPAREN params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 235

state 153

    (75) func_declaration -> type MAIN LPAREN RPAREN stmt_block .

    INT             reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)
    $end            reduce using rule 75 (func_declaration -> type MAIN LPAREN RPAREN stmt_block .)


state 154

    (77) func_declaration -> type MAIN LPAREN RBRACE stmt_block .

    INT             reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)
    $end            reduce using rule 77 (func_declaration -> type MAIN LPAREN RBRACE stmt_block .)


state 155

    (82) func_declaration -> type MAIN LPAREN RBRACKET stmt_block .

    INT             reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 82 (func_declaration -> type MAIN LPAREN RBRACKET stmt_block .)


state 156

    (68) func_declaration -> type MAIN params RPAREN stmt_block .

    INT             reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    FLOAT           reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    VOID            reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)
    $end            reduce using rule 68 (func_declaration -> type MAIN params RPAREN stmt_block .)


state 157

    (69) func_declaration -> type MAIN params RBRACE stmt_block .

    INT             reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    FLOAT           reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    VOID            reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)
    $end            reduce using rule 69 (func_declaration -> type MAIN params RBRACE stmt_block .)


state 158

    (70) func_declaration -> type MAIN params RBRACKET stmt_block .

    INT             reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    VOID            reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)
    $end            reduce using rule 70 (func_declaration -> type MAIN params RBRACKET stmt_block .)


state 159

    (60) func_declaration -> type MAIN LBRACE params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 236

state 160

    (72) func_declaration -> type MAIN LBRACE params stmt_block .

    INT             reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    FLOAT           reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    VOID            reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)
    $end            reduce using rule 72 (func_declaration -> type MAIN LBRACE params stmt_block .)


state 161

    (62) func_declaration -> type MAIN LBRACE params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 237

state 162

    (65) func_declaration -> type MAIN LBRACE params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 238

state 163

    (76) func_declaration -> type MAIN LBRACE RPAREN stmt_block .

    INT             reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)
    $end            reduce using rule 76 (func_declaration -> type MAIN LBRACE RPAREN stmt_block .)


state 164

    (78) func_declaration -> type MAIN LBRACE RBRACE stmt_block .

    INT             reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)
    $end            reduce using rule 78 (func_declaration -> type MAIN LBRACE RBRACE stmt_block .)


state 165

    (81) func_declaration -> type MAIN LBRACE RBRACKET stmt_block .

    INT             reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 81 (func_declaration -> type MAIN LBRACE RBRACKET stmt_block .)


state 166

    (63) func_declaration -> type MAIN LBRACKET params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 239

state 167

    (73) func_declaration -> type MAIN LBRACKET params stmt_block .

    INT             reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    FLOAT           reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    VOID            reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)
    $end            reduce using rule 73 (func_declaration -> type MAIN LBRACKET params stmt_block .)


state 168

    (64) func_declaration -> type MAIN LBRACKET params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 240

state 169

    (67) func_declaration -> type MAIN LBRACKET params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 241

state 170

    (79) func_declaration -> type MAIN LBRACKET RBRACE stmt_block .

    INT             reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 79 (func_declaration -> type MAIN LBRACKET RBRACE stmt_block .)


state 171

    (80) func_declaration -> type MAIN LBRACKET RPAREN stmt_block .

    INT             reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 80 (func_declaration -> type MAIN LBRACKET RPAREN stmt_block .)


state 172

    (83) func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 83 (func_declaration -> type MAIN LBRACKET RBRACKET stmt_block .)


state 173

    (93) param_list -> param_list COMMA param .

    COMMA           reduce using rule 93 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 93 (param_list -> param_list COMMA param .)
    RBRACE          reduce using rule 93 (param_list -> param_list COMMA param .)
    RBRACKET        reduce using rule 93 (param_list -> param_list COMMA param .)
    LBRACE          reduce using rule 93 (param_list -> param_list COMMA param .)
    error           reduce using rule 93 (param_list -> param_list COMMA param .)


state 174

    (5) func_declaration -> type ID LPAREN params RPAREN stmt_block .

    INT             reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 5 (func_declaration -> type ID LPAREN params RPAREN stmt_block .)


state 175

    (9) func_declaration -> type ID LPAREN params error stmt_block .

    INT             reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    FLOAT           reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    VOID            reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)
    $end            reduce using rule 9 (func_declaration -> type ID LPAREN params error stmt_block .)


state 176

    (131) stmt_block -> LBRACE stmt_list RBRACE .

    INT             reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    VOID            reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    $end            reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    IF              reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    SEMICOLON       reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    ID              reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    TIMES           reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    LBRACE          reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    INCREMENT       reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    MINUS           reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    FNUM            reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    INUM            reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    ADDRESS         reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)
    ELSE            reduce using rule 131 (stmt_block -> LBRACE stmt_list RBRACE .)


state 177

    (132) stmt_list -> stmt_list genstmt .

    RBRACE          reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    IF              reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    SEMICOLON       reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    PRINT           reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    ID              reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    TIMES           reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    LBRACE          reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    FOR             reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    RETURN          reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    INCREMENT       reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    INT             reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    FLOAT           reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    VOID            reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    MINUS           reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    LPAREN          reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    FNUM            reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    INUM            reduce using rule 132 (stmt_list -> stmt_list genstmt .)
    ADDRESS         reduce using rule 132 (stmt_list -> stmt_list genstmt .)


state 178

    (96) genstmt -> mstmt .

    RBRACE          reduce using rule 96 (genstmt -> mstmt .)
    IF              reduce using rule 96 (genstmt -> mstmt .)
    SEMICOLON       reduce using rule 96 (genstmt -> mstmt .)
    PRINT           reduce using rule 96 (genstmt -> mstmt .)
    ID              reduce using rule 96 (genstmt -> mstmt .)
    TIMES           reduce using rule 96 (genstmt -> mstmt .)
    LBRACE          reduce using rule 96 (genstmt -> mstmt .)
    FOR             reduce using rule 96 (genstmt -> mstmt .)
    RETURN          reduce using rule 96 (genstmt -> mstmt .)
    INCREMENT       reduce using rule 96 (genstmt -> mstmt .)
    INT             reduce using rule 96 (genstmt -> mstmt .)
    FLOAT           reduce using rule 96 (genstmt -> mstmt .)
    VOID            reduce using rule 96 (genstmt -> mstmt .)
    MINUS           reduce using rule 96 (genstmt -> mstmt .)
    LPAREN          reduce using rule 96 (genstmt -> mstmt .)
    FNUM            reduce using rule 96 (genstmt -> mstmt .)
    INUM            reduce using rule 96 (genstmt -> mstmt .)
    ADDRESS         reduce using rule 96 (genstmt -> mstmt .)


state 179

    (97) genstmt -> umstmt .

    RBRACE          reduce using rule 97 (genstmt -> umstmt .)
    IF              reduce using rule 97 (genstmt -> umstmt .)
    SEMICOLON       reduce using rule 97 (genstmt -> umstmt .)
    PRINT           reduce using rule 97 (genstmt -> umstmt .)
    ID              reduce using rule 97 (genstmt -> umstmt .)
    TIMES           reduce using rule 97 (genstmt -> umstmt .)
    LBRACE          reduce using rule 97 (genstmt -> umstmt .)
    FOR             reduce using rule 97 (genstmt -> umstmt .)
    RETURN          reduce using rule 97 (genstmt -> umstmt .)
    INCREMENT       reduce using rule 97 (genstmt -> umstmt .)
    INT             reduce using rule 97 (genstmt -> umstmt .)
    FLOAT           reduce using rule 97 (genstmt -> umstmt .)
    VOID            reduce using rule 97 (genstmt -> umstmt .)
    MINUS           reduce using rule 97 (genstmt -> umstmt .)
    LPAREN          reduce using rule 97 (genstmt -> umstmt .)
    FNUM            reduce using rule 97 (genstmt -> umstmt .)
    INUM            reduce using rule 97 (genstmt -> umstmt .)
    ADDRESS         reduce using rule 97 (genstmt -> umstmt .)


state 180

    (98) mstmt -> IF . LPAREN expr RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF . LPAREN expr RPAREN genstmt
    (101) umstmt -> IF . LPAREN expr RPAREN mstmt ELSE umstmt

    LPAREN          shift and go to state 242


state 181

    (164) arith_expr -> LPAREN . arith_expr RPAREN
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 243

state 182

    (102) stmt -> expr . SEMICOLON
    (108) stmt -> expr . error

    SEMICOLON       shift and go to state 246
    error           shift and go to state 247


state 183

    (99) mstmt -> stmt .

    RBRACE          reduce using rule 99 (mstmt -> stmt .)
    IF              reduce using rule 99 (mstmt -> stmt .)
    SEMICOLON       reduce using rule 99 (mstmt -> stmt .)
    PRINT           reduce using rule 99 (mstmt -> stmt .)
    ID              reduce using rule 99 (mstmt -> stmt .)
    TIMES           reduce using rule 99 (mstmt -> stmt .)
    LBRACE          reduce using rule 99 (mstmt -> stmt .)
    FOR             reduce using rule 99 (mstmt -> stmt .)
    RETURN          reduce using rule 99 (mstmt -> stmt .)
    INCREMENT       reduce using rule 99 (mstmt -> stmt .)
    INT             reduce using rule 99 (mstmt -> stmt .)
    FLOAT           reduce using rule 99 (mstmt -> stmt .)
    VOID            reduce using rule 99 (mstmt -> stmt .)
    MINUS           reduce using rule 99 (mstmt -> stmt .)
    LPAREN          reduce using rule 99 (mstmt -> stmt .)
    FNUM            reduce using rule 99 (mstmt -> stmt .)
    INUM            reduce using rule 99 (mstmt -> stmt .)
    ADDRESS         reduce using rule 99 (mstmt -> stmt .)
    ELSE            reduce using rule 99 (mstmt -> stmt .)


state 184

    (107) stmt -> SEMICOLON .

    RBRACE          reduce using rule 107 (stmt -> SEMICOLON .)
    IF              reduce using rule 107 (stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 107 (stmt -> SEMICOLON .)
    PRINT           reduce using rule 107 (stmt -> SEMICOLON .)
    ID              reduce using rule 107 (stmt -> SEMICOLON .)
    TIMES           reduce using rule 107 (stmt -> SEMICOLON .)
    LBRACE          reduce using rule 107 (stmt -> SEMICOLON .)
    FOR             reduce using rule 107 (stmt -> SEMICOLON .)
    RETURN          reduce using rule 107 (stmt -> SEMICOLON .)
    INCREMENT       reduce using rule 107 (stmt -> SEMICOLON .)
    INT             reduce using rule 107 (stmt -> SEMICOLON .)
    FLOAT           reduce using rule 107 (stmt -> SEMICOLON .)
    VOID            reduce using rule 107 (stmt -> SEMICOLON .)
    MINUS           reduce using rule 107 (stmt -> SEMICOLON .)
    LPAREN          reduce using rule 107 (stmt -> SEMICOLON .)
    FNUM            reduce using rule 107 (stmt -> SEMICOLON .)
    INUM            reduce using rule 107 (stmt -> SEMICOLON .)
    ADDRESS         reduce using rule 107 (stmt -> SEMICOLON .)
    ELSE            reduce using rule 107 (stmt -> SEMICOLON .)


state 185

    (103) stmt -> declaration . SEMICOLON
    (114) declaration -> declaration . COMMA idbracket
    (115) declaration -> declaration . COMMA TIMES idbracket

    SEMICOLON       shift and go to state 248
    COMMA           shift and go to state 11


state 186

    (104) stmt -> stmt_block .

    RBRACE          reduce using rule 104 (stmt -> stmt_block .)
    IF              reduce using rule 104 (stmt -> stmt_block .)
    SEMICOLON       reduce using rule 104 (stmt -> stmt_block .)
    PRINT           reduce using rule 104 (stmt -> stmt_block .)
    ID              reduce using rule 104 (stmt -> stmt_block .)
    TIMES           reduce using rule 104 (stmt -> stmt_block .)
    LBRACE          reduce using rule 104 (stmt -> stmt_block .)
    FOR             reduce using rule 104 (stmt -> stmt_block .)
    RETURN          reduce using rule 104 (stmt -> stmt_block .)
    INCREMENT       reduce using rule 104 (stmt -> stmt_block .)
    INT             reduce using rule 104 (stmt -> stmt_block .)
    FLOAT           reduce using rule 104 (stmt -> stmt_block .)
    VOID            reduce using rule 104 (stmt -> stmt_block .)
    MINUS           reduce using rule 104 (stmt -> stmt_block .)
    LPAREN          reduce using rule 104 (stmt -> stmt_block .)
    FNUM            reduce using rule 104 (stmt -> stmt_block .)
    INUM            reduce using rule 104 (stmt -> stmt_block .)
    ADDRESS         reduce using rule 104 (stmt -> stmt_block .)
    ELSE            reduce using rule 104 (stmt -> stmt_block .)


state 187

    (105) stmt -> stmt_forloop .

    RBRACE          reduce using rule 105 (stmt -> stmt_forloop .)
    IF              reduce using rule 105 (stmt -> stmt_forloop .)
    SEMICOLON       reduce using rule 105 (stmt -> stmt_forloop .)
    PRINT           reduce using rule 105 (stmt -> stmt_forloop .)
    ID              reduce using rule 105 (stmt -> stmt_forloop .)
    TIMES           reduce using rule 105 (stmt -> stmt_forloop .)
    LBRACE          reduce using rule 105 (stmt -> stmt_forloop .)
    FOR             reduce using rule 105 (stmt -> stmt_forloop .)
    RETURN          reduce using rule 105 (stmt -> stmt_forloop .)
    INCREMENT       reduce using rule 105 (stmt -> stmt_forloop .)
    INT             reduce using rule 105 (stmt -> stmt_forloop .)
    FLOAT           reduce using rule 105 (stmt -> stmt_forloop .)
    VOID            reduce using rule 105 (stmt -> stmt_forloop .)
    MINUS           reduce using rule 105 (stmt -> stmt_forloop .)
    LPAREN          reduce using rule 105 (stmt -> stmt_forloop .)
    FNUM            reduce using rule 105 (stmt -> stmt_forloop .)
    INUM            reduce using rule 105 (stmt -> stmt_forloop .)
    ADDRESS         reduce using rule 105 (stmt -> stmt_forloop .)
    ELSE            reduce using rule 105 (stmt -> stmt_forloop .)


state 188

    (106) stmt -> stmt_return .

    RBRACE          reduce using rule 106 (stmt -> stmt_return .)
    IF              reduce using rule 106 (stmt -> stmt_return .)
    SEMICOLON       reduce using rule 106 (stmt -> stmt_return .)
    PRINT           reduce using rule 106 (stmt -> stmt_return .)
    ID              reduce using rule 106 (stmt -> stmt_return .)
    TIMES           reduce using rule 106 (stmt -> stmt_return .)
    LBRACE          reduce using rule 106 (stmt -> stmt_return .)
    FOR             reduce using rule 106 (stmt -> stmt_return .)
    RETURN          reduce using rule 106 (stmt -> stmt_return .)
    INCREMENT       reduce using rule 106 (stmt -> stmt_return .)
    INT             reduce using rule 106 (stmt -> stmt_return .)
    FLOAT           reduce using rule 106 (stmt -> stmt_return .)
    VOID            reduce using rule 106 (stmt -> stmt_return .)
    MINUS           reduce using rule 106 (stmt -> stmt_return .)
    LPAREN          reduce using rule 106 (stmt -> stmt_return .)
    FNUM            reduce using rule 106 (stmt -> stmt_return .)
    INUM            reduce using rule 106 (stmt -> stmt_return .)
    ADDRESS         reduce using rule 106 (stmt -> stmt_return .)
    ELSE            reduce using rule 106 (stmt -> stmt_return .)


state 189

    (109) stmt -> PRINT . LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> PRINT . error argument_list RPAREN SEMICOLON
    (111) stmt -> PRINT . error argument_list RBRACE SEMICOLON
    (112) stmt -> PRINT . error argument_list RBRACKET SEMICOLON
    (113) stmt -> PRINT . error argument_list SEMICOLON

    LPAREN          shift and go to state 249
    error           shift and go to state 250


state 190

    (150) expr -> ID . EQUAL expr
    (151) expr -> ID . LBRACKET arith_expr RBRACKET EQUAL expr
    (161) incr_expr -> ID . INCREMENT
    (169) arith_expr -> ID .
    (176) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (178) arith_expr -> ID . LPAREN argument_list RPAREN

    EQUAL           shift and go to state 251
    LBRACKET        shift and go to state 252
    INCREMENT       shift and go to state 253
    PLUS            reduce using rule 169 (arith_expr -> ID .)
    MINUS           reduce using rule 169 (arith_expr -> ID .)
    TIMES           reduce using rule 169 (arith_expr -> ID .)
    DIV             reduce using rule 169 (arith_expr -> ID .)
    EQ              reduce using rule 169 (arith_expr -> ID .)
    NEQ             reduce using rule 169 (arith_expr -> ID .)
    GT              reduce using rule 169 (arith_expr -> ID .)
    LT              reduce using rule 169 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 169 (arith_expr -> ID .)
    error           reduce using rule 169 (arith_expr -> ID .)
    RPAREN          reduce using rule 169 (arith_expr -> ID .)
    RBRACE          reduce using rule 169 (arith_expr -> ID .)
    RBRACKET        reduce using rule 169 (arith_expr -> ID .)
    LPAREN          shift and go to state 254


state 191

    (156) basic_expr -> arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    EQ              reduce using rule 156 (basic_expr -> arith_expr .)
    NEQ             reduce using rule 156 (basic_expr -> arith_expr .)
    GT              reduce using rule 156 (basic_expr -> arith_expr .)
    LT              reduce using rule 156 (basic_expr -> arith_expr .)
    SEMICOLON       reduce using rule 156 (basic_expr -> arith_expr .)
    error           reduce using rule 156 (basic_expr -> arith_expr .)
    RPAREN          reduce using rule 156 (basic_expr -> arith_expr .)
    RBRACE          reduce using rule 156 (basic_expr -> arith_expr .)
    RBRACKET        reduce using rule 156 (basic_expr -> arith_expr .)
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 192

    (152) expr -> TIMES . ID EQUAL expr
    (172) arith_expr -> TIMES . ID
    (173) arith_expr -> TIMES . LPAREN arith_expr RPAREN
    (174) arith_expr -> TIMES . ID LPAREN argument_list RPAREN
    (177) arith_expr -> TIMES . ID LBRACKET arith_expr RBRACKET

    ID              shift and go to state 259
    LPAREN          shift and go to state 260


state 193

    (153) expr -> incr_expr .

    SEMICOLON       reduce using rule 153 (expr -> incr_expr .)
    error           reduce using rule 153 (expr -> incr_expr .)
    RPAREN          reduce using rule 153 (expr -> incr_expr .)
    RBRACE          reduce using rule 153 (expr -> incr_expr .)
    RBRACKET        reduce using rule 153 (expr -> incr_expr .)


state 194

    (154) expr -> basic_expr .
    (155) basic_expr -> basic_expr . compare arith_expr
    (157) compare -> . EQ
    (158) compare -> . NEQ
    (159) compare -> . GT
    (160) compare -> . LT

    SEMICOLON       reduce using rule 154 (expr -> basic_expr .)
    error           reduce using rule 154 (expr -> basic_expr .)
    RPAREN          reduce using rule 154 (expr -> basic_expr .)
    RBRACE          reduce using rule 154 (expr -> basic_expr .)
    RBRACKET        reduce using rule 154 (expr -> basic_expr .)
    EQ              shift and go to state 262
    NEQ             shift and go to state 263
    GT              shift and go to state 264
    LT              shift and go to state 265

    compare                        shift and go to state 261

state 195

    (116) declaration -> type . idbracket
    (117) declaration -> type . TIMES idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    TIMES           shift and go to state 266
    ID              shift and go to state 18

    idbracket                      shift and go to state 15

state 196

    (134) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> FOR . LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> FOR . LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> FOR . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LPAREN          shift and go to state 267
    LBRACE          shift and go to state 269
    LBRACKET        shift and go to state 270
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 268
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 197

    (146) stmt_return -> RETURN . expr SEMICOLON
    (147) stmt_return -> RETURN . expr error
    (148) stmt_return -> RETURN . SEMICOLON
    (149) stmt_return -> RETURN . error
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 272
    error           shift and go to state 273
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 271
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 198

    (162) incr_expr -> INCREMENT . ID

    ID              shift and go to state 274


state 199

    (163) arith_expr -> MINUS . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 275

state 200

    (170) arith_expr -> FNUM .

    PLUS            reduce using rule 170 (arith_expr -> FNUM .)
    MINUS           reduce using rule 170 (arith_expr -> FNUM .)
    TIMES           reduce using rule 170 (arith_expr -> FNUM .)
    DIV             reduce using rule 170 (arith_expr -> FNUM .)
    EQ              reduce using rule 170 (arith_expr -> FNUM .)
    NEQ             reduce using rule 170 (arith_expr -> FNUM .)
    GT              reduce using rule 170 (arith_expr -> FNUM .)
    LT              reduce using rule 170 (arith_expr -> FNUM .)
    SEMICOLON       reduce using rule 170 (arith_expr -> FNUM .)
    error           reduce using rule 170 (arith_expr -> FNUM .)
    RPAREN          reduce using rule 170 (arith_expr -> FNUM .)
    COMMA           reduce using rule 170 (arith_expr -> FNUM .)
    RBRACE          reduce using rule 170 (arith_expr -> FNUM .)
    RBRACKET        reduce using rule 170 (arith_expr -> FNUM .)


state 201

    (171) arith_expr -> INUM .

    PLUS            reduce using rule 171 (arith_expr -> INUM .)
    MINUS           reduce using rule 171 (arith_expr -> INUM .)
    TIMES           reduce using rule 171 (arith_expr -> INUM .)
    DIV             reduce using rule 171 (arith_expr -> INUM .)
    EQ              reduce using rule 171 (arith_expr -> INUM .)
    NEQ             reduce using rule 171 (arith_expr -> INUM .)
    GT              reduce using rule 171 (arith_expr -> INUM .)
    LT              reduce using rule 171 (arith_expr -> INUM .)
    SEMICOLON       reduce using rule 171 (arith_expr -> INUM .)
    error           reduce using rule 171 (arith_expr -> INUM .)
    RPAREN          reduce using rule 171 (arith_expr -> INUM .)
    COMMA           reduce using rule 171 (arith_expr -> INUM .)
    RBRACE          reduce using rule 171 (arith_expr -> INUM .)
    RBRACKET        reduce using rule 171 (arith_expr -> INUM .)


state 202

    (175) arith_expr -> ADDRESS . ID

    ID              shift and go to state 276


state 203

    (6) func_declaration -> type ID error params error stmt_block .

    INT             reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    FLOAT           reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    VOID            reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)
    $end            reduce using rule 6 (func_declaration -> type ID error params error stmt_block .)


state 204

    (10) func_declaration -> type ID error params RPAREN stmt_block .

    INT             reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    FLOAT           reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    VOID            reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)
    $end            reduce using rule 10 (func_declaration -> type ID error params RPAREN stmt_block .)


state 205

    (11) func_declaration -> type ID error params RBRACE stmt_block .

    INT             reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    FLOAT           reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    VOID            reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)
    $end            reduce using rule 11 (func_declaration -> type ID error params RBRACE stmt_block .)


state 206

    (12) func_declaration -> type ID error params RBRACKET stmt_block .

    INT             reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    FLOAT           reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    VOID            reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)
    $end            reduce using rule 12 (func_declaration -> type ID error params RBRACKET stmt_block .)


state 207

    (7) func_declaration -> type ID LBRACE params error stmt_block .

    INT             reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    FLOAT           reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    VOID            reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)
    $end            reduce using rule 7 (func_declaration -> type ID LBRACE params error stmt_block .)


state 208

    (8) func_declaration -> type ID LBRACKET params error stmt_block .

    INT             reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    FLOAT           reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    VOID            reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)
    $end            reduce using rule 8 (func_declaration -> type ID LBRACKET params error stmt_block .)


state 209

    (28) func_declaration -> type TIMES ID LPAREN params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 277

state 210

    (40) func_declaration -> type TIMES ID LPAREN params stmt_block .

    INT             reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    FLOAT           reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    VOID            reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)
    $end            reduce using rule 40 (func_declaration -> type TIMES ID LPAREN params stmt_block .)


state 211

    (30) func_declaration -> type TIMES ID LPAREN params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 278

state 212

    (34) func_declaration -> type TIMES ID LPAREN params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 279

state 213

    (44) func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .

    INT             reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    FLOAT           reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    VOID            reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)
    $end            reduce using rule 44 (func_declaration -> type TIMES ID LPAREN RPAREN stmt_block .)


state 214

    (46) func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .

    INT             reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    FLOAT           reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    VOID            reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)
    $end            reduce using rule 46 (func_declaration -> type TIMES ID LPAREN RBRACE stmt_block .)


state 215

    (50) func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .

    INT             reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    FLOAT           reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    VOID            reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)
    $end            reduce using rule 50 (func_declaration -> type TIMES ID LPAREN RBRACKET stmt_block .)


state 216

    (37) func_declaration -> type TIMES ID params RPAREN stmt_block .

    INT             reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    FLOAT           reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    VOID            reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)
    $end            reduce using rule 37 (func_declaration -> type TIMES ID params RPAREN stmt_block .)


state 217

    (38) func_declaration -> type TIMES ID params RBRACE stmt_block .

    INT             reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    FLOAT           reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    VOID            reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)
    $end            reduce using rule 38 (func_declaration -> type TIMES ID params RBRACE stmt_block .)


state 218

    (39) func_declaration -> type TIMES ID params RBRACKET stmt_block .

    INT             reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    FLOAT           reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    VOID            reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)
    $end            reduce using rule 39 (func_declaration -> type TIMES ID params RBRACKET stmt_block .)


state 219

    (29) func_declaration -> type TIMES ID LBRACE params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 280

state 220

    (41) func_declaration -> type TIMES ID LBRACE params stmt_block .

    INT             reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    FLOAT           reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    VOID            reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)
    $end            reduce using rule 41 (func_declaration -> type TIMES ID LBRACE params stmt_block .)


state 221

    (31) func_declaration -> type TIMES ID LBRACE params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 281

state 222

    (35) func_declaration -> type TIMES ID LBRACE params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 282

state 223

    (45) func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .

    INT             reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    FLOAT           reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    VOID            reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)
    $end            reduce using rule 45 (func_declaration -> type TIMES ID LBRACE RPAREN stmt_block .)


state 224

    (47) func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .

    INT             reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    FLOAT           reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    VOID            reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)
    $end            reduce using rule 47 (func_declaration -> type TIMES ID LBRACE RBRACE stmt_block .)


state 225

    (51) func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .

    INT             reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    FLOAT           reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    VOID            reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)
    $end            reduce using rule 51 (func_declaration -> type TIMES ID LBRACE RBRACKET stmt_block .)


state 226

    (32) func_declaration -> type TIMES ID LBRACKET params RBRACE . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 283

state 227

    (42) func_declaration -> type TIMES ID LBRACKET params stmt_block .

    INT             reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    FLOAT           reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    VOID            reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)
    $end            reduce using rule 42 (func_declaration -> type TIMES ID LBRACKET params stmt_block .)


state 228

    (33) func_declaration -> type TIMES ID LBRACKET params RPAREN . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 284

state 229

    (36) func_declaration -> type TIMES ID LBRACKET params RBRACKET . stmt_block
    (131) stmt_block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 49

    stmt_block                     shift and go to state 285

state 230

    (48) func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .

    INT             reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    FLOAT           reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    VOID            reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)
    $end            reduce using rule 48 (func_declaration -> type TIMES ID LBRACKET RBRACE stmt_block .)


state 231

    (49) func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .

    INT             reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    FLOAT           reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    VOID            reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)
    $end            reduce using rule 49 (func_declaration -> type TIMES ID LBRACKET RPAREN stmt_block .)


state 232

    (52) func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .

    INT             reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    FLOAT           reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    VOID            reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)
    $end            reduce using rule 52 (func_declaration -> type TIMES ID LBRACKET RBRACKET stmt_block .)


state 233

    (59) func_declaration -> type MAIN LPAREN params RPAREN stmt_block .

    INT             reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 59 (func_declaration -> type MAIN LPAREN params RPAREN stmt_block .)


state 234

    (61) func_declaration -> type MAIN LPAREN params RBRACE stmt_block .

    INT             reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    FLOAT           reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    VOID            reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)
    $end            reduce using rule 61 (func_declaration -> type MAIN LPAREN params RBRACE stmt_block .)


state 235

    (66) func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .

    INT             reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    VOID            reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)
    $end            reduce using rule 66 (func_declaration -> type MAIN LPAREN params RBRACKET stmt_block .)


state 236

    (60) func_declaration -> type MAIN LBRACE params RPAREN stmt_block .

    INT             reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    FLOAT           reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    VOID            reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)
    $end            reduce using rule 60 (func_declaration -> type MAIN LBRACE params RPAREN stmt_block .)


state 237

    (62) func_declaration -> type MAIN LBRACE params RBRACE stmt_block .

    INT             reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    FLOAT           reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    VOID            reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)
    $end            reduce using rule 62 (func_declaration -> type MAIN LBRACE params RBRACE stmt_block .)


state 238

    (65) func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .

    INT             reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    FLOAT           reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    VOID            reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)
    $end            reduce using rule 65 (func_declaration -> type MAIN LBRACE params RBRACKET stmt_block .)


state 239

    (63) func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .

    INT             reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    FLOAT           reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    VOID            reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)
    $end            reduce using rule 63 (func_declaration -> type MAIN LBRACKET params RBRACE stmt_block .)


state 240

    (64) func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .

    INT             reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    FLOAT           reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    VOID            reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)
    $end            reduce using rule 64 (func_declaration -> type MAIN LBRACKET params RPAREN stmt_block .)


state 241

    (67) func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .

    INT             reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    FLOAT           reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    VOID            reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)
    $end            reduce using rule 67 (func_declaration -> type MAIN LBRACKET params RBRACKET stmt_block .)


state 242

    (98) mstmt -> IF LPAREN . expr RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN . expr RPAREN genstmt
    (101) umstmt -> IF LPAREN . expr RPAREN mstmt ELSE umstmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 286
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 243

    (164) arith_expr -> LPAREN arith_expr . RPAREN
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          shift and go to state 287
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 244

    (172) arith_expr -> TIMES . ID
    (173) arith_expr -> TIMES . LPAREN arith_expr RPAREN
    (174) arith_expr -> TIMES . ID LPAREN argument_list RPAREN
    (177) arith_expr -> TIMES . ID LBRACKET arith_expr RBRACKET

    ID              shift and go to state 288
    LPAREN          shift and go to state 260


state 245

    (169) arith_expr -> ID .
    (176) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (178) arith_expr -> ID . LPAREN argument_list RPAREN

    RPAREN          reduce using rule 169 (arith_expr -> ID .)
    PLUS            reduce using rule 169 (arith_expr -> ID .)
    MINUS           reduce using rule 169 (arith_expr -> ID .)
    TIMES           reduce using rule 169 (arith_expr -> ID .)
    DIV             reduce using rule 169 (arith_expr -> ID .)
    EQ              reduce using rule 169 (arith_expr -> ID .)
    NEQ             reduce using rule 169 (arith_expr -> ID .)
    GT              reduce using rule 169 (arith_expr -> ID .)
    LT              reduce using rule 169 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 169 (arith_expr -> ID .)
    error           reduce using rule 169 (arith_expr -> ID .)
    COMMA           reduce using rule 169 (arith_expr -> ID .)
    RBRACE          reduce using rule 169 (arith_expr -> ID .)
    RBRACKET        reduce using rule 169 (arith_expr -> ID .)
    LBRACKET        shift and go to state 289
    LPAREN          shift and go to state 254


state 246

    (102) stmt -> expr SEMICOLON .

    RBRACE          reduce using rule 102 (stmt -> expr SEMICOLON .)
    IF              reduce using rule 102 (stmt -> expr SEMICOLON .)
    SEMICOLON       reduce using rule 102 (stmt -> expr SEMICOLON .)
    PRINT           reduce using rule 102 (stmt -> expr SEMICOLON .)
    ID              reduce using rule 102 (stmt -> expr SEMICOLON .)
    TIMES           reduce using rule 102 (stmt -> expr SEMICOLON .)
    LBRACE          reduce using rule 102 (stmt -> expr SEMICOLON .)
    FOR             reduce using rule 102 (stmt -> expr SEMICOLON .)
    RETURN          reduce using rule 102 (stmt -> expr SEMICOLON .)
    INCREMENT       reduce using rule 102 (stmt -> expr SEMICOLON .)
    INT             reduce using rule 102 (stmt -> expr SEMICOLON .)
    FLOAT           reduce using rule 102 (stmt -> expr SEMICOLON .)
    VOID            reduce using rule 102 (stmt -> expr SEMICOLON .)
    MINUS           reduce using rule 102 (stmt -> expr SEMICOLON .)
    LPAREN          reduce using rule 102 (stmt -> expr SEMICOLON .)
    FNUM            reduce using rule 102 (stmt -> expr SEMICOLON .)
    INUM            reduce using rule 102 (stmt -> expr SEMICOLON .)
    ADDRESS         reduce using rule 102 (stmt -> expr SEMICOLON .)
    ELSE            reduce using rule 102 (stmt -> expr SEMICOLON .)


state 247

    (108) stmt -> expr error .

    RBRACE          reduce using rule 108 (stmt -> expr error .)
    IF              reduce using rule 108 (stmt -> expr error .)
    SEMICOLON       reduce using rule 108 (stmt -> expr error .)
    PRINT           reduce using rule 108 (stmt -> expr error .)
    ID              reduce using rule 108 (stmt -> expr error .)
    TIMES           reduce using rule 108 (stmt -> expr error .)
    LBRACE          reduce using rule 108 (stmt -> expr error .)
    FOR             reduce using rule 108 (stmt -> expr error .)
    RETURN          reduce using rule 108 (stmt -> expr error .)
    INCREMENT       reduce using rule 108 (stmt -> expr error .)
    INT             reduce using rule 108 (stmt -> expr error .)
    FLOAT           reduce using rule 108 (stmt -> expr error .)
    VOID            reduce using rule 108 (stmt -> expr error .)
    MINUS           reduce using rule 108 (stmt -> expr error .)
    LPAREN          reduce using rule 108 (stmt -> expr error .)
    FNUM            reduce using rule 108 (stmt -> expr error .)
    INUM            reduce using rule 108 (stmt -> expr error .)
    ADDRESS         reduce using rule 108 (stmt -> expr error .)
    ELSE            reduce using rule 108 (stmt -> expr error .)


state 248

    (103) stmt -> declaration SEMICOLON .

    RBRACE          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    IF              reduce using rule 103 (stmt -> declaration SEMICOLON .)
    SEMICOLON       reduce using rule 103 (stmt -> declaration SEMICOLON .)
    PRINT           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ID              reduce using rule 103 (stmt -> declaration SEMICOLON .)
    TIMES           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    LBRACE          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FOR             reduce using rule 103 (stmt -> declaration SEMICOLON .)
    RETURN          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INCREMENT       reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INT             reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FLOAT           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    VOID            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    MINUS           reduce using rule 103 (stmt -> declaration SEMICOLON .)
    LPAREN          reduce using rule 103 (stmt -> declaration SEMICOLON .)
    FNUM            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    INUM            reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ADDRESS         reduce using rule 103 (stmt -> declaration SEMICOLON .)
    ELSE            reduce using rule 103 (stmt -> declaration SEMICOLON .)


state 249

    (109) stmt -> PRINT LPAREN . argument_list RPAREN SEMICOLON
    (179) argument_list -> . argument
    (180) argument_list -> . argument_list COMMA argument
    (181) argument -> . empty
    (182) argument -> . arith_expr
    (183) argument -> . LITERAL
    (184) argument -> . error
    (185) empty -> .
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 294
    error           shift and go to state 295
    RPAREN          reduce using rule 185 (empty -> .)
    COMMA           reduce using rule 185 (empty -> .)
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    argument_list                  shift and go to state 290
    argument                       shift and go to state 291
    empty                          shift and go to state 292
    arith_expr                     shift and go to state 293

state 250

    (110) stmt -> PRINT error . argument_list RPAREN SEMICOLON
    (111) stmt -> PRINT error . argument_list RBRACE SEMICOLON
    (112) stmt -> PRINT error . argument_list RBRACKET SEMICOLON
    (113) stmt -> PRINT error . argument_list SEMICOLON
    (179) argument_list -> . argument
    (180) argument_list -> . argument_list COMMA argument
    (181) argument -> . empty
    (182) argument -> . arith_expr
    (183) argument -> . LITERAL
    (184) argument -> . error
    (185) empty -> .
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 294
    error           shift and go to state 295
    RPAREN          reduce using rule 185 (empty -> .)
    RBRACE          reduce using rule 185 (empty -> .)
    RBRACKET        reduce using rule 185 (empty -> .)
    SEMICOLON       reduce using rule 185 (empty -> .)
    COMMA           reduce using rule 185 (empty -> .)
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    argument_list                  shift and go to state 296
    argument                       shift and go to state 291
    empty                          shift and go to state 292
    arith_expr                     shift and go to state 293

state 251

    (150) expr -> ID EQUAL . expr
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 297
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 252

    (151) expr -> ID LBRACKET . arith_expr RBRACKET EQUAL expr
    (176) arith_expr -> ID LBRACKET . arith_expr RBRACKET
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 298

state 253

    (161) incr_expr -> ID INCREMENT .

    SEMICOLON       reduce using rule 161 (incr_expr -> ID INCREMENT .)
    error           reduce using rule 161 (incr_expr -> ID INCREMENT .)
    RPAREN          reduce using rule 161 (incr_expr -> ID INCREMENT .)
    RBRACE          reduce using rule 161 (incr_expr -> ID INCREMENT .)
    RBRACKET        reduce using rule 161 (incr_expr -> ID INCREMENT .)


state 254

    (178) arith_expr -> ID LPAREN . argument_list RPAREN
    (179) argument_list -> . argument
    (180) argument_list -> . argument_list COMMA argument
    (181) argument -> . empty
    (182) argument -> . arith_expr
    (183) argument -> . LITERAL
    (184) argument -> . error
    (185) empty -> .
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 294
    error           shift and go to state 295
    RPAREN          reduce using rule 185 (empty -> .)
    COMMA           reduce using rule 185 (empty -> .)
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    argument_list                  shift and go to state 299
    argument                       shift and go to state 291
    empty                          shift and go to state 292
    arith_expr                     shift and go to state 293

state 255

    (165) arith_expr -> arith_expr PLUS . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 300

state 256

    (166) arith_expr -> arith_expr MINUS . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 301

state 257

    (167) arith_expr -> arith_expr TIMES . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 302

state 258

    (168) arith_expr -> arith_expr DIV . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 303

state 259

    (152) expr -> TIMES ID . EQUAL expr
    (172) arith_expr -> TIMES ID .
    (174) arith_expr -> TIMES ID . LPAREN argument_list RPAREN
    (177) arith_expr -> TIMES ID . LBRACKET arith_expr RBRACKET

    EQUAL           shift and go to state 304
    PLUS            reduce using rule 172 (arith_expr -> TIMES ID .)
    MINUS           reduce using rule 172 (arith_expr -> TIMES ID .)
    TIMES           reduce using rule 172 (arith_expr -> TIMES ID .)
    DIV             reduce using rule 172 (arith_expr -> TIMES ID .)
    EQ              reduce using rule 172 (arith_expr -> TIMES ID .)
    NEQ             reduce using rule 172 (arith_expr -> TIMES ID .)
    GT              reduce using rule 172 (arith_expr -> TIMES ID .)
    LT              reduce using rule 172 (arith_expr -> TIMES ID .)
    SEMICOLON       reduce using rule 172 (arith_expr -> TIMES ID .)
    error           reduce using rule 172 (arith_expr -> TIMES ID .)
    RPAREN          reduce using rule 172 (arith_expr -> TIMES ID .)
    RBRACE          reduce using rule 172 (arith_expr -> TIMES ID .)
    RBRACKET        reduce using rule 172 (arith_expr -> TIMES ID .)
    LPAREN          shift and go to state 305
    LBRACKET        shift and go to state 306


state 260

    (173) arith_expr -> TIMES LPAREN . arith_expr RPAREN
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 307

state 261

    (155) basic_expr -> basic_expr compare . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 308

state 262

    (157) compare -> EQ .

    MINUS           reduce using rule 157 (compare -> EQ .)
    LPAREN          reduce using rule 157 (compare -> EQ .)
    ID              reduce using rule 157 (compare -> EQ .)
    FNUM            reduce using rule 157 (compare -> EQ .)
    INUM            reduce using rule 157 (compare -> EQ .)
    TIMES           reduce using rule 157 (compare -> EQ .)
    ADDRESS         reduce using rule 157 (compare -> EQ .)


state 263

    (158) compare -> NEQ .

    MINUS           reduce using rule 158 (compare -> NEQ .)
    LPAREN          reduce using rule 158 (compare -> NEQ .)
    ID              reduce using rule 158 (compare -> NEQ .)
    FNUM            reduce using rule 158 (compare -> NEQ .)
    INUM            reduce using rule 158 (compare -> NEQ .)
    TIMES           reduce using rule 158 (compare -> NEQ .)
    ADDRESS         reduce using rule 158 (compare -> NEQ .)


state 264

    (159) compare -> GT .

    MINUS           reduce using rule 159 (compare -> GT .)
    LPAREN          reduce using rule 159 (compare -> GT .)
    ID              reduce using rule 159 (compare -> GT .)
    FNUM            reduce using rule 159 (compare -> GT .)
    INUM            reduce using rule 159 (compare -> GT .)
    TIMES           reduce using rule 159 (compare -> GT .)
    ADDRESS         reduce using rule 159 (compare -> GT .)


state 265

    (160) compare -> LT .

    MINUS           reduce using rule 160 (compare -> LT .)
    LPAREN          reduce using rule 160 (compare -> LT .)
    ID              reduce using rule 160 (compare -> LT .)
    FNUM            reduce using rule 160 (compare -> LT .)
    INUM            reduce using rule 160 (compare -> LT .)
    TIMES           reduce using rule 160 (compare -> LT .)
    ADDRESS         reduce using rule 160 (compare -> LT .)


state 266

    (117) declaration -> type TIMES . idbracket
    (118) idbracket -> . ID
    (119) idbracket -> . ID LBRACKET INUM RBRACKET
    (120) idbracket -> . ID LBRACKET INUM RBRACE
    (121) idbracket -> . ID LBRACE INUM RBRACKET
    (122) idbracket -> . ID LPAREN INUM RBRACKET
    (123) idbracket -> . ID LBRACKET INUM RPAREN
    (124) idbracket -> . ID LBRACE INUM RPAREN
    (125) idbracket -> . ID LPAREN INUM RBRACE
    (126) idbracket -> . ID LPAREN INUM RPAREN
    (127) idbracket -> . ID LBRACE INUM RBRACE

    ID              shift and go to state 18

    idbracket                      shift and go to state 27

state 267

    (134) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (164) arith_expr -> LPAREN . arith_expr RPAREN
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr

    ID              shift and go to state 311
    TIMES           shift and go to state 192
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202
    INCREMENT       shift and go to state 198

    expr                           shift and go to state 309
    arith_expr                     shift and go to state 310
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 268

    (143) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> FOR expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 312


state 269

    (136) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (141) stmt_forloop -> FOR LBRACE . expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 313
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 270

    (138) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET . expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 314
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 271

    (146) stmt_return -> RETURN expr . SEMICOLON
    (147) stmt_return -> RETURN expr . error

    SEMICOLON       shift and go to state 315
    error           shift and go to state 316


state 272

    (148) stmt_return -> RETURN SEMICOLON .

    RBRACE          reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    IF              reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    ID              reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    TIMES           reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    FOR             reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    INCREMENT       reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    INT             reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    VOID            reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    MINUS           reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    FNUM            reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    INUM            reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    ADDRESS         reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)
    ELSE            reduce using rule 148 (stmt_return -> RETURN SEMICOLON .)


state 273

    (149) stmt_return -> RETURN error .

    RBRACE          reduce using rule 149 (stmt_return -> RETURN error .)
    IF              reduce using rule 149 (stmt_return -> RETURN error .)
    SEMICOLON       reduce using rule 149 (stmt_return -> RETURN error .)
    PRINT           reduce using rule 149 (stmt_return -> RETURN error .)
    ID              reduce using rule 149 (stmt_return -> RETURN error .)
    TIMES           reduce using rule 149 (stmt_return -> RETURN error .)
    LBRACE          reduce using rule 149 (stmt_return -> RETURN error .)
    FOR             reduce using rule 149 (stmt_return -> RETURN error .)
    RETURN          reduce using rule 149 (stmt_return -> RETURN error .)
    INCREMENT       reduce using rule 149 (stmt_return -> RETURN error .)
    INT             reduce using rule 149 (stmt_return -> RETURN error .)
    FLOAT           reduce using rule 149 (stmt_return -> RETURN error .)
    VOID            reduce using rule 149 (stmt_return -> RETURN error .)
    MINUS           reduce using rule 149 (stmt_return -> RETURN error .)
    LPAREN          reduce using rule 149 (stmt_return -> RETURN error .)
    FNUM            reduce using rule 149 (stmt_return -> RETURN error .)
    INUM            reduce using rule 149 (stmt_return -> RETURN error .)
    ADDRESS         reduce using rule 149 (stmt_return -> RETURN error .)
    ELSE            reduce using rule 149 (stmt_return -> RETURN error .)


state 274

    (162) incr_expr -> INCREMENT ID .

    SEMICOLON       reduce using rule 162 (incr_expr -> INCREMENT ID .)
    error           reduce using rule 162 (incr_expr -> INCREMENT ID .)
    RPAREN          reduce using rule 162 (incr_expr -> INCREMENT ID .)
    RBRACE          reduce using rule 162 (incr_expr -> INCREMENT ID .)
    RBRACKET        reduce using rule 162 (incr_expr -> INCREMENT ID .)


state 275

    (163) arith_expr -> MINUS arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    MINUS           reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    TIMES           reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    DIV             reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    EQ              reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    NEQ             reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    GT              reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    LT              reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    SEMICOLON       reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    error           reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    RPAREN          reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    COMMA           reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    RBRACE          reduce using rule 163 (arith_expr -> MINUS arith_expr .)
    RBRACKET        reduce using rule 163 (arith_expr -> MINUS arith_expr .)

  ! PLUS            [ shift and go to state 255 ]
  ! MINUS           [ shift and go to state 256 ]
  ! TIMES           [ shift and go to state 257 ]
  ! DIV             [ shift and go to state 258 ]


state 276

    (175) arith_expr -> ADDRESS ID .

    PLUS            reduce using rule 175 (arith_expr -> ADDRESS ID .)
    MINUS           reduce using rule 175 (arith_expr -> ADDRESS ID .)
    TIMES           reduce using rule 175 (arith_expr -> ADDRESS ID .)
    DIV             reduce using rule 175 (arith_expr -> ADDRESS ID .)
    EQ              reduce using rule 175 (arith_expr -> ADDRESS ID .)
    NEQ             reduce using rule 175 (arith_expr -> ADDRESS ID .)
    GT              reduce using rule 175 (arith_expr -> ADDRESS ID .)
    LT              reduce using rule 175 (arith_expr -> ADDRESS ID .)
    SEMICOLON       reduce using rule 175 (arith_expr -> ADDRESS ID .)
    error           reduce using rule 175 (arith_expr -> ADDRESS ID .)
    RPAREN          reduce using rule 175 (arith_expr -> ADDRESS ID .)
    COMMA           reduce using rule 175 (arith_expr -> ADDRESS ID .)
    RBRACE          reduce using rule 175 (arith_expr -> ADDRESS ID .)
    RBRACKET        reduce using rule 175 (arith_expr -> ADDRESS ID .)


state 277

    (28) func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .

    INT             reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    FLOAT           reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    VOID            reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)
    $end            reduce using rule 28 (func_declaration -> type TIMES ID LPAREN params RPAREN stmt_block .)


state 278

    (30) func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .

    INT             reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    FLOAT           reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    VOID            reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)
    $end            reduce using rule 30 (func_declaration -> type TIMES ID LPAREN params RBRACE stmt_block .)


state 279

    (34) func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .

    INT             reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    FLOAT           reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    VOID            reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)
    $end            reduce using rule 34 (func_declaration -> type TIMES ID LPAREN params RBRACKET stmt_block .)


state 280

    (29) func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .

    INT             reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    FLOAT           reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    VOID            reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)
    $end            reduce using rule 29 (func_declaration -> type TIMES ID LBRACE params RPAREN stmt_block .)


state 281

    (31) func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .

    INT             reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    FLOAT           reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    VOID            reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)
    $end            reduce using rule 31 (func_declaration -> type TIMES ID LBRACE params RBRACE stmt_block .)


state 282

    (35) func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .

    INT             reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    FLOAT           reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    VOID            reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)
    $end            reduce using rule 35 (func_declaration -> type TIMES ID LBRACE params RBRACKET stmt_block .)


state 283

    (32) func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .

    INT             reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    FLOAT           reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    VOID            reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)
    $end            reduce using rule 32 (func_declaration -> type TIMES ID LBRACKET params RBRACE stmt_block .)


state 284

    (33) func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .

    INT             reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    FLOAT           reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    VOID            reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)
    $end            reduce using rule 33 (func_declaration -> type TIMES ID LBRACKET params RPAREN stmt_block .)


state 285

    (36) func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .

    INT             reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    FLOAT           reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    VOID            reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)
    $end            reduce using rule 36 (func_declaration -> type TIMES ID LBRACKET params RBRACKET stmt_block .)


state 286

    (98) mstmt -> IF LPAREN expr . RPAREN mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN expr . RPAREN genstmt
    (101) umstmt -> IF LPAREN expr . RPAREN mstmt ELSE umstmt

    RPAREN          shift and go to state 317


state 287

    (164) arith_expr -> LPAREN arith_expr RPAREN .

    PLUS            reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    MINUS           reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    TIMES           reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    DIV             reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    EQ              reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    NEQ             reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    GT              reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    LT              reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    SEMICOLON       reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    error           reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    RPAREN          reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    COMMA           reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    RBRACE          reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)
    RBRACKET        reduce using rule 164 (arith_expr -> LPAREN arith_expr RPAREN .)


state 288

    (172) arith_expr -> TIMES ID .
    (174) arith_expr -> TIMES ID . LPAREN argument_list RPAREN
    (177) arith_expr -> TIMES ID . LBRACKET arith_expr RBRACKET

    RPAREN          reduce using rule 172 (arith_expr -> TIMES ID .)
    PLUS            reduce using rule 172 (arith_expr -> TIMES ID .)
    MINUS           reduce using rule 172 (arith_expr -> TIMES ID .)
    TIMES           reduce using rule 172 (arith_expr -> TIMES ID .)
    DIV             reduce using rule 172 (arith_expr -> TIMES ID .)
    EQ              reduce using rule 172 (arith_expr -> TIMES ID .)
    NEQ             reduce using rule 172 (arith_expr -> TIMES ID .)
    GT              reduce using rule 172 (arith_expr -> TIMES ID .)
    LT              reduce using rule 172 (arith_expr -> TIMES ID .)
    SEMICOLON       reduce using rule 172 (arith_expr -> TIMES ID .)
    error           reduce using rule 172 (arith_expr -> TIMES ID .)
    COMMA           reduce using rule 172 (arith_expr -> TIMES ID .)
    RBRACE          reduce using rule 172 (arith_expr -> TIMES ID .)
    RBRACKET        reduce using rule 172 (arith_expr -> TIMES ID .)
    LPAREN          shift and go to state 305
    LBRACKET        shift and go to state 306


state 289

    (176) arith_expr -> ID LBRACKET . arith_expr RBRACKET
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 318

state 290

    (109) stmt -> PRINT LPAREN argument_list . RPAREN SEMICOLON
    (180) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 319
    COMMA           shift and go to state 320


state 291

    (179) argument_list -> argument .

    RPAREN          reduce using rule 179 (argument_list -> argument .)
    COMMA           reduce using rule 179 (argument_list -> argument .)
    RBRACE          reduce using rule 179 (argument_list -> argument .)
    RBRACKET        reduce using rule 179 (argument_list -> argument .)
    SEMICOLON       reduce using rule 179 (argument_list -> argument .)


state 292

    (181) argument -> empty .

    RPAREN          reduce using rule 181 (argument -> empty .)
    COMMA           reduce using rule 181 (argument -> empty .)
    RBRACE          reduce using rule 181 (argument -> empty .)
    RBRACKET        reduce using rule 181 (argument -> empty .)
    SEMICOLON       reduce using rule 181 (argument -> empty .)


state 293

    (182) argument -> arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          reduce using rule 182 (argument -> arith_expr .)
    COMMA           reduce using rule 182 (argument -> arith_expr .)
    RBRACE          reduce using rule 182 (argument -> arith_expr .)
    RBRACKET        reduce using rule 182 (argument -> arith_expr .)
    SEMICOLON       reduce using rule 182 (argument -> arith_expr .)
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 294

    (183) argument -> LITERAL .

    RPAREN          reduce using rule 183 (argument -> LITERAL .)
    COMMA           reduce using rule 183 (argument -> LITERAL .)
    RBRACE          reduce using rule 183 (argument -> LITERAL .)
    RBRACKET        reduce using rule 183 (argument -> LITERAL .)
    SEMICOLON       reduce using rule 183 (argument -> LITERAL .)


state 295

    (184) argument -> error .

    RPAREN          reduce using rule 184 (argument -> error .)
    COMMA           reduce using rule 184 (argument -> error .)
    RBRACE          reduce using rule 184 (argument -> error .)
    RBRACKET        reduce using rule 184 (argument -> error .)
    SEMICOLON       reduce using rule 184 (argument -> error .)


state 296

    (110) stmt -> PRINT error argument_list . RPAREN SEMICOLON
    (111) stmt -> PRINT error argument_list . RBRACE SEMICOLON
    (112) stmt -> PRINT error argument_list . RBRACKET SEMICOLON
    (113) stmt -> PRINT error argument_list . SEMICOLON
    (180) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 321
    RBRACE          shift and go to state 323
    RBRACKET        shift and go to state 324
    SEMICOLON       shift and go to state 322
    COMMA           shift and go to state 320


state 297

    (150) expr -> ID EQUAL expr .

    SEMICOLON       reduce using rule 150 (expr -> ID EQUAL expr .)
    error           reduce using rule 150 (expr -> ID EQUAL expr .)
    RPAREN          reduce using rule 150 (expr -> ID EQUAL expr .)
    RBRACE          reduce using rule 150 (expr -> ID EQUAL expr .)
    RBRACKET        reduce using rule 150 (expr -> ID EQUAL expr .)


state 298

    (151) expr -> ID LBRACKET arith_expr . RBRACKET EQUAL expr
    (176) arith_expr -> ID LBRACKET arith_expr . RBRACKET
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 325
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 299

    (178) arith_expr -> ID LPAREN argument_list . RPAREN
    (180) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 326
    COMMA           shift and go to state 320


state 300

    (165) arith_expr -> arith_expr PLUS arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    MINUS           reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    EQ              reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    NEQ             reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    GT              reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    LT              reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    SEMICOLON       reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    error           reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    RPAREN          reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    COMMA           reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    RBRACE          reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    RBRACKET        reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .)
    TIMES           shift and go to state 257
    DIV             shift and go to state 258

  ! TIMES           [ reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .) ]
  ! DIV             [ reduce using rule 165 (arith_expr -> arith_expr PLUS arith_expr .) ]
  ! PLUS            [ shift and go to state 255 ]
  ! MINUS           [ shift and go to state 256 ]


state 301

    (166) arith_expr -> arith_expr MINUS arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    MINUS           reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    EQ              reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    NEQ             reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    GT              reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    LT              reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    SEMICOLON       reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    error           reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    RPAREN          reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    COMMA           reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    RBRACE          reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    RBRACKET        reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .)
    TIMES           shift and go to state 257
    DIV             shift and go to state 258

  ! TIMES           [ reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .) ]
  ! DIV             [ reduce using rule 166 (arith_expr -> arith_expr MINUS arith_expr .) ]
  ! PLUS            [ shift and go to state 255 ]
  ! MINUS           [ shift and go to state 256 ]


state 302

    (167) arith_expr -> arith_expr TIMES arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    MINUS           reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    TIMES           reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    DIV             reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    EQ              reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    NEQ             reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    GT              reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    LT              reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    SEMICOLON       reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    error           reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    RPAREN          reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    COMMA           reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    RBRACE          reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)
    RBRACKET        reduce using rule 167 (arith_expr -> arith_expr TIMES arith_expr .)

  ! PLUS            [ shift and go to state 255 ]
  ! MINUS           [ shift and go to state 256 ]
  ! TIMES           [ shift and go to state 257 ]
  ! DIV             [ shift and go to state 258 ]


state 303

    (168) arith_expr -> arith_expr DIV arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    PLUS            reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    MINUS           reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    TIMES           reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    DIV             reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    EQ              reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    NEQ             reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    GT              reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    LT              reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    SEMICOLON       reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    error           reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    RPAREN          reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    COMMA           reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    RBRACE          reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)
    RBRACKET        reduce using rule 168 (arith_expr -> arith_expr DIV arith_expr .)

  ! PLUS            [ shift and go to state 255 ]
  ! MINUS           [ shift and go to state 256 ]
  ! TIMES           [ shift and go to state 257 ]
  ! DIV             [ shift and go to state 258 ]


state 304

    (152) expr -> TIMES ID EQUAL . expr
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 327
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 305

    (174) arith_expr -> TIMES ID LPAREN . argument_list RPAREN
    (179) argument_list -> . argument
    (180) argument_list -> . argument_list COMMA argument
    (181) argument -> . empty
    (182) argument -> . arith_expr
    (183) argument -> . LITERAL
    (184) argument -> . error
    (185) empty -> .
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 294
    error           shift and go to state 295
    RPAREN          reduce using rule 185 (empty -> .)
    COMMA           reduce using rule 185 (empty -> .)
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    argument_list                  shift and go to state 328
    argument                       shift and go to state 291
    empty                          shift and go to state 292
    arith_expr                     shift and go to state 293

state 306

    (177) arith_expr -> TIMES ID LBRACKET . arith_expr RBRACKET
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 329

state 307

    (173) arith_expr -> TIMES LPAREN arith_expr . RPAREN
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RPAREN          shift and go to state 330
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 308

    (155) basic_expr -> basic_expr compare arith_expr .
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    EQ              reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    NEQ             reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    GT              reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    LT              reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    SEMICOLON       reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    error           reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    RPAREN          reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    RBRACE          reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    RBRACKET        reduce using rule 155 (basic_expr -> basic_expr compare arith_expr .)
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 309

    (134) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 331


state 310

    (164) arith_expr -> LPAREN arith_expr . RPAREN
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr
    (156) basic_expr -> arith_expr .

    RPAREN          shift and go to state 287
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258
    EQ              reduce using rule 156 (basic_expr -> arith_expr .)
    NEQ             reduce using rule 156 (basic_expr -> arith_expr .)
    GT              reduce using rule 156 (basic_expr -> arith_expr .)
    LT              reduce using rule 156 (basic_expr -> arith_expr .)
    SEMICOLON       reduce using rule 156 (basic_expr -> arith_expr .)


state 311

    (150) expr -> ID . EQUAL expr
    (151) expr -> ID . LBRACKET arith_expr RBRACKET EQUAL expr
    (169) arith_expr -> ID .
    (176) arith_expr -> ID . LBRACKET arith_expr RBRACKET
    (178) arith_expr -> ID . LPAREN argument_list RPAREN
    (161) incr_expr -> ID . INCREMENT

    EQUAL           shift and go to state 251
    LBRACKET        shift and go to state 252
    RPAREN          reduce using rule 169 (arith_expr -> ID .)
    PLUS            reduce using rule 169 (arith_expr -> ID .)
    MINUS           reduce using rule 169 (arith_expr -> ID .)
    TIMES           reduce using rule 169 (arith_expr -> ID .)
    DIV             reduce using rule 169 (arith_expr -> ID .)
    EQ              reduce using rule 169 (arith_expr -> ID .)
    NEQ             reduce using rule 169 (arith_expr -> ID .)
    GT              reduce using rule 169 (arith_expr -> ID .)
    LT              reduce using rule 169 (arith_expr -> ID .)
    SEMICOLON       reduce using rule 169 (arith_expr -> ID .)
    LPAREN          shift and go to state 254
    INCREMENT       shift and go to state 253


state 312

    (143) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> FOR expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 332
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 313

    (136) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (141) stmt_forloop -> FOR LBRACE expr . SEMICOLON expr SEMICOLON error RBRACKET stmt

    SEMICOLON       shift and go to state 333


state 314

    (138) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET expr . SEMICOLON expr SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 334


state 315

    (146) stmt_return -> RETURN expr SEMICOLON .

    RBRACE          reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    IF              reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    SEMICOLON       reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    PRINT           reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    ID              reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    TIMES           reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    LBRACE          reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    INCREMENT       reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    INT             reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    FLOAT           reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    VOID            reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    MINUS           reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    FNUM            reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    INUM            reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    ADDRESS         reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 146 (stmt_return -> RETURN expr SEMICOLON .)


state 316

    (147) stmt_return -> RETURN expr error .

    RBRACE          reduce using rule 147 (stmt_return -> RETURN expr error .)
    IF              reduce using rule 147 (stmt_return -> RETURN expr error .)
    SEMICOLON       reduce using rule 147 (stmt_return -> RETURN expr error .)
    PRINT           reduce using rule 147 (stmt_return -> RETURN expr error .)
    ID              reduce using rule 147 (stmt_return -> RETURN expr error .)
    TIMES           reduce using rule 147 (stmt_return -> RETURN expr error .)
    LBRACE          reduce using rule 147 (stmt_return -> RETURN expr error .)
    FOR             reduce using rule 147 (stmt_return -> RETURN expr error .)
    RETURN          reduce using rule 147 (stmt_return -> RETURN expr error .)
    INCREMENT       reduce using rule 147 (stmt_return -> RETURN expr error .)
    INT             reduce using rule 147 (stmt_return -> RETURN expr error .)
    FLOAT           reduce using rule 147 (stmt_return -> RETURN expr error .)
    VOID            reduce using rule 147 (stmt_return -> RETURN expr error .)
    MINUS           reduce using rule 147 (stmt_return -> RETURN expr error .)
    LPAREN          reduce using rule 147 (stmt_return -> RETURN expr error .)
    FNUM            reduce using rule 147 (stmt_return -> RETURN expr error .)
    INUM            reduce using rule 147 (stmt_return -> RETURN expr error .)
    ADDRESS         reduce using rule 147 (stmt_return -> RETURN expr error .)
    ELSE            reduce using rule 147 (stmt_return -> RETURN expr error .)


state 317

    (98) mstmt -> IF LPAREN expr RPAREN . mstmt ELSE mstmt
    (100) umstmt -> IF LPAREN expr RPAREN . genstmt
    (101) umstmt -> IF LPAREN expr RPAREN . mstmt ELSE umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (96) genstmt -> . mstmt
    (97) genstmt -> . umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    IF              shift and go to state 180
    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    mstmt                          shift and go to state 335
    genstmt                        shift and go to state 336
    umstmt                         shift and go to state 179
    stmt                           shift and go to state 183
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 318

    (176) arith_expr -> ID LBRACKET arith_expr . RBRACKET
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 337
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 319

    (109) stmt -> PRINT LPAREN argument_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 338


state 320

    (180) argument_list -> argument_list COMMA . argument
    (181) argument -> . empty
    (182) argument -> . arith_expr
    (183) argument -> . LITERAL
    (184) argument -> . error
    (185) empty -> .
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    LITERAL         shift and go to state 294
    error           shift and go to state 295
    RPAREN          reduce using rule 185 (empty -> .)
    COMMA           reduce using rule 185 (empty -> .)
    RBRACE          reduce using rule 185 (empty -> .)
    RBRACKET        reduce using rule 185 (empty -> .)
    SEMICOLON       reduce using rule 185 (empty -> .)
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    ID              shift and go to state 245
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    TIMES           shift and go to state 244
    ADDRESS         shift and go to state 202

    argument                       shift and go to state 339
    empty                          shift and go to state 292
    arith_expr                     shift and go to state 293

state 321

    (110) stmt -> PRINT error argument_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 340


state 322

    (113) stmt -> PRINT error argument_list SEMICOLON .

    RBRACE          reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    IF              reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    SEMICOLON       reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    PRINT           reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    ID              reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    TIMES           reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    LBRACE          reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    FOR             reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    RETURN          reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    INCREMENT       reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    INT             reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    FLOAT           reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    VOID            reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    MINUS           reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    LPAREN          reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    FNUM            reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    INUM            reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    ADDRESS         reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)
    ELSE            reduce using rule 113 (stmt -> PRINT error argument_list SEMICOLON .)


state 323

    (111) stmt -> PRINT error argument_list RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 341


state 324

    (112) stmt -> PRINT error argument_list RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 342


state 325

    (151) expr -> ID LBRACKET arith_expr RBRACKET . EQUAL expr
    (176) arith_expr -> ID LBRACKET arith_expr RBRACKET .

    EQUAL           shift and go to state 343
    PLUS            reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RPAREN          reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)


state 326

    (178) arith_expr -> ID LPAREN argument_list RPAREN .

    PLUS            reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    DIV             reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    error           reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 178 (arith_expr -> ID LPAREN argument_list RPAREN .)


state 327

    (152) expr -> TIMES ID EQUAL expr .

    SEMICOLON       reduce using rule 152 (expr -> TIMES ID EQUAL expr .)
    error           reduce using rule 152 (expr -> TIMES ID EQUAL expr .)
    RPAREN          reduce using rule 152 (expr -> TIMES ID EQUAL expr .)
    RBRACE          reduce using rule 152 (expr -> TIMES ID EQUAL expr .)
    RBRACKET        reduce using rule 152 (expr -> TIMES ID EQUAL expr .)


state 328

    (174) arith_expr -> TIMES ID LPAREN argument_list . RPAREN
    (180) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 344
    COMMA           shift and go to state 320


state 329

    (177) arith_expr -> TIMES ID LBRACKET arith_expr . RBRACKET
    (165) arith_expr -> arith_expr . PLUS arith_expr
    (166) arith_expr -> arith_expr . MINUS arith_expr
    (167) arith_expr -> arith_expr . TIMES arith_expr
    (168) arith_expr -> arith_expr . DIV arith_expr

    RBRACKET        shift and go to state 345
    PLUS            shift and go to state 255
    MINUS           shift and go to state 256
    TIMES           shift and go to state 257
    DIV             shift and go to state 258


state 330

    (173) arith_expr -> TIMES LPAREN arith_expr RPAREN .

    PLUS            reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    MINUS           reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    TIMES           reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    DIV             reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    EQ              reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    NEQ             reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    GT              reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    LT              reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    SEMICOLON       reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    error           reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RPAREN          reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    COMMA           reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RBRACE          reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)
    RBRACKET        reduce using rule 173 (arith_expr -> TIMES LPAREN arith_expr RPAREN .)


state 331

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 346
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 332

    (143) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> FOR expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 347


state 333

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON . expr SEMICOLON error RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 348
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 334

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON . expr SEMICOLON expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 349
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 335

    (98) mstmt -> IF LPAREN expr RPAREN mstmt . ELSE mstmt
    (101) umstmt -> IF LPAREN expr RPAREN mstmt . ELSE umstmt
    (96) genstmt -> mstmt .

    ELSE            shift and go to state 350
    RBRACE          reduce using rule 96 (genstmt -> mstmt .)
    IF              reduce using rule 96 (genstmt -> mstmt .)
    SEMICOLON       reduce using rule 96 (genstmt -> mstmt .)
    PRINT           reduce using rule 96 (genstmt -> mstmt .)
    ID              reduce using rule 96 (genstmt -> mstmt .)
    TIMES           reduce using rule 96 (genstmt -> mstmt .)
    LBRACE          reduce using rule 96 (genstmt -> mstmt .)
    FOR             reduce using rule 96 (genstmt -> mstmt .)
    RETURN          reduce using rule 96 (genstmt -> mstmt .)
    INCREMENT       reduce using rule 96 (genstmt -> mstmt .)
    INT             reduce using rule 96 (genstmt -> mstmt .)
    FLOAT           reduce using rule 96 (genstmt -> mstmt .)
    VOID            reduce using rule 96 (genstmt -> mstmt .)
    MINUS           reduce using rule 96 (genstmt -> mstmt .)
    LPAREN          reduce using rule 96 (genstmt -> mstmt .)
    FNUM            reduce using rule 96 (genstmt -> mstmt .)
    INUM            reduce using rule 96 (genstmt -> mstmt .)
    ADDRESS         reduce using rule 96 (genstmt -> mstmt .)


state 336

    (100) umstmt -> IF LPAREN expr RPAREN genstmt .

    RBRACE          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    IF              reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    SEMICOLON       reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    PRINT           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    ID              reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    TIMES           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    LBRACE          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FOR             reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    RETURN          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INCREMENT       reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INT             reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FLOAT           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    VOID            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    MINUS           reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    LPAREN          reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    FNUM            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    INUM            reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)
    ADDRESS         reduce using rule 100 (umstmt -> IF LPAREN expr RPAREN genstmt .)


state 337

    (176) arith_expr -> ID LBRACKET arith_expr RBRACKET .

    RPAREN          reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    PLUS            reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    COMMA           reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 176 (arith_expr -> ID LBRACKET arith_expr RBRACKET .)


state 338

    (109) stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 109 (stmt -> PRINT LPAREN argument_list RPAREN SEMICOLON .)


state 339

    (180) argument_list -> argument_list COMMA argument .

    RPAREN          reduce using rule 180 (argument_list -> argument_list COMMA argument .)
    COMMA           reduce using rule 180 (argument_list -> argument_list COMMA argument .)
    RBRACE          reduce using rule 180 (argument_list -> argument_list COMMA argument .)
    RBRACKET        reduce using rule 180 (argument_list -> argument_list COMMA argument .)
    SEMICOLON       reduce using rule 180 (argument_list -> argument_list COMMA argument .)


state 340

    (110) stmt -> PRINT error argument_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    TIMES           reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    MINUS           reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    FNUM            reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    INUM            reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 110 (stmt -> PRINT error argument_list RPAREN SEMICOLON .)


state 341

    (111) stmt -> PRINT error argument_list RBRACE SEMICOLON .

    RBRACE          reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    IF              reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    SEMICOLON       reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    PRINT           reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ID              reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    TIMES           reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    LBRACE          reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FOR             reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    RETURN          reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INT             reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FLOAT           reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    VOID            reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    MINUS           reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    LPAREN          reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    FNUM            reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    INUM            reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ADDRESS         reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)
    ELSE            reduce using rule 111 (stmt -> PRINT error argument_list RBRACE SEMICOLON .)


state 342

    (112) stmt -> PRINT error argument_list RBRACKET SEMICOLON .

    RBRACE          reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    IF              reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ID              reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    TIMES           reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INT             reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    MINUS           reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    FNUM            reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    INUM            reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ADDRESS         reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)
    ELSE            reduce using rule 112 (stmt -> PRINT error argument_list RBRACKET SEMICOLON .)


state 343

    (151) expr -> ID LBRACKET arith_expr RBRACKET EQUAL . expr
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    arith_expr                     shift and go to state 191
    expr                           shift and go to state 351
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 344

    (174) arith_expr -> TIMES ID LPAREN argument_list RPAREN .

    PLUS            reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    DIV             reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    error           reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 174 (arith_expr -> TIMES ID LPAREN argument_list RPAREN .)


state 345

    (177) arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .

    PLUS            reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    MINUS           reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    TIMES           reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    DIV             reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    EQ              reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    NEQ             reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    GT              reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    LT              reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    SEMICOLON       reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    error           reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RPAREN          reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    COMMA           reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RBRACE          reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)
    RBRACKET        reduce using rule 177 (arith_expr -> TIMES ID LBRACKET arith_expr RBRACKET .)


state 346

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 352


state 347

    (143) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (144) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (145) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 353
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 348

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON expr . SEMICOLON error RBRACKET stmt

    SEMICOLON       shift and go to state 354


state 349

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr . SEMICOLON expr RBRACKET stmt

    SEMICOLON       shift and go to state 355


state 350

    (98) mstmt -> IF LPAREN expr RPAREN mstmt ELSE . mstmt
    (101) umstmt -> IF LPAREN expr RPAREN mstmt ELSE . umstmt
    (98) mstmt -> . IF LPAREN expr RPAREN mstmt ELSE mstmt
    (99) mstmt -> . stmt
    (100) umstmt -> . IF LPAREN expr RPAREN genstmt
    (101) umstmt -> . IF LPAREN expr RPAREN mstmt ELSE umstmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    IF              shift and go to state 180
    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    mstmt                          shift and go to state 356
    umstmt                         shift and go to state 357
    stmt                           shift and go to state 183
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 351

    (151) expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .

    SEMICOLON       reduce using rule 151 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    error           reduce using rule 151 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RPAREN          reduce using rule 151 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RBRACE          reduce using rule 151 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)
    RBRACKET        reduce using rule 151 (expr -> ID LBRACKET arith_expr RBRACKET EQUAL expr .)


state 352

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 358
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 353

    (143) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (144) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (145) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RPAREN          shift and go to state 359
    RBRACE          shift and go to state 360
    RBRACKET        shift and go to state 361


state 354

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON . error RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    error           shift and go to state 363
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 362
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 355

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON . expr RBRACKET stmt
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 190
    TIMES           shift and go to state 192
    INCREMENT       shift and go to state 198
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 364
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194

state 356

    (98) mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .

    RBRACE          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    IF              reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    SEMICOLON       reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    PRINT           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ID              reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    TIMES           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    LBRACE          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FOR             reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    RETURN          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INCREMENT       reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INT             reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FLOAT           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    VOID            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    MINUS           reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    LPAREN          reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    FNUM            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    INUM            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ADDRESS         reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)
    ELSE            reduce using rule 98 (mstmt -> IF LPAREN expr RPAREN mstmt ELSE mstmt .)


state 357

    (101) umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .

    RBRACE          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    IF              reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    SEMICOLON       reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    PRINT           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    ID              reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    TIMES           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    LBRACE          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FOR             reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    RETURN          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INCREMENT       reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INT             reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FLOAT           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    VOID            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    MINUS           reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    LPAREN          reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    FNUM            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    INUM            reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)
    ADDRESS         reduce using rule 101 (umstmt -> IF LPAREN expr RPAREN mstmt ELSE umstmt .)


state 358

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RPAREN          shift and go to state 365
    RBRACE          shift and go to state 366
    RBRACKET        shift and go to state 367


state 359

    (143) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 368
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 360

    (144) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 369
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 361

    (145) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 370
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 362

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr . RBRACE stmt

    RPAREN          shift and go to state 371
    RBRACE          shift and go to state 372


state 363

    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error . RBRACKET stmt

    RBRACKET        shift and go to state 373


state 364

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RBRACE stmt
    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RPAREN stmt
    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr . RBRACKET stmt

    RBRACE          shift and go to state 374
    RPAREN          shift and go to state 375
    RBRACKET        shift and go to state 376


state 365

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 377
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 366

    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 378
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 367

    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 379
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 368

    (143) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACE          reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 143 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 369

    (144) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACE          reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 144 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 370

    (145) stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACE          reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 145 (stmt_forloop -> FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)


state 371

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 380
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 372

    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 381
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 373

    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 382
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 374

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 383
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 375

    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 384
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 376

    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET . stmt
    (102) stmt -> . expr SEMICOLON
    (103) stmt -> . declaration SEMICOLON
    (104) stmt -> . stmt_block
    (105) stmt -> . stmt_forloop
    (106) stmt -> . stmt_return
    (107) stmt -> . SEMICOLON
    (108) stmt -> . expr error
    (109) stmt -> . PRINT LPAREN argument_list RPAREN SEMICOLON
    (110) stmt -> . PRINT error argument_list RPAREN SEMICOLON
    (111) stmt -> . PRINT error argument_list RBRACE SEMICOLON
    (112) stmt -> . PRINT error argument_list RBRACKET SEMICOLON
    (113) stmt -> . PRINT error argument_list SEMICOLON
    (150) expr -> . ID EQUAL expr
    (151) expr -> . ID LBRACKET arith_expr RBRACKET EQUAL expr
    (152) expr -> . TIMES ID EQUAL expr
    (153) expr -> . incr_expr
    (154) expr -> . basic_expr
    (114) declaration -> . declaration COMMA idbracket
    (115) declaration -> . declaration COMMA TIMES idbracket
    (116) declaration -> . type idbracket
    (117) declaration -> . type TIMES idbracket
    (131) stmt_block -> . LBRACE stmt_list RBRACE
    (134) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (135) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (136) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (137) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (138) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (139) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (140) stmt_forloop -> . FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (141) stmt_forloop -> . FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt
    (142) stmt_forloop -> . FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (143) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RPAREN stmt
    (144) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACE stmt
    (145) stmt_forloop -> . FOR expr SEMICOLON expr SEMICOLON expr RBRACKET stmt
    (146) stmt_return -> . RETURN expr SEMICOLON
    (147) stmt_return -> . RETURN expr error
    (148) stmt_return -> . RETURN SEMICOLON
    (149) stmt_return -> . RETURN error
    (161) incr_expr -> . ID INCREMENT
    (162) incr_expr -> . INCREMENT ID
    (155) basic_expr -> . basic_expr compare arith_expr
    (156) basic_expr -> . arith_expr
    (128) type -> . INT
    (129) type -> . FLOAT
    (130) type -> . VOID
    (163) arith_expr -> . MINUS arith_expr
    (164) arith_expr -> . LPAREN arith_expr RPAREN
    (165) arith_expr -> . arith_expr PLUS arith_expr
    (166) arith_expr -> . arith_expr MINUS arith_expr
    (167) arith_expr -> . arith_expr TIMES arith_expr
    (168) arith_expr -> . arith_expr DIV arith_expr
    (169) arith_expr -> . ID
    (170) arith_expr -> . FNUM
    (171) arith_expr -> . INUM
    (172) arith_expr -> . TIMES ID
    (173) arith_expr -> . TIMES LPAREN arith_expr RPAREN
    (174) arith_expr -> . TIMES ID LPAREN argument_list RPAREN
    (175) arith_expr -> . ADDRESS ID
    (176) arith_expr -> . ID LBRACKET arith_expr RBRACKET
    (177) arith_expr -> . TIMES ID LBRACKET arith_expr RBRACKET
    (178) arith_expr -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 184
    PRINT           shift and go to state 189
    ID              shift and go to state 190
    TIMES           shift and go to state 192
    LBRACE          shift and go to state 49
    FOR             shift and go to state 196
    RETURN          shift and go to state 197
    INCREMENT       shift and go to state 198
    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    VOID            shift and go to state 9
    MINUS           shift and go to state 199
    LPAREN          shift and go to state 181
    FNUM            shift and go to state 200
    INUM            shift and go to state 201
    ADDRESS         shift and go to state 202

    expr                           shift and go to state 182
    stmt                           shift and go to state 385
    declaration                    shift and go to state 185
    stmt_block                     shift and go to state 186
    stmt_forloop                   shift and go to state 187
    stmt_return                    shift and go to state 188
    arith_expr                     shift and go to state 191
    incr_expr                      shift and go to state 193
    basic_expr                     shift and go to state 194
    type                           shift and go to state 195

state 377

    (134) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACE          reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 134 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 378

    (135) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACE          reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 135 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 379

    (140) stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACE          reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 140 (stmt_forloop -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)


state 380

    (136) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACE          reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 136 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 381

    (137) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACE          reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 137 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 382

    (141) stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .

    RBRACE          reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    IF              reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    SEMICOLON       reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    PRINT           reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ID              reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    TIMES           reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    LBRACE          reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FOR             reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    RETURN          reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INCREMENT       reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INT             reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FLOAT           reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    VOID            reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    MINUS           reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    LPAREN          reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    FNUM            reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    INUM            reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ADDRESS         reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)
    ELSE            reduce using rule 141 (stmt_forloop -> FOR LBRACE expr SEMICOLON expr SEMICOLON error RBRACKET stmt .)


state 383

    (138) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .

    RBRACE          reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    IF              reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    SEMICOLON       reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    PRINT           reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ID              reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    TIMES           reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LBRACE          reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FOR             reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    RETURN          reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INCREMENT       reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INT             reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FLOAT           reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    VOID            reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    MINUS           reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    LPAREN          reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    FNUM            reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    INUM            reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ADDRESS         reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)
    ELSE            reduce using rule 138 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACE stmt .)


state 384

    (139) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .

    RBRACE          reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    IF              reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    SEMICOLON       reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    PRINT           reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ID              reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    TIMES           reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LBRACE          reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FOR             reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    RETURN          reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INCREMENT       reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INT             reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FLOAT           reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    VOID            reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    MINUS           reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    LPAREN          reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    FNUM            reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    INUM            reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ADDRESS         reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)
    ELSE            reduce using rule 139 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RPAREN stmt .)


state 385

    (142) stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .

    RBRACE          reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    IF              reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    SEMICOLON       reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    PRINT           reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ID              reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    TIMES           reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LBRACE          reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FOR             reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    RETURN          reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INCREMENT       reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INT             reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FLOAT           reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    VOID            reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    MINUS           reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    LPAREN          reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    FNUM            reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    INUM            reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ADDRESS         reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)
    ELSE            reduce using rule 142 (stmt_forloop -> FOR LBRACKET expr SEMICOLON expr SEMICOLON expr RBRACKET stmt .)

